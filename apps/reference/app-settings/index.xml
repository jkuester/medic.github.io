<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Community Health Toolkit â€“ app_settings.json</title><link>https://docs.communityhealthtoolkit.org/beta/apps/reference/app-settings/</link><description>Recent content in app_settings.json on Community Health Toolkit</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://docs.communityhealthtoolkit.org/beta/apps/reference/app-settings/index.xml" rel="self" type="application/rss+xml"/><item><title>Apps: .contact_types</title><link>https://docs.communityhealthtoolkit.org/beta/apps/reference/app-settings/hierarchy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/app-settings/hierarchy/</guid><description>
&lt;p>From 3.7.0 it is possible to configure what types of places and people are available by modifying the &lt;code>contact_types&lt;/code> array in the app settings. Each type has the following properties.&lt;/p>
&lt;h3 id="app_settingsjson-contact_types">&lt;code>app_settings.json .contact_types[]&lt;/code>&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Property&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Required&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>id&lt;/code>&lt;/td>
&lt;td>String identifier for the type. At times this will be used to sort the contacts in the UI so it is recommended to using a number prefix with gaps between numbers, eg: &lt;code>10-district&lt;/code>, &lt;code>20-region&lt;/code>, etc.&lt;/td>
&lt;td>Yes.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>name_key&lt;/code>&lt;/td>
&lt;td>The translation key used for the title for the contact profile.&lt;/td>
&lt;td>No, defaults to &amp;lsquo;contact.profile&amp;rsquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>group_key&lt;/code>&lt;/td>
&lt;td>The translation key used for the title of a list of contacts of this type.&lt;/td>
&lt;td>Yes.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>create_key&lt;/code>&lt;/td>
&lt;td>The translation key used on the button for creating new contacts of this type.&lt;/td>
&lt;td>Yes.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>edit_key&lt;/code>&lt;/td>
&lt;td>The translation key used on the button for editing contacts of this type.&lt;/td>
&lt;td>Yes.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>primary_contact_key&lt;/code>&lt;/td>
&lt;td>The translation key used to identify a person as the primary contact of contacts of this type.&lt;/td>
&lt;td>No, defaults to &amp;lsquo;Primary contact&amp;rsquo;.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>parents&lt;/code>&lt;/td>
&lt;td>An array of strings of IDs of parent types. If more than one then this type can appear in different places in the hierarchy. If more than one type lists the same type as a parent then a user will get a dropdown of places to create. If no parents then contacts of this type will be at the top of the hierarchy and cannot be added as a child of any contact.&lt;/td>
&lt;td>No, defaults to no parents.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>icon&lt;/code>&lt;/td>
&lt;td>The string ID for the icon to show beside contacts of this type.&lt;/td>
&lt;td>Yes.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>create_form&lt;/code>&lt;/td>
&lt;td>The string ID for the xform used to create contacts of this type.&lt;/td>
&lt;td>Yes.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>edit_form&lt;/code>&lt;/td>
&lt;td>The string ID for the xform used to edit contacts of this type.&lt;/td>
&lt;td>No, defaults to the create_form.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>count_visits&lt;/code>&lt;/td>
&lt;td>Whether or not to show a count of visits for contacts of this type. Requires UHC to be enabled.&lt;/td>
&lt;td>No, defaults to &lt;code>false&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>person&lt;/code>&lt;/td>
&lt;td>Whether this is a person type or a place type.&lt;/td>
&lt;td>No, defaults to &lt;code>false&lt;/code>.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="forms">Forms&lt;/h3>
&lt;p>When creating contacts the type will be automatically assigned based on the button the user clicked. However if the form also creates sibling or child contacts these nested sections must specify a &lt;code>type&lt;/code> field with a hardcoded value of &amp;ldquo;contact&amp;rdquo; and a &lt;code>contact_type&lt;/code> field with the ID of the desired contact type.&lt;/p>
&lt;h3 id="changing-the-configuration">Changing the configuration&lt;/h3>
&lt;p>You can change any contact type configuration easily except for the IDs. To change the ID of a contact type in configuration of a project which already has contact data the contact docs will also have be updated to have a &lt;code>type&lt;/code> of &amp;ldquo;contact&amp;rdquo; and a &lt;code>contact_type&lt;/code> with the new ID of the contact type.&lt;/p>
&lt;h3 id="migration">Migration&lt;/h3>
&lt;p>If you already have person and place documents, switching from using the fixed hierarchy requires that you also update all the exisitng docs. Each contact and report holds the IDs of ancestors in their hierarchy so they will all need to be updated to be consistent with the changes you&amp;rsquo;ve made. You can use the medic-conf &lt;code>move-contacts&lt;/code> command to help with this migration.&lt;/p></description></item><item><title>Apps: .dhisDataSets</title><link>https://docs.communityhealthtoolkit.org/beta/apps/reference/app-settings/dhis2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/app-settings/dhis2/</guid><description>
&lt;p>From 3.9.0 it is possible to integrate with DHIS2 by modifying the &lt;code>dhisDataSets&lt;/code> property in &lt;code>app_settings.json&lt;/code>.&lt;/p>
&lt;p>&lt;em>See Also:&lt;/em> &lt;a href=https://docs.communityhealthtoolkit.org/beta/apps/features/integrations/dhis2/#>DHIS2 Integration&lt;/a>&lt;/p>
&lt;h2 id="app_settingsjs-dhisdatasets">&lt;code>app_settings.js .dhisDataSets[]&lt;/code>&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Property&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Required&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>id&lt;/td>
&lt;td>&lt;code>string&lt;/code>&lt;/td>
&lt;td>The data set id from DHIS2 with which to integrate&lt;/td>
&lt;td>Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>translation_key&lt;/td>
&lt;td>&lt;code>string&lt;/code>&lt;/td>
&lt;td>The translation key of the DHIS2 data set name to be displayed&lt;/td>
&lt;td>Yes&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="code-samples">Code samples&lt;/h2>
&lt;p>Configure the &lt;code>id&lt;/code> and &lt;code>translation_key&lt;/code> of the DHIS2 data set. The &lt;code>id&lt;/code> corresponds to the &lt;code>id&lt;/code> of the data set in the DHIS2 instance you want to integrate with. The &lt;code>translation_key&lt;/code> corresponds to the name of the DHIS2 data set as it appears in the dropdown in the App Management app.&lt;/p>
&lt;h3 id="app_settingsjs">&lt;code>app_settings.js&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#4e9a06">&amp;#34;dhisDataSets&amp;#34;&lt;/span>&lt;span style="color:#a40000">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;VMuFODsyWaO&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;translation_key&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;dhis.dataset.moh515&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#a40000">,&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Apps: .forms</title><link>https://docs.communityhealthtoolkit.org/beta/apps/reference/app-settings/forms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/app-settings/forms/</guid><description>
&lt;p>JSON Forms are used for parsing reports from formatted SMS, SIM applications, and Medic Collect. JSON form definitions are also used for interoperability with third-party systems. Each form is defined as an JSON form object according to the following schema.&lt;/p>
&lt;h2 id="app_settingsjson-forms">&lt;code>app_settings.json .forms[]&lt;/code>&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>property&lt;/th>
&lt;th>type&lt;/th>
&lt;th>description&lt;/th>
&lt;th>required&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>meta&lt;/code>&lt;/td>
&lt;td>object&lt;/td>
&lt;td>Information about the report.&lt;/td>
&lt;td>yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>meta.code&lt;/code>&lt;/td>
&lt;td>string&lt;/td>
&lt;td>The unique form identifier, which will be sent with all reports of this form. Must be the same as the form&amp;rsquo;s key.&lt;/td>
&lt;td>yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>meta.icon&lt;/code>&lt;/td>
&lt;td>string&lt;/td>
&lt;td>Name of the icon resource shown in the app.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>meta.translation_key&lt;/code>&lt;/td>
&lt;td>string&lt;/td>
&lt;td>Name of the form shown in the app.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>fields&lt;/code>&lt;/td>
&lt;td>object&lt;/td>
&lt;td>Collection of field objects included in the form.&lt;/td>
&lt;td>yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>fields.${field}&lt;/code>&lt;/td>
&lt;td>object&lt;/td>
&lt;td>Field that is part of the form.&lt;/td>
&lt;td>yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>fields.${field}.type&lt;/code>&lt;/td>
&lt;td>string&lt;/td>
&lt;td>Data type of field:&lt;br> - &lt;code>&amp;quot;integer&amp;quot;&lt;/code>: a whole number&lt;br> - &lt;code>&amp;quot;string&amp;quot;&lt;/code>: any collection of characters&lt;br> - &lt;code>&amp;quot;date&amp;quot;&lt;/code>: a date in the format &lt;code>YYYY-mm-dd&lt;/code>, for example &amp;ldquo;2019-01-28&amp;quot;&lt;br> - &lt;code>&amp;quot;boolean&amp;quot;&lt;/code>: true or false, represented by the digit &lt;code>1&lt;/code> and &lt;code>0&lt;/code> respectively (native JSON booleans are also supported if sending via JSON)&lt;br> - &lt;code>&amp;quot;custom&amp;quot;&lt;/code>: Only possible for JSON forms that are passed as actual JSON (not an SMS that gets parsed into JSON). Effectively any non-specific data structure, which will be taken without validation.&lt;/td>
&lt;td>yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>fields.${field}.labels&lt;/code>&lt;/td>
&lt;td>object&lt;/td>
&lt;td>&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>fields.${field}.labels.short&lt;/code>&lt;/td>
&lt;td>string, object with &lt;code>translation_key&lt;/code> field, or translation object&lt;/td>
&lt;td>Label shown for field in the app, seen when report is viewed in Reports tab. If missing, label will default to a translation key of &lt;code>report.${form_name}.${field_name}&lt;/code> (eg &lt;code>report.f.patient_id&lt;/code>) which can be translated in the app languages.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>fields.${field}.labels.tiny&lt;/code>&lt;/td>
&lt;td>string&lt;/td>
&lt;td>Unique identifier within the form for this field. Used in form submission to bind values to fields. Not required for all submission formats.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>fields.${field}.position&lt;/code>&lt;/td>
&lt;td>integer&lt;/td>
&lt;td>Zero based order of this field for incoming reports.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>fields.${field}.flags&lt;/code>&lt;/td>
&lt;td>object&lt;/td>
&lt;td>Additional instructions that could be used by form renderers. For instance &lt;code>{ &amp;quot;input_digits_only&amp;quot;: true }&lt;/code> indicated to SIM applications to show the number keyboard. Obsolete.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>fields.${field}.length&lt;/code>&lt;/td>
&lt;td>array with two integers&lt;/td>
&lt;td>Inclusive range accepted for length of the field.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>fields.${field}.required&lt;/code>&lt;/td>
&lt;td>boolean&lt;/td>
&lt;td>Determines if a report without this field is considered valid.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>public_form&lt;/code>&lt;/td>
&lt;td>boolean&lt;/td>
&lt;td>Determines if reports will be accepted from phone numbers not associated to a contact. Set to false if you want to reject reports from unknown senders. Default: true.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>facility_reference&lt;/code>&lt;/td>
&lt;td>string&lt;/td>
&lt;td>The form field whose value is to be used to match the incoming report to a contact&amp;rsquo;s &lt;code>rc_code&lt;/code>. Useful when reports are sent on behalf of a facility by unknown or various phone numbers. Requires the &lt;a href="transitions.md#available-transitions">&lt;code>update_clinics&lt;/code> transition&lt;/a>.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="code-sample">Code Sample&lt;/h2>
&lt;p>The following form has two fields, one for the patient ID, another for notes.&lt;/p>
&lt;h3 id="app_settingsjson">&lt;code>app_settings.json&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json"> &lt;span style="color:#4e9a06">&amp;#34;forms&amp;#34;&lt;/span>&lt;span style="color:#a40000">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;F&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;meta&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;code&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;F&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;icon&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;risk&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;translation_key&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;form.flag.title&amp;#34;&lt;/span> &lt;span style="color:#a40000">//&lt;/span> &lt;span style="color:#a40000">displayed&lt;/span> &lt;span style="color:#a40000">in&lt;/span> &lt;span style="color:#a40000">the&lt;/span> &lt;span style="color:#a40000">webapp&lt;/span>
&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;fields&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;patient_id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span> &lt;span style="color:#a40000">//&lt;/span> &lt;span style="color:#a40000">this&lt;/span> &lt;span style="color:#a40000">is&lt;/span> &lt;span style="color:#a40000">used&lt;/span> &lt;span style="color:#a40000">for&lt;/span> &lt;span style="color:#a40000">the&lt;/span> &lt;span style="color:#a40000">property&lt;/span> &lt;span style="color:#a40000">name&lt;/span> &lt;span style="color:#a40000">when&lt;/span> &lt;span style="color:#a40000">the&lt;/span> &lt;span style="color:#a40000">report&lt;/span> &lt;span style="color:#a40000">doc&lt;/span> &lt;span style="color:#a40000">is&lt;/span> &lt;span style="color:#a40000">created&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;labels&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;short&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;translation_key&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;form.flag.patient_id.short&amp;#34;&lt;/span> &lt;span style="color:#000;font-weight:bold">},&lt;/span> &lt;span style="color:#a40000">//&lt;/span> &lt;span style="color:#a40000">displayed&lt;/span> &lt;span style="color:#a40000">in&lt;/span> &lt;span style="color:#a40000">the&lt;/span> &lt;span style="color:#a40000">webapp&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;tiny&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;pid&amp;#34;&lt;/span> &lt;span style="color:#a40000">//&lt;/span> &lt;span style="color:#a40000">used&lt;/span> &lt;span style="color:#a40000">in&lt;/span> &lt;span style="color:#a40000">form&lt;/span> &lt;span style="color:#a40000">submission&lt;/span> &lt;span style="color:#a40000">to&lt;/span> &lt;span style="color:#a40000">bind&lt;/span> &lt;span style="color:#a40000">values&lt;/span> &lt;span style="color:#a40000">to&lt;/span> &lt;span style="color:#a40000">fields&lt;/span> &lt;span style="color:#a40000">-&lt;/span> &lt;span style="color:#a40000">not&lt;/span> &lt;span style="color:#a40000">required&lt;/span> &lt;span style="color:#a40000">for&lt;/span> &lt;span style="color:#a40000">all&lt;/span> &lt;span style="color:#a40000">submission&lt;/span> &lt;span style="color:#a40000">formats&lt;/span>
&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;position&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#a40000">//&lt;/span> &lt;span style="color:#a40000">specifies&lt;/span> &lt;span style="color:#a40000">where&lt;/span> &lt;span style="color:#a40000">in&lt;/span> &lt;span style="color:#a40000">the&lt;/span> &lt;span style="color:#a40000">SMS&lt;/span> &lt;span style="color:#a40000">this&lt;/span> &lt;span style="color:#a40000">value&lt;/span> &lt;span style="color:#a40000">should&lt;/span> &lt;span style="color:#a40000">be&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;type&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;string&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;length&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">5&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">13&lt;/span> &lt;span style="color:#000;font-weight:bold">],&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;required&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>
&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;notes&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;labels&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;short&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;translation_key&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;form.flag.notes.short&amp;#34;&lt;/span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;tiny&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;form.flag.notes.tiny&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;position&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;type&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;string&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;length&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">100&lt;/span> &lt;span style="color:#000;font-weight:bold">],&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;required&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;public_form&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Apps: .outbound</title><link>https://docs.communityhealthtoolkit.org/beta/apps/reference/app-settings/outbound/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/app-settings/outbound/</guid><description>
&lt;p>&lt;em>Outbound is only available in Medic 3.5.0 and above&lt;/em>&lt;/p>
&lt;p>Outbound push allows configurers to have the creation or editing of CouchDB documents trigger outbound REST requests using the data in that document. For example, upon receiving a referral report you could send that referral to an external facility system that will manage and process that event.&lt;/p>
&lt;p>These triggers can apply to all document types (not just common types such as reports or contacts) and as such care should be taken to only send the documents you intend (see configuration of &lt;code>relevant_to&lt;/code> below).&lt;/p>
&lt;p>This feature is experimental, and may be replaced by some third party technology over time as we discover the feature-set we&amp;rsquo;re looking for.&lt;/p>
&lt;h2 id="configuration">Configuration&lt;/h2>
&lt;p>For outbound pushes to occur, you must &lt;a href="./transitions.md#Configurations">enable the &lt;code>mark_for_outbound&lt;/code> transition in config&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;transitions&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;mark_for_outbound&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The rest of the configuration is against the &lt;code>outbound&lt;/code> configuration property, which allows you to configure as many outbound pushes as you like, keyed off a unique name:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;outbound&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;first config&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;relevant_to&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;...&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;destination&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{},&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;mapping&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{}&lt;/span>
&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;second config&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Each outbound push configuration contains the following properties: &lt;code>relevant_to&lt;/code>, &lt;code>destination&lt;/code> and &lt;code>mapping&lt;/code>.&lt;/p>
&lt;h3 id="relevant_to">relevant_to&lt;/h3>
&lt;p>An &amp;ldquo;expression&amp;rdquo; (some JS code that resolves to a truthy or falsy value) that determines whether this configuration is relevant to a document. The document is passed to the expression as &lt;code>doc&lt;/code>, and if relevant is fully hydrated before being passed (i.e. the attached contact, its parents etc are fully attached instead of just being stubs).&lt;/p>
&lt;p>Example: you want to send a referral to a facility&amp;rsquo;s EMR system when a CHW refers a patient:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;relevant_to&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;doc.type === &amp;#39;data_record&amp;#39; &amp;amp;&amp;amp; doc.form === &amp;#39;referral&amp;#39;&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Note:&lt;/strong> all documents that Sentinel processes can be picked up by your configuration, so it&amp;rsquo;s important to correctly configure &lt;code>relevant_to&lt;/code>. Checking the document type as shown above is probably a good start.&lt;/p>
&lt;h3 id="destination">destination&lt;/h3>
&lt;p>A complex property that defines the details of the connection to the external service. It currently supports several authentication types: basic authentication, HTTP authorization request header, and a custom authentication mode for Muso SIH.&lt;/p>
&lt;p>Basic auth example:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;destination&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;base_url&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;https://example.com&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;auth&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;type&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;basic&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;username&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;admin&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;password_key&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;example.com&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;path&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;/api/v1/referral&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Here &lt;code>password_key&lt;/code> is a key used to find the password in CouchDB&amp;rsquo;s node-based configuration. See Credentials section below.&lt;/p>
&lt;p>If you don&amp;rsquo;t provide an authentication parameter then the request will be sent without authentication.&lt;/p>
&lt;p>As of 3.9, the &lt;code>header&lt;/code> type is also supported, which sends authentication credentials via a HTTP request header: &lt;code>Authorization: '&amp;lt;value&amp;gt;'&lt;/code>. The value is set in the CouchDB configuration, and referred to by the &lt;code>value_key&lt;/code>, similarly to the &lt;code>password_key&lt;/code>. The value must match the credentials needed for the third party tool, and is generally formatted as &lt;code>&amp;lt;type&amp;gt; &amp;lt;credentials&amp;gt;&lt;/code>. For instance, to send data to RapidPro, the value in the configuration would be set to the complete RapidPro API Token: eg &lt;code>Token 123456789abcdef&lt;/code>.&lt;/p>
&lt;p>Header auth example:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;destination&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;base_url&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;https://example.com&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;auth&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;type&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;header&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;name&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Authorization&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;value_key&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;example.com&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;path&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;/api/v1/referral&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="mapping">mapping&lt;/h3>
&lt;p>A complex property that declares how the payload to be sent to the &lt;code>destination&lt;/code> should be created.&lt;/p>
&lt;p>Each key is a string &lt;a href="https://github.com/mariocasciaro/object-path#usage">object path&lt;/a> to a location in the payload, and each value is either:&lt;/p>
&lt;ul>
&lt;li>a string object path to the location of the source data in the report being processed, where the value is required to exist&lt;/li>
&lt;li>an object with either a &lt;code>path&lt;/code> property that represents a string object path as above, or an &lt;code>expr&lt;/code> property which is an expression similar to &lt;code>relevant_to&lt;/code> to determine the resulting value. If you wish for the value to be optional (that is to say it&amp;rsquo;s OK if &lt;code>path&lt;/code> or &lt;code>expr&lt;/code> evaluate to &lt;code>undefined&lt;/code>) you may also set &lt;code>optional&lt;/code> to &lt;code>true&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="a-mapping-example">A mapping example&lt;/h4>
&lt;p>Given the following example (incomplete) report:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;abc-1234&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;type&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;data_record&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;form&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;referral&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;reported_date&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1555069530966&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;fields&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;patient_id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;12345&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;patient_temp_deg_F&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">100&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;danger_signs&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;V&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;BL&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;D&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;IG&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;contact&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;_id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;def-5678&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;name&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Jane CHW&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;parent&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;_id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;hij-9012&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;name&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;...&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The following mapping configuration:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;mapping&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;patient_id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;doc.fields.patient_id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;chw_id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;doc.contact._id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;event.temp_c&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;expr&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;((doc.fields.patient_temp_deg_F - 32) * (5.0/9.0)).toFixed(2)&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;event.in_danger&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;expr&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;doc.fields.danger_signs.length &amp;gt;= 3 ? true : undefined&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;optional&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>
&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;event.additional_notes&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;path&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;doc.fields.notes&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;optional&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Would create the following JSON payload to send:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;patient_id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;12345&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;chw_id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;def-5678&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;event&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;temp_c&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">37.78&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;in_danger&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This example makes a few points:&lt;/p>
&lt;ul>
&lt;li>The report that is being used to generate the outbound push is referenced as &lt;code>doc&lt;/code> in both &lt;code>path&lt;/code> and &lt;code>expr&lt;/code> properties&lt;/li>
&lt;li>To define a property that is itself an object, you can make the mapping key a JSON path.&lt;/li>
&lt;li>If you define a property as &lt;code>optional&lt;/code>, it won&amp;rsquo;t exist at all in the payload if the resulting value is &lt;code>undefined&lt;/code>, either because that is the result of executing the &lt;code>expr&lt;/code>, or the &lt;code>path&lt;/code> doesn&amp;rsquo;t exist. Note that if the &lt;code>event.in_danger&lt;/code> expression was instead &lt;code>doc.fields.danger_signs.length &amp;gt;= 3&lt;/code> the property &lt;code>in_danger&lt;/code> would always exist and would either be &lt;code>true&lt;/code> or &lt;code>false&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="other-notes">Other Notes&lt;/h4>
&lt;ul>
&lt;li>Your report will be hydrated before being passed to the mapper. This gives you access to the contact and its parents&lt;/li>
&lt;li>object paths that may have undefined properties need to be dealt with differently depending on if you are using a &lt;code>path&lt;/code> or an &lt;code>expr&lt;/code>. Given &lt;code>doc.foo.bar.smang&lt;/code> as a path where any of those properties may not exist in the doc:&lt;/li>
&lt;li>If you&amp;rsquo;re using &lt;code>path&lt;/code> just use the path as is, if any part of the path is &lt;code>undefined&lt;/code> the resulting value will safely be &lt;code>undefined&lt;/code>&lt;/li>
&lt;li>However, in &lt;code>expr&lt;/code> you &lt;strong>do&lt;/strong> need to handle this situation: &lt;code>doc.foo &amp;amp;&amp;amp; doc.foo.bar &amp;amp;&amp;amp; doc.foo.bar.smang&lt;/code>&lt;/li>
&lt;li>If any of your &lt;code>expr&lt;/code> expressions throw an exception (for example because you didn&amp;rsquo;t handle potentially &lt;code>undefined&lt;/code> properties as noted above) your push will fail&lt;/li>
&lt;li>If any of your &lt;code>path&lt;/code> declarations result in an &lt;code>undefined&lt;/code> value and you have not also declared that property optional your push will fail&lt;/li>
&lt;/ul>
&lt;h2 id="credentials">Credentials&lt;/h2>
&lt;p>To securely store credentials, we&amp;rsquo;ll be using CouchDB&amp;rsquo;s &lt;a href="https://docs.couchdb.org/en/stable/api/server/configuration.html">config storage&lt;/a>, as this is a convenient location that only CouchDB administrators can access.&lt;/p>
&lt;p>Passwords are stored under the &lt;code>medic-credentials&lt;/code> section, under the key declared in config.&lt;/p>
&lt;p>In the following example:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;destination&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;base_url&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;https://example.com&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;auth&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;type&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;basic&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;username&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;admin&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;password_key&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;example.com&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;path&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;/api/v1/referral&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We have our key configured to &lt;code>example.com&lt;/code>. This means that in CouchDB&amp;rsquo;s admin config we would expect to find a password at &lt;code>medic-credentials/example.com&lt;/code>.&lt;/p>
&lt;p>To add the credential to the admin config you need to either &lt;a href="https://docs.couchdb.org/en/stable/api/server/configuration.html#put--_node-node-name-_config-section-key">PUT the value using curl&lt;/a> or similar:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">curl -X PUT https://&amp;lt;user&amp;gt;:&amp;lt;pass&amp;gt;@&amp;lt;domain&amp;gt;/_node/couchdb@127.0.0.1/_config/medic-credentials/example.com -d &lt;span style="color:#4e9a06">&amp;#39;&amp;#34;the-real-password&amp;#34;&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>(Note that &lt;code>couchdb@127.0.0.1&lt;/code> is the local node name, and may be different for you depending on your setup.)&lt;/em>&lt;/p>
&lt;p>You can also add it via Fauxton:&lt;/p>
&lt;ul>
&lt;li>Navigate to &lt;a href="http://localhost:5984/_utils/#/_config">the Config screen&lt;/a>&lt;/li>
&lt;li>Click &lt;code>Add Option&lt;/code>&lt;/li>
&lt;li>The &lt;code>Section&lt;/code> should be &lt;code>medic-credentials&lt;/code>, the &lt;code>Name&lt;/code> should be (in this example) &lt;code>example.com&lt;/code> and the value should be the password&lt;/li>
&lt;li>Click &lt;code>Create&lt;/code>&lt;/li>
&lt;li>You should then be able to see your credential in the list of configuration shown\&lt;/li>
&lt;/ul>
&lt;h2 id="flow">Flow&lt;/h2>
&lt;p>Outbound pushes happen in two stages:&lt;/p>
&lt;ul>
&lt;li>Sentinel picks up the report and runs transitions over it. Any outbound configuration that is relevant (via executing the &lt;code>relevant_to&lt;/code> expression) will be added to a task queue&lt;/li>
&lt;li>Every 5 minutes sentinel will check its task queue. For each outbound push that is queued, sentinel will perform the mapping and attempt to send the resulting payload (via POST) to the configured web address
&lt;ul>
&lt;li>If the push succeeds it will be taken out of the task queue&lt;/li>
&lt;li>If the push fails (i.e. the response is not 2xx) it remains in the task queue, to be tried again in 5 minutes&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="inbound">Inbound?&lt;/h2>
&lt;p>The outbound feature is used for sending data to an external service. If you are looking to &lt;strong>receive&lt;/strong> data from an external service, take a look at &lt;a href="https://github.com/medic/medic/tree/master/api#post-apiv2records">the records api&lt;/a>.&lt;/p></description></item><item><title>Apps: .patient_reports</title><link>https://docs.communityhealthtoolkit.org/beta/apps/reference/app-settings/patient_reports/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/app-settings/patient_reports/</guid><description>
&lt;p>The &lt;code>patient_reports&lt;/code> key contains the actions to take when reports about people are received.&lt;/p>
&lt;h2 id="app_settingsjson-patient_reports">&lt;code>app_settings.json .patient_reports[]&lt;/code>&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>property&lt;/th>
&lt;th>description&lt;/th>
&lt;th>required&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>form&lt;/code>&lt;/td>
&lt;td>Form ID of the patient form.&lt;/td>
&lt;td>yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>name&lt;/code>&lt;/td>
&lt;td>Descriptive name of the form. This is not currently used in the app, but can be a helpful annotation.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>format&lt;/code>&lt;/td>
&lt;td>Guide of how the form can be used. This is not currently used in the app, but can be a helpful annotation.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>silence_type&lt;/code>&lt;/td>
&lt;td>A comma separated list of schedules to mute.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>silence_for&lt;/code>&lt;/td>
&lt;td>Duration from when the report was submitted for which messages should be muted. It is structured as a string with an integer value followed by a space and the time unit. For instance &lt;code>8 weeks&lt;/code> or &lt;code>2 days&lt;/code>. The units available are &lt;code>seconds&lt;/code>, &lt;code>minutes&lt;/code>, &lt;code>hours&lt;/code>, &lt;code>days&lt;/code>, &lt;code>weeks&lt;/code>, &lt;code>months&lt;/code>, &lt;code>years&lt;/code>, and their singular forms as well. When a message is muted all messages belonging to the same group will be muted, even if it falls outside of this time period. See &lt;code>messages[].group&lt;/code> in &lt;em>Schedules&lt;/em> for related info.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>fields&lt;/code>&lt;/td>
&lt;td>Descriptive list of form fields. This is not currently used in the app, but can be a helpful annotation.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>validations&lt;/code>&lt;/td>
&lt;td>A set of validations to perform on incoming reports. More information about validation rules can be found &lt;a href="app-settings-validations.md">here&lt;/a>.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>validations.join_responses&lt;/code>&lt;/td>
&lt;td>A boolean specifying whether validation messages should be combined into one message.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>validations.list[]&lt;/code>&lt;/td>
&lt;td>An array of validation rules a report should pass to be considered valid.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>validations.list[].property&lt;/code>&lt;/td>
&lt;td>Report field for which this validation rule will be applied.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>validations.list[].rule&lt;/code>&lt;/td>
&lt;td>Validation condition to be applied to the property field. More information about rules can be found &lt;a href="app-settings-validations.md#rules">here&lt;/a>.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>validations.list[].translation_key&lt;/code>&lt;/td>
&lt;td>Translation key for the message reply to be sent if a report fails this rule.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>messages&lt;/code>&lt;/td>
&lt;td>An array of automated responses to incoming reports.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>messages[].translation_key&lt;/code>&lt;/td>
&lt;td>Translation key for the message text associated with this event&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>messages[].event_type&lt;/code>&lt;/td>
&lt;td>An event that will trigger sending of this message. Typical values are: &lt;code>report_accepted&lt;/code> when the report has been successfully validated, &lt;code>registration_not_found&lt;/code> when the patient ID supplied in the report doesn&amp;rsquo;t match any patient ID issued by Medic. &lt;code>on_mute&lt;/code> and &lt;code>on_unmute&lt;/code> are used in the context of muting as described &lt;a href="transitions.md#muting">here&lt;/a>&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>messages[].recipient&lt;/code>&lt;/td>
&lt;td>Who the message should be sent to. Use &lt;code>reporting_unit&lt;/code> for the sender of the report, &lt;code>clinic&lt;/code> for clinic contact, and &lt;code>parent&lt;/code> for the parent contact.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="code-sample">Code sample&lt;/h2>
&lt;p>This sample shows a &lt;code>V&lt;/code> report clearing schedules that have messages within 8 days of the report being received. The sample also defines the response messages if the report is accepted or if the patient is not found.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json"> &lt;span style="color:#4e9a06">&amp;#34;patient_reports&amp;#34;&lt;/span>&lt;span style="color:#a40000">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;form&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;V&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;name&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Visit (SMS)&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;format&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;V &amp;lt;patientid&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;silence_type&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;ANC Reminders, ANC Reminders LMP, ANC Reminders LMP from App&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;silence_for&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;8 days&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;fields&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;field_name&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;title&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">],&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;validations&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;join_responses&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;list&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;property&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;patient_id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;rule&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;regex(&amp;#39;^[0-9]{5,13}$&amp;#39;)&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;translation_key&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;messages.generic.validation.patient_id&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;messages&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;translation_key&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;messages.v.report_accepted&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;event_type&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;report_accepted&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;recipient&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;reporting_unit&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;translation_key&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;messages.generic.registration_not_found&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;event_type&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;registration_not_found&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;recipient&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;reporting_unit&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;!-- TODO
## Case Reports
### `app_settings.json .case_reports[]`
--></description></item><item><title>Apps: .permissions</title><link>https://docs.communityhealthtoolkit.org/beta/apps/reference/app-settings/user-permissions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/app-settings/user-permissions/</guid><description>
&lt;h3 id="app_settingsjson-permissions">&lt;code>app_settings.json .permissions{}&lt;/code>&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Property&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>placeholder&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Apps: .registrations</title><link>https://docs.communityhealthtoolkit.org/beta/apps/reference/app-settings/registrations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/app-settings/registrations/</guid><description>
&lt;p>The &lt;code>registrations&lt;/code> key contains actions that need to be performed for incoming reports of the specified form.&lt;/p>
&lt;h2 id="app_settingsjson-registrations">&lt;code>app_settings.json .registrations[]&lt;/code>&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>property&lt;/th>
&lt;th>description&lt;/th>
&lt;th>required&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>form&lt;/code>&lt;/td>
&lt;td>Form ID that should trigger the schedule.&lt;/td>
&lt;td>yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>events&lt;/code>&lt;/td>
&lt;td>An array of event object definitions of what should happen when this form is received.&lt;/td>
&lt;td>yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>event[].name&lt;/code>&lt;/td>
&lt;td>Name of the event that has happened. The only supported event is &lt;code>on_create&lt;/code> which happens when a form is received.&lt;/td>
&lt;td>yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>event[].trigger&lt;/code>&lt;/td>
&lt;td>What should happen after the named event. &lt;code>assign_schedule&lt;/code> will assign the schedule named in &lt;code>params&lt;/code> to this report. Similarly &lt;code>clear_schedule&lt;/code> will permanently clear all messages for a patient that are part of schedules listed in the &lt;code>params&lt;/code> field. The full set of trigger configuration directives are described &lt;a href="https://docs.communityhealthtoolkit.org/beta/apps/reference/app-settings/transitions/#triggers">here&lt;/a>.&lt;/td>
&lt;td>yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>event[].params&lt;/code>&lt;/td>
&lt;td>Any useful information for the event. In our case, it holds the name of the schedule to be triggered.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>event[].bool_expr&lt;/code>&lt;/td>
&lt;td>A JavaScript expression that will be cast to boolean to qualify execution of the event. Leaving blank will default to always true. CouchDB document fields can be accessed using &lt;code>doc.key.subkey&lt;/code>. Regular expressions can be tested using &lt;code>pattern.test(value)&lt;/code> e.g. /^[0-9]+$/.test(doc.fields.last_menstrual_period). In our example above, we&amp;rsquo;re making sure the form has an LMP date.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>validations&lt;/code>&lt;/td>
&lt;td>A set of validations to perform on incoming reports. More information about validation rules can be found &lt;a href="app-settings-validations.md">here&lt;/a>.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>validations.join_responses&lt;/code>&lt;/td>
&lt;td>A boolean specifying whether validation messages should be combined into one message.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>validations.list[]&lt;/code>&lt;/td>
&lt;td>An array of validation rules a report should pass to be considered valid.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>validations.list[].property&lt;/code>&lt;/td>
&lt;td>Report field for which this validation rule will be applied.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>validations.list[].rule&lt;/code>&lt;/td>
&lt;td>Validation condition to be applied to the property field. More information about rules can be found &lt;a href="app-settings-validations.md#rules">here&lt;/a>.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>validations.list[].translation_key&lt;/code>&lt;/td>
&lt;td>Translation key for the message reply to be sent if a report fails this rule.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>messages&lt;/code>&lt;/td>
&lt;td>An array of automated responses to incoming reports.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>messages[].translation_key&lt;/code>&lt;/td>
&lt;td>Translation key for the message text associated with this event.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>messages[].event_type&lt;/code>&lt;/td>
&lt;td>An event that will trigger sending of this message. Typical values are: &lt;code>report_accepted&lt;/code> when the report has been successfully validated and &lt;code>registration_not_found&lt;/code> when the patient ID supplied in the report doesn&amp;rsquo;t match any patient ID issued by Medic.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>messages[].recipient&lt;/code>&lt;/td>
&lt;td>Who the message should be sent to. Use &lt;code>reporting_unit&lt;/code> for the sender of the report, &lt;code>clinic&lt;/code> for clinic contact, and &lt;code>parent&lt;/code> for the parent contact.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="code-sample">Code sample&lt;/h2>
&lt;p>This sample shows how a schedule would be triggered by a &lt;code>pregnancy&lt;/code> report if the &lt;code>last_mentrual_period&lt;/code> value is set.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">
&lt;span style="color:#4e9a06">&amp;#34;registrations&amp;#34;&lt;/span>&lt;span style="color:#a40000">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;form&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;pregnancy&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;events&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;name&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;on_create&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;trigger&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;assign_schedule&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;params&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;ANC Visit Reminders&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;bool_expr&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;doc.fields.last_menstrual_period&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">],&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;validations&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{},&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;messages&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[]&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Apps: .replications</title><link>https://docs.communityhealthtoolkit.org/beta/apps/reference/app-settings/replication/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/app-settings/replication/</guid><description>
&lt;p>Replications are defined under the &lt;code>replications&lt;/code> key as an array of replication objects.&lt;/p>
&lt;h2 id="app_settingsjson-replications">&lt;code>app_settings.json .replications&lt;/code>&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>property&lt;/th>
&lt;th>description&lt;/th>
&lt;th>required&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>fromSuffix&lt;/code>&lt;/td>
&lt;td>The suffix of the source table(s). Regular expression may be used.&lt;/td>
&lt;td>yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>toSuffix&lt;/code>&lt;/td>
&lt;td>The suffix of the target table.&lt;/td>
&lt;td>yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>text_expression&lt;/code>&lt;/td>
&lt;td>Any valid text expression. For more information, see &lt;a href="https://bunkat.github.io/later/parsers.html#text">LaterJS&lt;/a>&lt;/td>
&lt;td>no if &lt;code>cron&lt;/code> provided&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>cron&lt;/code>&lt;/td>
&lt;td>Any valid Cron expression. For more information, see &lt;a href="https://bunkat.github.io/later/parsers.html#cron">LaterJS&lt;/a>&lt;/td>
&lt;td>no if &lt;code>text_expression&lt;/code> provided&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="code-sample">Code sample&lt;/h2>
&lt;p>The definition takes the typical form below:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#4e9a06">&amp;#34;replications&amp;#34;&lt;/span>&lt;span style="color:#a40000">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;fromSuffix&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;user-[^\\-]+-meta&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;toSuffix&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;users-meta&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;text_expression&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;cron&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;0 2 * * *&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Apps: .roles</title><link>https://docs.communityhealthtoolkit.org/beta/apps/reference/app-settings/user-roles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/app-settings/user-roles/</guid><description>
&lt;p>Each user is assigned one of the defined roles. Roles can be defined using the App Management app, which is represented by the &lt;code>roles&lt;/code> object of the &lt;code>app-settings.json&lt;/code> file. Each role is defined by an identifier as the key, and an object with the following properties:&lt;/p>
&lt;h3 id="app_settingsjson-roles">&lt;code>app_settings.json .roles{}&lt;/code>&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Property&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Required&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>name&lt;/code>&lt;/td>
&lt;td>The translation key for this role&lt;/td>
&lt;td>Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>offline&lt;/code>&lt;/td>
&lt;td>Determines if user will be an online or offline user. Set to &lt;code>false&lt;/code> for users to be &amp;ldquo;online&amp;rdquo; users.&lt;/td>
&lt;td>No, default &lt;code>true&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Apps: .schedules</title><link>https://docs.communityhealthtoolkit.org/beta/apps/reference/app-settings/schedules/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/app-settings/schedules/</guid><description>
&lt;p>The &lt;code>schedules&lt;/code> key contains an array of schedule objects, each representing the messages to send based on a registration.&lt;/p>
&lt;h2 id="app_settingsjson-schedules">&lt;code>app_settings.json .schedules[]&lt;/code>&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>property&lt;/th>
&lt;th>description&lt;/th>
&lt;th>required&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>name&lt;/code>&lt;/td>
&lt;td>A unique string label that is used to identify the schedule. Spaces are allowed.&lt;/td>
&lt;td>yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>summary&lt;/code>&lt;/td>
&lt;td>Short description of the of the schedule.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>description&lt;/code>&lt;/td>
&lt;td>A narrative for the schedule.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>start_from&lt;/code>&lt;/td>
&lt;td>The base date from which the &lt;code>messages[].offset&lt;/code> is added to determine when to send individual messages. You could specify any property on the report that contains a date value. The default is &lt;code>reported_date&lt;/code>, which is when the report was submitted.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>start_mid_group&lt;/code>&lt;/td>
&lt;td>Whether or not a schedule can start mid-group. If not present, the schedule will not start mid-group. In other terms, the default value is &lt;code>false&lt;/code>&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>messages&lt;/code>&lt;/td>
&lt;td>Array of objects, each containing a message to send out and its properties.&lt;/td>
&lt;td>yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>messages[].translation_key&lt;/code>&lt;/td>
&lt;td>The translation key of the message to send out. Available in 2.15+.&lt;/td>
&lt;td>yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>messages[].messages&lt;/code>&lt;/td>
&lt;td>Array of message objects, each with &lt;code>content&lt;/code> and &lt;code>locale&lt;/code> properties. From 2.15 on use &lt;code>translation_key&lt;/code> instead.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>messages[].group&lt;/code>&lt;/td>
&lt;td>Integer identifier to group messages that belong together so that they can be cleared together as a group by future reports. For instance a series of messages announcing a visit, and following up for a missed visit could be grouped together and cleared by a single visit report.&lt;/td>
&lt;td>yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>messages[].offset&lt;/code>&lt;/td>
&lt;td>Time interval from the &lt;code>start_from&lt;/code> date for when the message should be sent. It is structured as a string with an integer value followed by a space and the time unit. For instance &lt;code>8 weeks&lt;/code> or &lt;code>2 days&lt;/code>. The units available are &lt;code>seconds&lt;/code>, &lt;code>minutes&lt;/code>, &lt;code>hours&lt;/code>, &lt;code>days&lt;/code>, &lt;code>weeks&lt;/code>, &lt;code>months&lt;/code>, &lt;code>years&lt;/code>, and their singular forms as well. Note that although you can specify &lt;code>seconds&lt;/code>, the accuracy of the sending time will be determined by delays in the processing the message on the server and on the gateway.&lt;/td>
&lt;td>yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>messages[].send_day&lt;/code>&lt;/td>
&lt;td>String value of the day of the week on which the message should be sent. For instance, to send a message at the beginning of the week setting it to &lt;code>&amp;quot;Monday&amp;quot;&lt;/code> will make sure the message goes out on the closest Monday &lt;em>after&lt;/em> the &lt;code>start_date&lt;/code> + &lt;code>offset&lt;/code>.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>messages[].send_time&lt;/code>&lt;/td>
&lt;td>Time of day that the message should be sent in 24 hour format.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>messages[].recipient&lt;/code>&lt;/td>
&lt;td>Recipient of the message. It can be set to &lt;code>reporting_unit&lt;/code> (sender of the form), &lt;code>clinic&lt;/code> (clinic that the sender of the form is attached to), &lt;code>parent&lt;/code> (parent of the sender of the form), or a specific phone number.&lt;/td>
&lt;td>no&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="code-sample">Code Sample&lt;/h2>
&lt;p>This sample shows a schedule with a single message, which will be sent on Monday 9am 4 weeks after the LMP date on the report that triggers this schedule:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json"> &lt;span style="color:#4e9a06">&amp;#34;schedules&amp;#34;&lt;/span>&lt;span style="color:#a40000">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;name&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;ANC Visit Reminders&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;summary&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;description&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;start_from&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;lmp_date&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;start_mid_group&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;messages&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;translation_key&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;messages.schedule.registration.followup_anc_pnc&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;group&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;offset&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;4 weeks&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;send_day&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;monday&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;send_time&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;09:00&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;recipient&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;reporting_unit&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Apps: .sms</title><link>https://docs.communityhealthtoolkit.org/beta/apps/reference/app-settings/sms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/app-settings/sms/</guid><description>
&lt;p>SMS settings are defined under the &lt;code>sms&lt;/code> key, as an object supporting the following properties:&lt;/p>
&lt;h2 id="app_settingsjson-sms">&lt;code>app_settings.json .sms&lt;/code>&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>property&lt;/th>
&lt;th>default&lt;/th>
&lt;th>description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>outgoing_service&lt;/td>
&lt;td>medic-gateway&lt;/td>
&lt;td>Defines the service to use to send SMS messages. Currently supports &amp;ldquo;medic-gateway&amp;rdquo; and &amp;ldquo;africas-talking&amp;rdquo;. Read more about &amp;ldquo;africas-talking&amp;rdquo; configuration &lt;a href="../../guides/africas-talking">here&lt;/a>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>duplicate_limit&lt;/td>
&lt;td>5&lt;/td>
&lt;td>The number of identical sms message allowed to be sent to the same recipient.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="code-sample">Code sample&lt;/h2>
&lt;p>The definition takes the typical form below:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#4e9a06">&amp;#34;sms&amp;#34;&lt;/span>&lt;span style="color:#a40000">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;outgoing_service&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;medic-gateway&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;duplicate_limit&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;2&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="duplicate-sms-messages-handling">Duplicate SMS messages handling&lt;/h4>
&lt;p>Every time a service (API or Sentinel) creates an SMS, we cache the recipient, and the message content, along with the current timestamp.
When more than &lt;code>duplicate_limit&lt;/code> messages have been created for the same pair of recipient+content, within the cache time limit, we mark the new message with a &amp;ldquo;duplicate&amp;rdquo; status. Such messages are never sent.
The cache is cleared 30 minutes after the last SMS message for a specific pair was generated.&lt;/p></description></item><item><title>Apps: .transitions</title><link>https://docs.communityhealthtoolkit.org/beta/apps/reference/app-settings/transitions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/app-settings/transitions/</guid><description>
&lt;p>When sentinel detects a document has changed it runs transitions against the doc. These transitions can be used to generate a short form patient id or assign a report to a facility.&lt;/p>
&lt;h2 id="configuration">Configuration&lt;/h2>
&lt;p>By default all transitions are disabled. They can be enabled by configuring the &lt;code>transitions&lt;/code> property to have a key with the transitions name and a &lt;code>truthy&lt;/code> value, eg:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;transitions&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;a&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;b&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;c&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;disable&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;d&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;disable&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In this example the &lt;code>d&lt;/code> transition will not be applied, but the other three will be.&lt;/p>
&lt;h2 id="available-transitions">Available transitions&lt;/h2>
&lt;p>The following transitions are available and executed in order.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>maintain_info_document&lt;/td>
&lt;td>Records metadata about the document such as when it was replicated. Enabled by default.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>update_clinics&lt;/td>
&lt;td>Adds a contact&amp;rsquo;s info to a new data record. This is used to attribute an incoming SMS message or report to the appropriate contact. The &lt;code>rc_code&lt;/code> value on the contact is used to match to the value of the form field set as the &lt;code>facility_reference&lt;/code> in the &lt;a href="https://docs.communityhealthtoolkit.org/beta/apps/reference/app-settings/forms/#app_settingsjson-forms">JSON form definition&lt;/a>. This matching is useful when reports are sent on behalf of a facility by unknown or various phone numbers. If &lt;code>facility_reference&lt;/code> is not set for a form, the contact match is attempted using the sender&amp;rsquo;s phone number.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="#registration">registration&lt;/a>&lt;/td>
&lt;td>For registering a patient to a schedule. Performs some validation and creates the patient document if the patient does not already exist. Can create places (as of 3.8.x).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>accept_patient_reports&lt;/td>
&lt;td>Validates reports about a patient and silences relevant reminders.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="#generate-shortcode-on-contacts">generate_shortcode_on_contacts&lt;/a>&lt;/td>
&lt;td>Automatically generates the &lt;code>patient_id&lt;/code> on all person documents and the &lt;code>place_id&lt;/code> on all place documents. Available since 3.8.x.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="#generate-patient-id-on-people">generate_patient_id_on_people&lt;/a>&lt;/td>
&lt;td>&lt;strong>Deprecated in 3.8.x&lt;/strong> Automatically generates the &lt;code>patient_id&lt;/code> on all person documents. As of 3.8.x, also generates the &lt;code>place_id&lt;/code> on all place documents and is an alias for &lt;code>generate_shortcode_on_contacts&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>default_responses&lt;/td>
&lt;td>Responds to the message with a confirmation or validation error.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>update_sent_by&lt;/td>
&lt;td>Sets the sent_by field of the report based on the sender&amp;rsquo;s phone number.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>update_sent_forms&lt;/td>
&lt;td>&lt;strong>Deprecated in 3.7.x&lt;/strong> Update sent_forms property on facilities so we can setup reminders for specific forms. &lt;em>As of 3.7.x, reminders no longer require this transition&lt;/em>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="#death_reporting">death_reporting&lt;/a>&lt;/td>
&lt;td>Updates the deceased status of patients.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>conditional_alerts&lt;/td>
&lt;td>Executes the configured condition and sends an alert if the condition is met.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="#multi_report_alerts">multi_report_alerts&lt;/a>&lt;/td>
&lt;td>Similar to conditional_alerts, with more flexible configuration, including using different form types for the same alert.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="#update_notifications">update_notifications&lt;/a>&lt;/td>
&lt;td>&lt;strong>Deprecated in 3.2.x&lt;/strong> Mutes or unmutes scheduled messages based on configuration.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>update_scheduled_reports&lt;/td>
&lt;td>If a report has a month/week/week_number, year and clinic then look for duplicates and update those instead.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>resolve_pending&lt;/td>
&lt;td>Sets the state of pending messages to sent. It is useful during builds where we don&amp;rsquo;t want any outgoing messages queued for sending.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="#muting">muting&lt;/a>&lt;/td>
&lt;td>Implements muting/unmuting actions of people and places. Available since 3.2.x.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="./outbound.md">mark_for_outbound&lt;/a>&lt;/td>
&lt;td>Enables outbound pushes. Available since 3.5.x&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="#self_report">self_report&lt;/a>&lt;/td>
&lt;td>Maps patient to sender. Available since 3.9.x&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="transition-configuration-guide">Transition Configuration Guide&lt;/h2>
&lt;p>Guides for how to setup specific transitions.&lt;/p>
&lt;h3 id="multi_report_alerts">multi_report_alerts&lt;/h3>
&lt;p>Send alert messages by SMS when specific conditions are received through reports. More flexible than simple Alerts.&lt;/p>
&lt;p>Example: send SMS to the district manager when 2 CHWs within the same district report cholera or diarrhea symptoms within the last week.&lt;/p>
&lt;p>Understanding the different types of reports used in the configuration:&lt;/p>
&lt;pre>&lt;code> previous suspected_cholera alert was sent
|
| latest_report comes in, suspected_cholera alert is sent
| |
v v
---[---*-o---*--*--o-o---*]-------&amp;gt; time
1 0
&lt;/code>&lt;/pre>&lt;p>&lt;code>[]&lt;/code> : time window&lt;/p>
&lt;p>&lt;code>*&lt;/code> and &lt;code>o&lt;/code> : &lt;code>reports&lt;/code> : any report that came in to the server.&lt;/p>
&lt;p>&lt;code>*&lt;/code> : &lt;code>counted_reports&lt;/code> : reports that came in that passed the &lt;code>is_report_counted&lt;/code> filter function.&lt;/p>
&lt;p>&lt;code>0&lt;/code>, &lt;code>1&lt;/code> : &lt;code>new_reports&lt;/code> : &lt;code>counted_reports&lt;/code> that came in since the previous alert was sent. They haven&amp;rsquo;t been messaged about yet.&lt;/p>
&lt;h4 id="configuration-1">Configuration&lt;/h4>
&lt;pre>&lt;code>&amp;quot;multi_report_alerts&amp;quot; : [
{
&amp;quot;name&amp;quot;: &amp;quot;suspected_cholera&amp;quot;,
&amp;quot;is_report_counted&amp;quot;: &amp;quot;function(report, latest_report) { return latest_report.contact.parent.parent._id === report.contact.parent.parent._id; }&amp;quot;,
&amp;quot;num_reports_threshold&amp;quot;: 2,
&amp;quot;message&amp;quot;: &amp;quot;{{num_counted_reports}} patients with {{alert_name}} in {{time_window_in_days}} days reported at {{new_reports.0.contact.parent.name}}. New reports from: {{new_reports.0.contact.name}}, {{new_reports.1.contact.name}}, {{new_reports.2.contact.name}}.&amp;quot;,
&amp;quot;recipients&amp;quot;: [
&amp;quot;+123456&amp;quot;,
&amp;quot;new_report.contact.phone&amp;quot;, // sender of each report in new_reports
&amp;quot;new_report.contact.parent.parent.contact.phone&amp;quot;, // contact person for the parent place of the sender of each report in new_reports.
// If it's the same for several reports, only one message will be sent (recipient phone numbers are deduplicated before generating messages).
],
&amp;quot;time_window_in_days&amp;quot;: 7,
&amp;quot;forms&amp;quot;: [&amp;quot;C&amp;quot;, &amp;quot;D&amp;quot;] // Only Cholera and Diarrhea forms.
}
]
&lt;/code>&lt;/pre>&lt;p>Note that we are using Mustache templates for our message templates (anything with &lt;code>{{}}&lt;/code>), and they use a &lt;code>.&lt;/code> notation to access items in an array (e.g. &lt;code>new_reports.1&lt;/code>) rather than a &lt;code>[]&lt;/code> notation as in conventional javascript (&lt;code>new_reports[1]&lt;/code>).&lt;/p>
&lt;p>For performance reasons the &lt;code>num_reports_threshold&lt;/code> cannot exceed 100.&lt;/p>
&lt;h3 id="death_reporting">death_reporting&lt;/h3>
&lt;p>Updates patient documents with a &lt;code>date_of_death&lt;/code> field which updates how the patient is displayed in the UI.&lt;/p>
&lt;h4 id="configuration-2">Configuration&lt;/h4>
&lt;p>Configuration is stored in the &lt;code>death_reporting&lt;/code> field of the settings.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Property&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>mark_deceased_forms&lt;/code>&lt;/td>
&lt;td>An array of form codes which will cause patients to be recorded as deceased.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>undo_deceased_forms&lt;/code>&lt;/td>
&lt;td>An array of form codes which will remove the deceased date from the patient. Optional.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>date_field&lt;/code>&lt;/td>
&lt;td>The path to the field in the report document which has the date the patient died. Optional: if not configured it defaults to the reported_date of the report.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="example">Example&lt;/h5>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#4e9a06">&amp;#34;death_reporting&amp;#34;&lt;/span>&lt;span style="color:#a40000">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;mark_deceased_forms&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;death&amp;#34;&lt;/span> &lt;span style="color:#000;font-weight:bold">],&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;undo_deceased_forms&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;undo-death&amp;#34;&lt;/span> &lt;span style="color:#000;font-weight:bold">],&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;date_field&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;fields.death_date&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="registration">Registration&lt;/h3>
&lt;p>Configuration is held at &lt;code>app_settings.registrations&lt;/code>, as a list of objects connecting forms to validations, events and messages.&lt;/p>
&lt;h4 id="events">Events&lt;/h4>
&lt;p>Lists different events.&lt;/p>
&lt;h5 id="on_create">&lt;code>on_create&lt;/code>&lt;/h5>
&lt;p>This is the only supported event.&lt;/p>
&lt;h4 id="triggers">Triggers&lt;/h4>
&lt;h5 id="add_patient">&lt;code>add_patient&lt;/code>&lt;/h5>
&lt;p>Sets the &lt;code>patient_id&lt;/code> on the root of the registration document and creates the person doc if required. Can be configured to either use a provided ID or generate a new unique one.&lt;/p>
&lt;h6 id="external-patient-id">External Patient ID&lt;/h6>
&lt;p>If you are providing the patient id instead of having Sentinel generate you one, name the field in a &lt;code>patient_id_field&lt;/code> key in &lt;code>&amp;quot;params&amp;quot;&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;name&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;on_create&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;trigger&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;add_patient&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;params&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;{\&amp;#34;patient_id_field\&amp;#34;: \&amp;#34;external_id\&amp;#34;}&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;bool_expr&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In this example the provided id would be in &lt;code>fields.external_id&lt;/code> on the registration document.&lt;/p>
&lt;p>&lt;strong>NB:&lt;/strong> this field must not be called &lt;code>patient_id&lt;/code>.
&lt;strong>NB:&lt;/strong> the JSON passed in &lt;code>&amp;quot;params&amp;quot;&lt;/code> should still be a string. Support for raw JSON as shown below exists, but is in beta and may not always work correctly in all situations, because kanso.json does not support it:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;params&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;patient_id_field&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;external_id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h6 id="alternative-name-location">Alternative Name Location&lt;/h6>
&lt;p>To provide an alternative location for the patient name, either provide a &lt;code>patient_name_field&lt;/code> in &lt;code>&amp;quot;params&amp;quot;&lt;/code> or provide it directly into the &lt;code>&amp;quot;params&amp;quot;&lt;/code> field as a String:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;params&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;{\&amp;#34;patient_name_field\&amp;#34;: \&amp;#34;full_name\&amp;#34;}&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;params&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;full_name&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The first format is required if you wish to also provide other params:&lt;/p>
&lt;h6 id="contact-type">Contact Type&lt;/h6>
&lt;p>If you have changed from the default contact hierarchy you will need to specify which type of contact the registration should create.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;params&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;{ \&amp;#34;contact_type\&amp;#34;: \&amp;#34;patient\&amp;#34; }&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h6 id="specific-parent-as-of-380">Specific Parent &lt;em>as of 3.8.0&lt;/em>&lt;/h6>
&lt;p>By default, the newly created person will have the same parent as the report submitter.
A different parent may be selected by providing a location for the parent id. This field should
contain the &lt;code>place_id&lt;/code> of the place in question.
If the selected parent is invalid - does not exist or does not respect the configured hierarchy&lt;/p>
&lt;ul>
&lt;li>the report is rejected as invalid and the person document is not created. As such
, &lt;code>report_accepted&lt;/code> event should check if the report has a &lt;code>patient&lt;/code> property (or similar).&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json"> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;params&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;{ \&amp;#34;parent_id\&amp;#34;: \&amp;#34;parent_id\&amp;#34; }&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h6 id="events-1">Events&lt;/h6>
&lt;ul>
&lt;li>&lt;code>parent_field_not_provided&lt;/code> - triggered when the report does not have the required parent_id field&lt;/li>
&lt;li>&lt;code>parent_invalid&lt;/code> - triggered when selected parent is invalid (parent document is found and
either does not have a configured type or its type is not configured to be a parent to the
person type to be created)&lt;/li>
&lt;li>&lt;code>parent_not_found&lt;/code> - triggered when selected parent is not found&lt;/li>
&lt;/ul>
&lt;p>The selected parent (if found) can be accessed by using the &lt;code>parent&lt;/code> path in error messages:
&lt;code>Cannot create a person type &amp;quot;patient&amp;quot; under parent {{parent.place_id}}({{parent.contact_type}})&lt;/code>&lt;/p>
&lt;h5 id="add_patient_id">&lt;code>add_patient_id&lt;/code>&lt;/h5>
&lt;p>&lt;strong>Deprecated in favour of &lt;code>add_patient&lt;/code>.&lt;/strong> Previously this only added a &lt;code>patient_id&lt;/code> to the root of the registration form. This functionality has been merged into &lt;code>add_patient&lt;/code>. Now, using this event will result in the same functionality as described in &lt;code>add_patient&lt;/code> above.&lt;/p>
&lt;h5 id="add_expected_date">&lt;code>add_expected_date&lt;/code>&lt;/h5>
&lt;h5 id="add_birth_date">&lt;code>add_birth_date&lt;/code>&lt;/h5>
&lt;h5 id="assign_schedule">&lt;code>assign_schedule&lt;/code>&lt;/h5>
&lt;h5 id="clear_schedule">&lt;code>clear_schedule&lt;/code>&lt;/h5>
&lt;h5 id="add_place-as-of-380">&lt;code>add_place&lt;/code> &lt;em>as of 3.8.0&lt;/em>&lt;/h5>
&lt;p>Sets the &lt;code>place_id&lt;/code> on the root of the registration document and creates the place doc with the
provided type.&lt;/p>
&lt;p>By default, the created place would have the same parent as the submitter. If such a combination is
invalid - for example a contact under a &amp;ldquo;clinic&amp;rdquo; attempts to create a new &amp;ldquo;health_center&amp;rdquo; - the
report will be rejected as errored and the place document will not be created. As such,
&lt;code>report_accepted&lt;/code> event should check if the report has a &lt;code>place&lt;/code> property (or similar).&lt;/p>
&lt;p>The created place does not have a primary contact.
The created place can be accessed by the &lt;code>place&lt;/code> path in messages:
&lt;code>Place {{place.name}}({{place.place_id}}) added to {{place.parent.name}}({{place.parent.place_id}})&lt;/code>&lt;/p>
&lt;h6 id="contact-type-1">Contact Type&lt;/h6>
&lt;p>Specifying the contact type is required, even if not using configurable hierarchies.
The selected contact type must be a configured place type.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;params&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;{ \&amp;#34;contact_type\&amp;#34;: \&amp;#34;clinic\&amp;#34; }&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h6 id="specific-parent">Specific Parent&lt;/h6>
&lt;p>By default, the newly created place will have the same parent as the report submitter.
A different parent may be selected by providing a location for the parent id. This field should
contain the &lt;code>place_id&lt;/code> of the place in question.
If the selected parent is invalid - does not exist or is not an acceptable parent to the
selected type in the configured hierarchy - the report will be rejected as errored.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json"> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;params&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;{ \&amp;#34;parent_id\&amp;#34;: \&amp;#34;parent_id\&amp;#34; }&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h6 id="events-2">Events&lt;/h6>
&lt;ul>
&lt;li>&lt;code>parent_field_not_provided&lt;/code> - triggered when the report does not have the required parent_id field&lt;/li>
&lt;li>&lt;code>parent_invalid&lt;/code> - triggered when selected parent is invalid (parent document is found and
either does not have a configured type or its type is not configured to be a parent to the
place type to be created)&lt;/li>
&lt;li>&lt;code>parent_not_found&lt;/code> - triggered when selected parent is not found&lt;/li>
&lt;/ul>
&lt;p>The selected parent (if found) can be accessed by using the &lt;code>parent&lt;/code> path in error messages:
&lt;code>'Cannot create a place type &amp;quot;health_center&amp;quot; under parent {{parent.place_id}}({{parent.contact_type}})'&lt;/code>&lt;/p>
&lt;h6 id="alternative-name-location-1">Alternative Name Location&lt;/h6>
&lt;p>The created place&amp;rsquo;s name is provided in the &lt;code>place_name&lt;/code> field by default.
To provide an alternative location for the place name, provide a &lt;code>place_name_field&lt;/code> in
&lt;code>&amp;quot;params&amp;quot;&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;params&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;{\&amp;#34;place_name_field\&amp;#34;: \&amp;#34;clinic_name\&amp;#34;}&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="generate-shortcode-on-contacts">Generate Shortcode on Contacts&lt;/h3>
&lt;p>No custom configuration for &lt;code>generate_shortcode_on_contacts&lt;/code>.&lt;/p>
&lt;h3 id="generate-patient-id-on-people">Generate Patient ID On People&lt;/h3>
&lt;p>&lt;strong>Deprecated since 3.8.x&lt;/strong> in favor of &lt;code>generate_shortcode_on_contacts&lt;/code>&lt;/p>
&lt;p>No custom configuration for &lt;code>generate_patient_id_on_people&lt;/code>.&lt;/p>
&lt;h3 id="update_notifications">update_notifications&lt;/h3>
&lt;p>&lt;strong>Deprecated in favor of &lt;a href="#muting">Muting&lt;/a>&lt;/strong>&lt;/p>
&lt;h4 id="configuration-3">Configuration&lt;/h4>
&lt;pre>&lt;code>&amp;quot;notifications&amp;quot;: {
&amp;quot;off_form&amp;quot;: &amp;quot;OFF&amp;quot;,
&amp;quot;on_form&amp;quot;: &amp;quot;ON&amp;quot;,
&amp;quot;validations&amp;quot;: {
&amp;quot;join_responses&amp;quot;: true,
&amp;quot;list&amp;quot;: []
},
&amp;quot;messages&amp;quot;: [
{
&amp;quot;translation_key&amp;quot;: &amp;quot;&amp;quot;,
&amp;quot;event_type&amp;quot;: &amp;quot;on_mute&amp;quot;,
&amp;quot;recipient&amp;quot;: &amp;quot;reporting_unit&amp;quot;
},
{
&amp;quot;translation_key&amp;quot;: &amp;quot;&amp;quot;,
&amp;quot;event_type&amp;quot;: &amp;quot;on_unmute&amp;quot;,
&amp;quot;recipient&amp;quot;: &amp;quot;reporting_unit&amp;quot;
},
{
&amp;quot;translation_key&amp;quot;: &amp;quot;&amp;quot;,
&amp;quot;event_type&amp;quot;: &amp;quot;patient_not_found&amp;quot;,
&amp;quot;recipient&amp;quot;: &amp;quot;reporting_unit&amp;quot;
}
]
}
&lt;/code>&lt;/pre>&lt;h3 id="muting">Muting&lt;/h3>
&lt;p>Implements muting/unmuting of persons and places. Supports multiple forms for each action, for webapp and sms workflows.&lt;/p>
&lt;p>Muting action:&lt;/p>
&lt;ul>
&lt;li>updates target contact and all its descendants&lt;sup>[1]&lt;/sup>, setting the &lt;code>muted&lt;/code> property equal to the current &lt;code>date&lt;/code> in ISO format&lt;sup>[2]&lt;/sup>&lt;/li>
&lt;li>adds a &lt;code>muting_history&lt;/code> entry to Sentinel &lt;code>info&lt;/code> docs for every updated contact&lt;sup>[7]&lt;/sup>&lt;/li>
&lt;li>updates all connected registrations&lt;sup>[3]&lt;/sup>, changing the state of all unsent&lt;sup>[4]&lt;/sup> &lt;code>scheduled_tasks&lt;/code> to &lt;code>muted&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Unmuting action:&lt;/p>
&lt;ul>
&lt;li>updates target contact&amp;rsquo;s topmost muted ancestor&lt;sup>[1][5]&lt;/sup> and all its descendants, removing the &lt;code>muted&lt;/code> property&lt;/li>
&lt;li>adds a &lt;code>muting_history&lt;/code> entry to Sentinel &lt;code>info&lt;/code> docs for every updated contact&lt;sup>[7]&lt;/sup>&lt;/li>
&lt;li>updates all connected registrations&lt;sup>[3]&lt;/sup>, changing the state of all present/future&lt;sup>[6]&lt;/sup> &lt;code>muted&lt;/code> &lt;code>scheduled_tasks&lt;/code> to &lt;code>scheduled&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>[1] Contacts that are already in the correct state are skipped. This applies to updates to the contact itself, updates to the Sentinel &lt;code>muting_history&lt;/code> and to the connected registrations (registrations of a contact that is already in the correct state will not be updated).
[2] The date represents the moment Sentinel has processed the muting action
[3] target contact and descendants&amp;rsquo; registrations
[4] &lt;code>scheduled_tasks&lt;/code> being in either &lt;code>scheduled&lt;/code> or &lt;code>pending&lt;/code> state
[5] Because the muted state is inherited, unmuting cascades upwards to the highest level muted ancestor. If none of the ancestors is muted, unmuting cascades downwards only.
[6] &lt;code>scheduled_tasks&lt;/code> which are due today or in the future. All &lt;code>scheduled_tasks&lt;/code> with a due date in the past will remain unchanged.&lt;/p>
&lt;h5 id="7-muting-history">[7] Muting history&lt;/h5>
&lt;p>Each time the &lt;code>muted&lt;/code> state of a contact changes, an entry is added to a &lt;code>muting_history&lt;/code> list saved in Sentinel &lt;code>info&lt;/code> docs (stored as an array property with the same name).
Entries in &lt;code>muting_history&lt;/code> contain the following information:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Property&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>muted&lt;/td>
&lt;td>Boolean representing the muted state&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>date&lt;/td>
&lt;td>Date in ISO Format&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>report_id&lt;/td>
&lt;td>An &lt;code>_id&lt;/code> reference to the report that triggered the action&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="configuration-4">Configuration&lt;/h4>
&lt;p>Configuration is stored in the &lt;code>muting&lt;/code> field of &lt;code>app_settings.json&lt;/code>.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Property&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>mute_forms&lt;/code>&lt;/td>
&lt;td>An array of form codes which will trigger muting. &lt;strong>Required&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>unmute_forms&lt;/code>&lt;/td>
&lt;td>An array of form codes which will trigger unmuting. Optional.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>validations&lt;/code>&lt;/td>
&lt;td>List of form fields validations. All mute &amp;amp; unmute forms will be subjected to these validation rules. Invalid forms will not trigger muting/unmuting actions. Optional.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>messages&lt;/code>&lt;/td>
&lt;td>List of tasks/errors that will be created, determined by &lt;code>event_type&lt;/code>. Optional.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Supported &lt;code>events_types&lt;/code> are:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Event Type&lt;/th>
&lt;th>Trigger&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>mute&lt;/code>&lt;/td>
&lt;td>On successful &lt;code>mute&lt;/code> action&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>unmute&lt;/code>&lt;/td>
&lt;td>On successful &lt;code>unmute&lt;/code> action&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>already_muted&lt;/code>&lt;/td>
&lt;td>On &lt;code>mute&lt;/code> action, when target contact is already muted&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>already_unmuted&lt;/code>&lt;/td>
&lt;td>On &lt;code>unmute&lt;/code> action, when target contact is already unmuted&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>contact_not_found&lt;/code>&lt;/td>
&lt;td>Either mute or unmute actions when target contact is not found&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="example-1">Example&lt;/h5>
&lt;pre>&lt;code>&amp;quot;muting&amp;quot;: {
&amp;quot;mute_forms&amp;quot;: [&amp;quot;mute_person&amp;quot;, &amp;quot;mute_clinic&amp;quot;],
&amp;quot;unmute_forms&amp;quot;: [&amp;quot;unmute_person&amp;quot;, &amp;quot;unmute_clinic&amp;quot;],
&amp;quot;validations&amp;quot;: {
&amp;quot;join_responses&amp;quot;: true,
&amp;quot;list&amp;quot;: []
},
&amp;quot;messages&amp;quot;: [
{
&amp;quot;translation_key&amp;quot;: &amp;quot;&amp;quot;,
&amp;quot;event_type&amp;quot;: &amp;quot;mute&amp;quot;,
&amp;quot;recipient&amp;quot;: &amp;quot;reporting_unit&amp;quot;
},
{
&amp;quot;translation_key&amp;quot;: &amp;quot;&amp;quot;,
&amp;quot;event_type&amp;quot;: &amp;quot;unmute&amp;quot;,
&amp;quot;recipient&amp;quot;: &amp;quot;reporting_unit&amp;quot;
},
{
&amp;quot;translation_key&amp;quot;: &amp;quot;&amp;quot;,
&amp;quot;event_type&amp;quot;: &amp;quot;already_muted&amp;quot;,
&amp;quot;recipient&amp;quot;: &amp;quot;reporting_unit&amp;quot;
},
{
&amp;quot;translation_key&amp;quot;: &amp;quot;&amp;quot;,
&amp;quot;event_type&amp;quot;: &amp;quot;already_unmuted&amp;quot;,
&amp;quot;recipient&amp;quot;: &amp;quot;reporting_unit&amp;quot;
},
{
&amp;quot;translation_key&amp;quot;: &amp;quot;&amp;quot;,
&amp;quot;event_type&amp;quot;: &amp;quot;contact_not_found&amp;quot;,
&amp;quot;recipient&amp;quot;: &amp;quot;reporting_unit&amp;quot;
}
]
}
&lt;/code>&lt;/pre>&lt;h3 id="self_report">self_report&lt;/h3>
&lt;p>Updates a &lt;code>data_record&lt;/code> to set its patient to its sender. The resulting doc will have &lt;code>fields.patient_uuid&lt;/code> and &lt;code>fields.patient_id&lt;/code> filled with the sender&amp;rsquo;s information. Provides hydrated patient information to subsequent transitions.
The &lt;code>sender&lt;/code> is the contact associated with the phone number that sent the original SMS.&lt;br>
If a doc already contains a &lt;code>patient&lt;/code> field, does not have a sender or its &lt;code>form&lt;/code> is not configured to be enabled for this transition, it will be ignored.&lt;/p>
&lt;h4 id="configuration-5">Configuration&lt;/h4>
&lt;p>Configuration is stored in the &lt;code>self_report&lt;/code> field of &lt;code>app_settings.json&lt;/code> as a list of objects connecting forms to messages.
Every object should have this structure:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Property&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>form&lt;/code>&lt;/td>
&lt;td>Form code. &lt;strong>Required&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>messages&lt;/code>&lt;/td>
&lt;td>List of tasks/errors that will be created, determined by &lt;code>event_type&lt;/code>. Optional.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Supported &lt;code>events_types&lt;/code> are:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Event Type&lt;/th>
&lt;th>Trigger&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>report_accepted&lt;/code>&lt;/td>
&lt;td>On successful sender updating&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sender_not_found&lt;/code>&lt;/td>
&lt;td>Sender not found&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="example-2">Example&lt;/h5>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#4e9a06">&amp;#34;self_report&amp;#34;&lt;/span>&lt;span style="color:#a40000">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;form&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;FORM&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;messages&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;event_type&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;report_accepted&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;recipient&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;reporting_unit&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;translation_key&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;messages.form.report_accepted&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;event_type&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;sender_not_found&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;recipient&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;reporting_unit&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;translation_key&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;messages.form.sender_not_found&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;form&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;OTHER&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;messages&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;event_type&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;report_accepted&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;recipient&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;reporting_unit&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;translation_key&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;messages.other.report_accepted&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;event_type&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;sender_not_found&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;recipient&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;reporting_unit&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;translation_key&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;messages.other.sender_not_found&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>