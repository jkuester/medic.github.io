<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Community Health Toolkit – Reference Documentation</title>
    <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/</link>
    <description>Recent content in Reference Documentation on Community Health Toolkit</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://docs.communityhealthtoolkit.org/beta/apps/reference/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Apps: Supported Versions</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/supported-software/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/supported-software/</guid>
      <description>
        
        
        &lt;p&gt;Medic Mobile supports the latest patch of minor versions of the Core Framework for three months after the next minor version is made available, and the latest minor of a major version for twelve months after the next major version is made available.&lt;/p&gt;
&lt;p&gt;Once a version is no longer supported it will not receive any further releases and upgrading may be required before Medic Mobile can investigate any issues.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Version&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Release date&lt;/th&gt;
&lt;th&gt;End of life&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;3.8.1&lt;/td&gt;
&lt;td&gt;Current&lt;/td&gt;
&lt;td&gt;6-Apr-2020&lt;/td&gt;
&lt;td&gt;TBA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.8.0&lt;/td&gt;
&lt;td&gt;EOL&lt;/td&gt;
&lt;td&gt;11-Feb-2020&lt;/td&gt;
&lt;td&gt;6-Apr-2020&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.7.1&lt;/td&gt;
&lt;td&gt;Supported&lt;/td&gt;
&lt;td&gt;13-Nov-2019&lt;/td&gt;
&lt;td&gt;11-Jun-2020&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.7.0&lt;/td&gt;
&lt;td&gt;EOL&lt;/td&gt;
&lt;td&gt;22-Oct-2019&lt;/td&gt;
&lt;td&gt;13-Nov-2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.6.2&lt;/td&gt;
&lt;td&gt;EOL&lt;/td&gt;
&lt;td&gt;24-Mar-2020&lt;/td&gt;
&lt;td&gt;24-Mar-2020&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.6.1&lt;/td&gt;
&lt;td&gt;EOL&lt;/td&gt;
&lt;td&gt;07-Aug-2019&lt;/td&gt;
&lt;td&gt;22-Jan-2020&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.6.0&lt;/td&gt;
&lt;td&gt;EOL&lt;/td&gt;
&lt;td&gt;17-Jul-2019&lt;/td&gt;
&lt;td&gt;07-Aug-2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.5.0&lt;/td&gt;
&lt;td&gt;EOL&lt;/td&gt;
&lt;td&gt;27-Jun-2019&lt;/td&gt;
&lt;td&gt;17-Oct-2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.4.1&lt;/td&gt;
&lt;td&gt;EOL&lt;/td&gt;
&lt;td&gt;4-Jun-2019&lt;/td&gt;
&lt;td&gt;27-Sep-2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.4.0&lt;/td&gt;
&lt;td&gt;EOL&lt;/td&gt;
&lt;td&gt;27-Mar-2019&lt;/td&gt;
&lt;td&gt;4-Jun-2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.3.0&lt;/td&gt;
&lt;td&gt;EOL&lt;/td&gt;
&lt;td&gt;22-Feb-2019&lt;/td&gt;
&lt;td&gt;27-Jun-2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.2.1&lt;/td&gt;
&lt;td&gt;EOL&lt;/td&gt;
&lt;td&gt;23-Jan-2019&lt;/td&gt;
&lt;td&gt;22-May-2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.2.0&lt;/td&gt;
&lt;td&gt;EOL&lt;/td&gt;
&lt;td&gt;23-Jan-2019&lt;/td&gt;
&lt;td&gt;23-Jan-2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.1.0&lt;/td&gt;
&lt;td&gt;EOL&lt;/td&gt;
&lt;td&gt;21-Nov-2018&lt;/td&gt;
&lt;td&gt;23-Apr-2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.0.0&lt;/td&gt;
&lt;td&gt;EOL&lt;/td&gt;
&lt;td&gt;15-Nov-2018&lt;/td&gt;
&lt;td&gt;21-Feb-2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.18.1&lt;/td&gt;
&lt;td&gt;EOL&lt;/td&gt;
&lt;td&gt;31-Oct-2018&lt;/td&gt;
&lt;td&gt;15-Nov-2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.18.0&lt;/td&gt;
&lt;td&gt;EOL&lt;/td&gt;
&lt;td&gt;30-Aug-2018&lt;/td&gt;
&lt;td&gt;31-Oct-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;earlier&lt;/td&gt;
&lt;td&gt;EOL&lt;/td&gt;
&lt;td&gt;&amp;hellip;&lt;/td&gt;
&lt;td&gt;30-Nov-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;dependencies&#34;&gt;Dependencies&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;medic&lt;/th&gt;
&lt;th&gt;Node&lt;/th&gt;
&lt;th&gt;CouchDB&lt;/th&gt;
&lt;th&gt;Browsers&lt;/th&gt;
&lt;th&gt;SMS bridge&lt;/th&gt;
&lt;th&gt;Android&lt;/th&gt;
&lt;th&gt;medic-android&lt;/th&gt;
&lt;th&gt;medic-couch2pg&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;0.4&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.12+&lt;/td&gt;
&lt;td&gt;1.6+&lt;/td&gt;
&lt;td&gt;Chrome 30+, Firefox latest&lt;/td&gt;
&lt;td&gt;SMSSync&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;2.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;6+&lt;/td&gt;
&lt;td&gt;1.6+&lt;/td&gt;
&lt;td&gt;Chrome 30+, Firefox latest&lt;/td&gt;
&lt;td&gt;medic-gateway&lt;/td&gt;
&lt;td&gt;4.4+&lt;/td&gt;
&lt;td&gt;Any&lt;/td&gt;
&lt;td&gt;2.0 &amp;lt; 3.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;3.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;8.11+&lt;/td&gt;
&lt;td&gt;2.1+&lt;/td&gt;
&lt;td&gt;Chrome 53+, Firefox latest&lt;/td&gt;
&lt;td&gt;medic-gateway&lt;/td&gt;
&lt;td&gt;4.4+&lt;/td&gt;
&lt;td&gt;0.4.5+&lt;/td&gt;
&lt;td&gt;3.0+&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;hardware-requirements&#34;&gt;Hardware requirements&lt;/h1&gt;
&lt;h2 id=&#34;smartphones&#34;&gt;Smartphones&lt;/h2&gt;
&lt;p&gt;The following is the minimum specification recommendation for smartphones to handle the typical workload of front line health workers. Users with particularly high workloads or facility or supervisor workloads will require more powerful devices.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Specification&lt;/th&gt;
&lt;th&gt;Minimum&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Android version&lt;/td&gt;
&lt;td&gt;5.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Processor&lt;/td&gt;
&lt;td&gt;1.0GHz dual-core&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RAM&lt;/td&gt;
&lt;td&gt;1GB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Storage&lt;/td&gt;
&lt;td&gt;8GB&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: App Forms</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/app-forms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/app-forms/</guid>
      <description>
        
        
        &lt;p&gt;App forms are used for care guides within the web app, whether accessed in browser or via the Android app. When a user completes an app form, the contents are saved in the database with the type &lt;code&gt;data_record&lt;/code&gt;. These docs are known in the app as &lt;a href=&#34;https://docs.communityhealthtoolkit.org/beta/apps/features/reports/&#34;&gt;Reports&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;App forms are defined by the following files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A XML form definition using a CHT-enhanced ODK XForm format&lt;/li&gt;
&lt;li&gt;A XLSForm form definition, easier to write and converts to the XForm (optional)&lt;/li&gt;
&lt;li&gt;Meta information in the &lt;code&gt;{form_name}.properties.json&lt;/code&gt; file (optional)&lt;/li&gt;
&lt;li&gt;Media files in the &lt;code&gt;{form_name}-media&lt;/code&gt; directory (optional)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;xform&#34;&gt;XForm&lt;/h2&gt;
&lt;p&gt;A CHT-enhanced version of the ODK XForm standard is supported.&lt;/p&gt;
&lt;p&gt;Data needed during the completion of the form (eg patient&amp;rsquo;s name, prior information) is passed into the &lt;code&gt;inputs&lt;/code&gt; group. Reports that have at least one of &lt;code&gt;place_id&lt;/code&gt;, &lt;code&gt;patient_id&lt;/code&gt;, and &lt;code&gt;patient_uuid&lt;/code&gt; at the top level will be associated with that contact.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See Also:&lt;/em&gt; &lt;a href=https://docs.communityhealthtoolkit.org/beta/apps/reference/contact-forms/#care-guides&gt;Passing contact data to care guides&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A typical form ends with a summary group (eg &lt;code&gt;group_summary&lt;/code&gt;, or &lt;code&gt;group_review&lt;/code&gt;) where important information is shown to the user before they submit the form.&lt;/p&gt;
&lt;p&gt;In between the &lt;code&gt;inputs&lt;/code&gt; and the closing group is the form flow - a collection of questions that can be grouped into pages. All data fields submitted with a form are stored, but often important information that will need to be accessed from the form is brought to the top level. To make sure forms are properly associated to a contact, make sure at least one of &lt;code&gt;place_id&lt;/code&gt;, &lt;code&gt;patient_id&lt;/code&gt;, and &lt;code&gt;patient_uuid&lt;/code&gt; is stored at the top level of the form.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See Also:&lt;/em&gt; &lt;a href=https://docs.communityhealthtoolkit.org/beta/design/apps/#content-and-layout&gt;Content and Layout&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;xlsform&#34;&gt;XLSForm&lt;/h2&gt;
&lt;p&gt;Since writing raw XML can be tedious, we suggest creating the forms using the &lt;a href=&#34;http://xlsform.org/&#34;&gt;XLSForm standard&lt;/a&gt;, and using the &lt;a href=&#34;https://github.com/medic/medic-conf&#34;&gt;medic-conf&lt;/a&gt; command line configurer tool to &lt;a href=&#34;#build&#34;&gt;convert them to XForm format&lt;/a&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;label&lt;/th&gt;
&lt;th&gt;relevant&lt;/th&gt;
&lt;th&gt;appearance&lt;/th&gt;
&lt;th&gt;calculate&lt;/th&gt;
&lt;th&gt;&amp;hellip;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;begin group&lt;/td&gt;
&lt;td&gt;inputs&lt;/td&gt;
&lt;td&gt;Inputs&lt;/td&gt;
&lt;td&gt;./source = &amp;lsquo;user&amp;rsquo;&lt;/td&gt;
&lt;td&gt;field-list&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hidden&lt;/td&gt;
&lt;td&gt;source&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hidden&lt;/td&gt;
&lt;td&gt;source_id&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;begin group&lt;/td&gt;
&lt;td&gt;contact&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;db:person&lt;/td&gt;
&lt;td&gt;_id&lt;/td&gt;
&lt;td&gt;Patient ID&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;db-object&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;patient_id&lt;/td&gt;
&lt;td&gt;Medic ID&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;hidden&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;Patient Name&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;hidden&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;end group&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;end group&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;calculate&lt;/td&gt;
&lt;td&gt;_id&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;../inputs/contact/_id&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;calculate&lt;/td&gt;
&lt;td&gt;patient_id&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;../inputs/contact/patient_id&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;calculate&lt;/td&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;../inputs/contact/name&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;hellip;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;begin group&lt;/td&gt;
&lt;td&gt;group_summary&lt;/td&gt;
&lt;td&gt;Summary&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;field-list summary&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;note&lt;/td&gt;
&lt;td&gt;r_patient_info&lt;/td&gt;
&lt;td&gt;**${patient_name}** ID: ${r_patient_id}&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;note&lt;/td&gt;
&lt;td&gt;r_followup&lt;/td&gt;
&lt;td&gt;Follow Up &amp;lt;i class=&amp;quot;fa fa-flag&amp;rdquo;&amp;gt;&amp;lt;/i&amp;gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;note&lt;/td&gt;
&lt;td&gt;r_followup_note&lt;/td&gt;
&lt;td&gt;${r_followup_instructions}&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;end group&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;cht-xform-widgets&#34;&gt;CHT XForm Widgets&lt;/h2&gt;
&lt;p&gt;Some XForm widgets have been added or modified for use in the app:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Bikram Sambat Datepicker&lt;/strong&gt;: Calendar widget using Bikram Sambat calendar. Used by default for appropriate languages.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Countdown Timer&lt;/strong&gt;: A visual timer widget that starts when tapped/clicked, and has an audible alert when done. To use it create a &lt;code&gt;string&lt;/code&gt; field with an &lt;code&gt;appearance&lt;/code&gt; set to &lt;code&gt;countdown-timer&lt;/code&gt;. The duration of the timer is the field&amp;rsquo;s value, which can be set in the XLSForm&amp;rsquo;s &lt;code&gt;default&lt;/code&gt; column. If this value is not set, the timer will be set to 60 seconds.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Contact Selector&lt;/strong&gt;: Select a contact, such as a person or place, and save their UUID in the report. To use create a field of type &lt;code&gt;db:{{contact_type}}&lt;/code&gt; (eg &lt;code&gt;db:person&lt;/code&gt;, &lt;code&gt;db:clinic&lt;/code&gt;) with appearance &lt;code&gt;db-object&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rapid Diagnostic Test capture&lt;/strong&gt;: Take a picture of a Rapid Diagnotistic Test and save it with the report. Works with &lt;a href=&#34;https://github.com/medic/rdt-capture/&#34;&gt;rdt-capture Android application&lt;/a&gt;. To use create a string field with appearance &lt;code&gt;mrdt-verify&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Simprints registration&lt;/strong&gt;: Register a patient with the Simprints biometric tool. To include in a form create a &lt;code&gt;string&lt;/code&gt; field with &lt;code&gt;appearance&lt;/code&gt; of &lt;code&gt;simprints-reg&lt;/code&gt;. Requires the Simprints app connected with hardware, or &lt;a href=&#34;https://github.com/medic/mocksimprints&#34;&gt;mock app&lt;/a&gt;. Demo only, not ready for production since API key is hardcoded.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The code for these widgets can be found in the &lt;a href=&#34;https://github.com/medic/medic/tree/master/webapp/src/js/enketo/widgets&#34;&gt;Medic repo&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;contact-selector-detailed&#34;&gt;Contact Selector Detailed&lt;/h3&gt;
&lt;p&gt;Using a contact selector allows you to get data off the selected contact(person or place) or search for an existing contact.&lt;/p&gt;
&lt;p&gt;When using with the appearance column set to &lt;code&gt;db-object&lt;/code&gt;. The contact selector will display as a search box allowing you to search for the type of contact specified when building the report. EX: &lt;code&gt;db-person&lt;/code&gt; will only search for contacts with type of person.&lt;/p&gt;
&lt;p&gt;When used as a field you can pull the current contact. This is can be used to link reports to a person or place where you started the form from. Getting the data of &lt;code&gt;_id&lt;/code&gt; or &lt;code&gt;patient_id&lt;/code&gt; and setting those to &lt;code&gt;patient_id&lt;/code&gt; or &lt;code&gt;patient_uuid&lt;/code&gt; on the final report will link that report so it displays on their contact summary page.&lt;/p&gt;
&lt;p&gt;Example of getting the data from the contact and assigning it to the fields neccessary to link the report.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;label&lt;/th&gt;
&lt;th&gt;relevant&lt;/th&gt;
&lt;th&gt;appearance&lt;/th&gt;
&lt;th&gt;calculate&lt;/th&gt;
&lt;th&gt;&amp;hellip;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;begin group&lt;/td&gt;
&lt;td&gt;contact&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;db:person&lt;/td&gt;
&lt;td&gt;_id&lt;/td&gt;
&lt;td&gt;Patient ID&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;db-object&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;patient_id&lt;/td&gt;
&lt;td&gt;Medic ID&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;hidden&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;Patient Name&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;hidden&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;end group&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;calculate&lt;/td&gt;
&lt;td&gt;patient_uuid&lt;/td&gt;
&lt;td&gt;Patient UUID&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;../contact/_id&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;calculate&lt;/td&gt;
&lt;td&gt;patient_id&lt;/td&gt;
&lt;td&gt;Patient ID&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;../contact/patient_id&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;cht-xpath-functions&#34;&gt;CHT XPath Functions&lt;/h2&gt;
&lt;h3 id=&#34;difference-in-months&#34;&gt;&lt;code&gt;difference-in-months&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Calculates the number of whole calendar months between two dates. This is often used when determining a child&amp;rsquo;s age for immunizations or assessments.&lt;/p&gt;
&lt;h3 id=&#34;z-score&#34;&gt;&lt;code&gt;z-score&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;In Enketo forms you have access to an XPath function to calculate the z-score value for a patient.&lt;/p&gt;
&lt;h2 id=&#34;properties&#34;&gt;Properties&lt;/h2&gt;
&lt;p&gt;The meta information in the &lt;code&gt;{form_name}.properties.json&lt;/code&gt; file defines the form&amp;rsquo;s title and icon, as well as when and where the form should be available.&lt;/p&gt;
&lt;h3 id=&#34;formsappform_namepropertiesjson&#34;&gt;&lt;code&gt;forms/app/{form_name}.properties.json&lt;/code&gt;&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;property&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;th&gt;required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;title&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The form&amp;rsquo;s title seen in the app. Uses a localization array using the 2-letter code, not the translation keys discussed in the &lt;a href=&#34;#localization&#34;&gt;Localization section&lt;/a&gt;.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;icon&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Icon associated with the form. The value is the image&amp;rsquo;s key in the &lt;code&gt;resources.json&lt;/code&gt; file, as described in the &lt;a href=&#34;#icons&#34;&gt;Icons section&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;context&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The context defines when and where the form should be available in the app&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;context.person&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Boolean determining if the form can be seen in the Action list for a person&amp;rsquo;s profile. This is still subject to the &lt;code&gt;expression&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;context.place&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Boolean determining if the form can be seen in the Action list for a person&amp;rsquo;s profile. This is still subject to the &lt;code&gt;expression&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;context.expression&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A JavaScript expression which is evaluated when a contact profile or the reports tab is viewed. If the expression evaluates to true, the form will be listed as an available action. The inputs &lt;code&gt;contact&lt;/code&gt;, &lt;code&gt;user&lt;/code&gt;, and &lt;code&gt;summary&lt;/code&gt; are available. By default, forms are not shown on the reports tab, use &lt;code&gt;&amp;quot;expression&amp;quot;: &amp;quot;!contact&amp;quot;&lt;/code&gt; to show the form on the Reports tab since there is no contact for this scenario.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;code-sample&#34;&gt;Code sample&lt;/h3&gt;
&lt;p&gt;In this sample properties file, the associated form would only show on a person&amp;rsquo;s page, and only if their sex is unspecified or female and they are between 10 and 65 years old:&lt;/p&gt;
&lt;h4 id=&#34;formsapppregnancypropertiesjson&#34;&gt;&lt;code&gt;forms/app/pregnancy.properties.json&lt;/code&gt;&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;locale&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;content&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;New Pregnancy&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;locale&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;hi&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;content&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;नई गर्भावस्था&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;icon&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;pregnancy-1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;context&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;person&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;place&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;expression&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;contact.type === &amp;#39;person&amp;#39; &amp;amp;&amp;amp; (!contact.sex || contact.sex === &amp;#39;female&amp;#39;) &amp;amp;&amp;amp; (!contact.date_of_birth || (ageInYears(contact) &amp;gt;= 10 &amp;amp;&amp;amp; ageInYears(contact) &amp;lt; 65))&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;build&#34;&gt;Build&lt;/h2&gt;
&lt;p&gt;Convert and build the app forms into your application using the &lt;code&gt;convert-app-forms&lt;/code&gt; and &lt;code&gt;upload-app-forms&lt;/code&gt; actions in &lt;code&gt;medic-conf&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;medic-conf --local convert-app-forms upload-app-forms
&lt;/code&gt;&lt;/pre&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: App Settings</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/app-settings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/app-settings/</guid>
      <description>
        
        
        &lt;p&gt;Much of the configuration of the app is stored in the database in a document with id &amp;ldquo;settings&amp;rdquo;. Most sections are described on their own in the &lt;a href=&#34;..&#34;&gt;Reference Documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;optional-settings&#34;&gt;Optional Settings&lt;/h2&gt;
&lt;p&gt;The following settings do not need to be specified. They should only be defined when the default implementation needs to be changed.&lt;/p&gt;
&lt;h3 id=&#34;app_settingsjson&#34;&gt;&lt;code&gt;app_settings.json&lt;/code&gt;&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Setting&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;th&gt;Version&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;phone_validation&lt;/td&gt;
&lt;td&gt;&lt;ul&gt;&lt;li&gt;&amp;quot;full&amp;rdquo;: full validation of a phone number for a region using length and prefix information.&lt;/li&gt;&lt;li&gt;&amp;quot;partial&amp;rdquo;: quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.&lt;/li&gt;&lt;li&gt;&amp;quot;none&amp;rdquo;: allows almost any values but still fails for any phone that contains a-z chars.&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;
&lt;td&gt;&amp;ldquo;full&amp;rdquo;&lt;/td&gt;
&lt;td&gt;3.1.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;uhc.contacts_default_sort&lt;/td&gt;
&lt;td&gt;&lt;ul&gt;&lt;li&gt;&amp;quot;alpha&amp;rdquo;: Sort contacts alphanumerically&lt;/li&gt;&lt;li&gt;&amp;quot;last_visited_date&amp;rdquo;: sort contacts by the date they were most recently visited.&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;
&lt;td&gt;&amp;ldquo;alpha&amp;rdquo;&lt;/td&gt;
&lt;td&gt;2.18.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;uhc.visit_count.month_start_date&lt;/td&gt;
&lt;td&gt;The date of each month when the visit count is reset to 0.&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;2.18.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;uhc.visit_count.visit_count_goal&lt;/td&gt;
&lt;td&gt;The monthly visit count goal.&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;2.18.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;outgoing_deny_list&lt;/td&gt;
&lt;td&gt;All outgoing messages will be denied (unsent) if the recipient phone number starts with an entry in this list. A comma delimited list. (eg. &lt;code&gt;outgoing_deny_list=&amp;quot;253,ORANGE&amp;quot;&lt;/code&gt; will deny all messages sent to &lt;code&gt;253 543 4448&lt;/code&gt; and &lt;code&gt;ORANGE NET&lt;/code&gt;)&lt;/td&gt;
&lt;td&gt;&amp;quot;&amp;rdquo;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;outgoing_deny_shorter_than&lt;/td&gt;
&lt;td&gt;Deny all messages to recipient phone numbers which are shorter than this value. Intended to avoid &lt;a href=&#34;../troubleshooting/troubleshooting-quick-pointers.md#message-loops&#34;&gt;message loops&lt;/a&gt; with short codes used by gateways (eg. &lt;code&gt;60396&lt;/code&gt;). An integer.&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;3.3.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;outgoing_deny_with_alphas&lt;/td&gt;
&lt;td&gt;When &lt;code&gt;true&lt;/code&gt;, deny all messages to recipient phone numbers containing letters (eg. &lt;code&gt;Safaricom&lt;/code&gt;). Intended to avoid &lt;a href=&#34;../troubleshooting/troubleshooting-quick-pointers.md#message-loops&#34;&gt;message loops&lt;/a&gt; with non-numeric senders used by gateways. A boolean.&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;3.3.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;outgoing_deny_with_alphas&lt;/td&gt;
&lt;td&gt;When &lt;code&gt;true&lt;/code&gt;, deny all messages to recipient phone numbers containing letters (eg. &lt;code&gt;Safaricom&lt;/code&gt;). Intended to avoid &lt;a href=&#34;../troubleshooting/troubleshooting-quick-pointers.md#message-loops&#34;&gt;message loops&lt;/a&gt; with non-numeric senders used by gateways. A boolean.&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;3.3.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;task_day_limit&lt;/td&gt;
&lt;td&gt;The number of days before a task is due to show the due date.&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;3.9.0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;code-sample&#34;&gt;Code Sample&lt;/h2&gt;
&lt;p&gt;For more details on what you can use in settings, check out the &lt;a href=&#34;https://github.com/medic/medic/blob/master/config/standard/app_settings.json&#34;&gt;superset of supported settings&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;build&#34;&gt;Build&lt;/h2&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

&lt;p&gt;To include your settings into your app, you must compile them to include modular components, then upload them to your instance.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;medic-conf --local compile-app-settings backup-app-settings upload-app-settings
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>Apps: App Settings Validation</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/app-settings-validations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/app-settings-validations/</guid>
      <description>
        
        
        &lt;p&gt;Validation rules are code fragments used to determine if some input is valid. For example, to say a field is only valid if the value has at least five characters, you would use the lenMin(5). They are used in &lt;code&gt;registrations[].validations.list[].rule&lt;/code&gt; and &lt;code&gt;patient_reports[].validations.list[].rule&lt;/code&gt; to determine if an incoming report is accepted. A report is accepted as valid only if all rules return &lt;code&gt;true&lt;/code&gt;. If any validation rule returns &lt;code&gt;false&lt;/code&gt; then the report is marked as invalid, and a message is automatically sent to the submitter. The content for the message is set in the &lt;code&gt;translation_key&lt;/code&gt; associated to each rule. If a report fails multiple validations then each message will be sent. These can be combined into a single SMS by specifying &lt;code&gt;&amp;quot;*.validations.join_responses&amp;quot; : true&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;operators&#34;&gt;Operators&lt;/h2&gt;
&lt;p&gt;The available operators are:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Operator&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&amp;amp;&amp;amp;&lt;/td&gt;
&lt;td&gt;and&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;||&lt;/td&gt;
&lt;td&gt;or&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;!&lt;/td&gt;
&lt;td&gt;not&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;a ? b : c&lt;/td&gt;
&lt;td&gt;ternary, ie: if &amp;lsquo;a&amp;rsquo; is true, then check &amp;lsquo;b&amp;rsquo;, otherwise check &amp;lsquo;c&amp;rsquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;()&lt;/td&gt;
&lt;td&gt;nested blocks, eg: &amp;lsquo;a &amp;amp;&amp;amp; (b&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;rules&#34;&gt;Rules&lt;/h2&gt;
&lt;p&gt;Validation settings may consist of Pupil.js rules and rules specific to Medic Mobile.
These two types of rules cannot be combined as part of the same rule.&lt;/p&gt;
&lt;p&gt;Not OK:
&lt;code&gt;rule: &amp;quot;regex(\d{5}) &amp;amp;&amp;amp; unique(&#39;patient_id&#39;)&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;OK:
&lt;code&gt;rule: &amp;quot;regex(\d{5}) &amp;amp;&amp;amp; max(11111)&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If for example you want to validate that patient_id is 5 numbers and it
is unique (or some other custom validation) you need to define two
validation configs/separate rules in your settings. Example validation
settings:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[
	{
		property: &amp;quot;patient_id&amp;quot;,
		rule: &amp;quot;regex(\d{5})&amp;quot;,
		message: [{
		    content: &amp;quot;Patient ID must be 5 numbers.&amp;quot;,
		    locale: &amp;quot;en&amp;quot;
	}]
	},
	{
		property: &amp;quot;patient_id&amp;quot;,
		rule: &amp;quot;unique(&#39;patient_id&#39;)&amp;quot;,
		message: [{
		    content: &amp;quot;Patient ID must be unique.&amp;quot;,
		    locale: &amp;quot;en&amp;quot;
		}]
	}
]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;validate()&lt;/code&gt; modifies the property value of the second item to
&lt;code&gt;patient_id_unique&lt;/code&gt; so that pupil.validate() still returns a valid
result.  Then we process the result once more to extract the custom
validation results and error messages.&lt;/p&gt;
&lt;h3 id=&#34;pupiljs-validation-functions&#34;&gt;Pupil.js validation functions&lt;/h3&gt;
&lt;p&gt;Available validation functions are available at &lt;a href=&#34;https://www.npmjs.com/package/pupil#validation-functions&#34;&gt;https://www.npmjs.com/package/pupil#validation-functions&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The following functions are available by default:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Comparison&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;iEquals&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Case insensitive comparison&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;sEquals&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Type sensitive equals&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;siEquals&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Type sensitive case insensitive equals&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;lenMin&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Minimum length&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;lenMax&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Maximum length&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;lenEquals&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Exact length&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;min&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Minimum value&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;max&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Maximum value&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;between&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Minimum and maximum value&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;in&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;One of the provided values&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;required&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Must have a value&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;optional&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Always valid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;numeric&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Numbers only&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;integer&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Integer numbers only&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;alpha&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Letters only&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;alphaNumeric&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Numbers and letters only&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;email&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Email address format&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;regex&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A custom regular expression&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;equalsTo&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Compare to another field by its key&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;sample-usage&#34;&gt;Sample usage&lt;/h4&gt;
&lt;p&gt;For case-insensitive comparison &lt;code&gt;iEquals&lt;/code&gt; function in Pupil,
And you can use &lt;code&gt;||&lt;/code&gt; for logical OR : &lt;a href=&#34;https://www.npmjs.com/package/pupil#rule-strings&#34;&gt;https://www.npmjs.com/package/pupil#rule-strings&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So you can do this :
&lt;code&gt;rule: &#39;iEquals(&amp;quot;mary&amp;quot;) || iEquals(&amp;quot;john&amp;quot;)&#39;&lt;/code&gt;
matches &amp;ldquo;mary&amp;rdquo;, &amp;ldquo;Mary&amp;rdquo;, &amp;ldquo;john&amp;rdquo;, &amp;ldquo;John&amp;rdquo;, &amp;ldquo;JOhN&amp;rdquo;, etc. Not &amp;ldquo;maryjohn&amp;rdquo;&lt;/p&gt;
&lt;h3 id=&#34;medic-mobile-validation-functions&#34;&gt;Medic Mobile validation functions&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;unique(*fields)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Returns &lt;code&gt;true&lt;/code&gt; if no existing valid report has the same value for all of the listed fields. Fields are compared to those at the top level and within &lt;code&gt;fields&lt;/code&gt; for every report doc. To include the form type use &lt;code&gt;&#39;form&#39;&lt;/code&gt; as one of the fields. Eg &lt;code&gt;uniqueWithin(&#39;form&#39;, &#39;patient_id&#39;, &#39;1 week&#39;)&lt;/code&gt; checks that the same report wasn&amp;rsquo;t submitted for this patient in the past week.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;uniqueWithin(*fields, time_period)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Same as &lt;code&gt;unique&lt;/code&gt; but the last argument is the time period in which to search. Eg &lt;code&gt;uniqueWithin(&#39;form&#39;, &#39;patient_id&#39;)&lt;/code&gt; checks that this report was never submitted for this patient.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;exists(form_id, field)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Returns &lt;code&gt;true&lt;/code&gt; if a report matches the &lt;code&gt;form_id&lt;/code&gt; and value for &lt;code&gt;field&lt;/code&gt;. This is useful to check that a patient was registered for a service before reporting about it. Eg &lt;code&gt;exists(&#39;REG&#39;, &#39;patient_id&#39;)&lt;/code&gt; checks that a &lt;code&gt;REG&lt;/code&gt; form was already submitted for a patient. As of 2.12 most uses of this function are obsolete because checking for a valid &lt;code&gt;patient_id&lt;/code&gt; is done automatically by the &lt;code&gt;accept_patient_report&lt;/code&gt; transition using &lt;code&gt;registration_not_found&lt;/code&gt; in the &lt;code&gt;messages.event_type&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;isISOWeek(weekFieldName[, yearFieldName])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Returns &lt;code&gt;true&lt;/code&gt; if the current report has a week value that is less or equal to the number of ISO weeks of the current year or the year value of the same report. The first parameter is the field name for the week and the second parameter is the field name for the year: &lt;code&gt;isISOWeek(&#39;week&#39;, &#39;year&#39;)&lt;/code&gt;. If the second parameter is not specified, then the current year is used: &lt;code&gt;isISOWeek(&#39;week&#39;)&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Collect Forms</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/collect-forms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/collect-forms/</guid>
      <description>
        
        
        &lt;p&gt;ODK XForms are used to render forms in the Medic Collect Android app. These forms cannot use any Medic-specific XForm notations. All Medic Collect forms are processed as SMS (even when submitted over a wifi) therefore a corresponding JSON form with matching fields is used to interpret the incoming report.&lt;/p&gt;
&lt;p&gt;Collect forms must be in the &lt;code&gt;forms/collect&lt;/code&gt; folder to be processed by &lt;a href=&#34;https://github.com/medic/medic-conf&#34;&gt;&lt;code&gt;medic-conf&lt;/code&gt;&lt;/a&gt;&amp;lsquo;s &lt;code&gt;convert-collect-forms&lt;/code&gt; and &lt;code&gt;upload-collect-forms&lt;/code&gt; actions. Once uploaded to the server, they can be downloaded by the Medic Collect app. These forms can also be included in Medic Collect builds for users without a data connection to get forms.&lt;/p&gt;
&lt;p&gt;XForms require a couple minor changes to be compatible with Medic Collect so that they can properly be received by a Medic instance. The changes can be done either manually in the XForm&amp;rsquo;s XML, or automatically with XLSForm forms using &lt;code&gt;medic-conf&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;automatic-changes-with-xlsforms&#34;&gt;Automatic changes with XLSForms&lt;/h3&gt;
&lt;p&gt;If using a &lt;a href=&#34;http://xlsform.org/&#34;&gt;XLSForm&lt;/a&gt; and using &lt;a href=&#34;https://github.com/medic/medic-conf&#34;&gt;&lt;code&gt;medic-conf&lt;/code&gt;&lt;/a&gt; to convert to XForm, the necessary fields will be automatically added to the resulting XForm. You can override the default prefix and separator by declaring &lt;code&gt;sms_keyword&lt;/code&gt; and &lt;code&gt;sms_seperator&lt;/code&gt; respectively in the Settings tab.&lt;/p&gt;
&lt;h3 id=&#34;manual-changes-in-xform&#34;&gt;Manual changes in XForm&lt;/h3&gt;
&lt;p&gt;Collect forms need &lt;code&gt;prefix&lt;/code&gt; and &lt;code&gt;delimiter&lt;/code&gt; values added to the XForm&amp;rsquo;s XML. This is done where the form ID is declared in the instance&amp;rsquo;s data model. For example, the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;instance&amp;gt;
   &amp;lt;data id=&amp;quot;myform&amp;quot; &amp;gt;
   ...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;becomes:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;instance&amp;gt;
   &amp;lt;data id=&amp;quot;myform&amp;quot; prefix=&amp;quot;J1!FORM_CODE!&amp;quot; delimiter=&amp;quot;#&amp;quot;&amp;gt;
   ...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note that &lt;code&gt;FORM_CODE&lt;/code&gt; should be replaced with the form code as defined in the JSON forms version of the form. If the form code is &lt;code&gt;ABCD&lt;/code&gt; the prefix value would be &lt;code&gt;J1!ABCD!&lt;/code&gt;, resulting in &lt;code&gt;prefix=&amp;quot;J1!ABCD!&amp;quot;&lt;/code&gt;. In case you are curious, the &lt;code&gt;J1&lt;/code&gt; lets the Medic Mobile server know that version 1 of the JavaRosa parser should be used on the incoming SMS.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Contact Forms</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/contact-forms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/contact-forms/</guid>
      <description>
        
        
        &lt;p&gt;Contact forms are used for the creation and editing of each contact. The type associated to people is &lt;code&gt;person&lt;/code&gt;, and there are three types of places corresponding to levels in the app: &lt;code&gt;district_hospital&lt;/code&gt; &amp;gt; &lt;code&gt;health_center&lt;/code&gt; &amp;gt; &lt;code&gt;clinic&lt;/code&gt;. The display names for the place levels can be changed via &lt;a href=&#34;https://docs.communityhealthtoolkit.org/beta/apps/reference/localization/&#34;&gt;custom translations&lt;/a&gt;, and wherever they are defined in the contact forms. Each contact type has its own XForm where it defines the fields that it wants to store/edit for the contact:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- /forms/contact/person-create.xml
- /forms/contact/person-edit.xml
- /forms/contact/clinic-create.xml
- /forms/contact/clinic-edit.xml
- /forms/contact/health_center-create.xml
- /forms/contact/health_center-edit.xml
- /forms/contact/district_hospital-create.xml
- /forms/contact/district_hospital-edit.xml
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To create the above XForm files it is recommended to use XLSForms. Also, if the contact forms will be similar for all places, you can use a &lt;code&gt;PLACE_TYPE-create.xlsx&lt;/code&gt; file for creation, a &lt;code&gt;PLACE_TYPE-edit.xlsx&lt;/code&gt; for editing, and have &lt;code&gt;medic-conf&lt;/code&gt; generate the individual forms. For this you would also need &lt;code&gt;forms/contact/places.json&lt;/code&gt;, where you would define the place names. From the XLSForm you can refer to the place type with &lt;code&gt;PLACE_TYPE&lt;/code&gt;, and the place name with &lt;code&gt;PLACE_NAME&lt;/code&gt;. You can even use the place type for conditional behaviour in the form. The base files needed would therefore be:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- /forms/contact/person-create.xlsx
- /forms/contact/person-edit.xlsx
- /forms/contact/PLACE_TYPE-create.xlsx
- /forms/contact/PLACE_TYPE-edit.xlsx
- /forms/contact/places.json
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here is an example of a &lt;code&gt;places.json&lt;/code&gt; files:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
  &amp;quot;clinic&amp;quot;: &amp;quot;Village Clinic&amp;quot;,
  &amp;quot;health_center&amp;quot;: &amp;quot;Health Center&amp;quot;,
  &amp;quot;district_hospital&amp;quot;: &amp;quot;District Hospital&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Convert and build the contact forms into your application using the &lt;code&gt;convert-contact-forms&lt;/code&gt; and &lt;code&gt;upload-contact-forms&lt;/code&gt; actions in &lt;code&gt;medic-conf&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;medic-conf --local convert-contact-forms upload-contact-form&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Contact Pages</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/contact-page/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/contact-page/</guid>
      <description>
        
        
        &lt;p&gt;Contact profile pages display basic information about the contact along with their history and upcoming tasks.
A contact&amp;rsquo;s profile page is defined by the &lt;a href=&#34;#contact-summary&#34;&gt;Fields&lt;/a&gt;, &lt;a href=&#34;#condition-cards&#34;&gt;Cards&lt;/a&gt;, and &lt;a href=&#34;#care-guides&#34;&gt;Care Guides&lt;/a&gt; available.&lt;/p&gt;
&lt;h2 id=&#34;contact-summary&#34;&gt;Contact Summary&lt;/h2&gt;
&lt;p&gt;Each field that can be shown on a contact&amp;rsquo;s profile is defined as an object in the &lt;code&gt;fields&lt;/code&gt; array of &lt;code&gt;contact-summary.templated.js&lt;/code&gt;. The properties for each object determine how and when the field is shown.&lt;/p&gt;
&lt;h3 id=&#34;contact-summarytemplatedjs-fields&#34;&gt;&lt;code&gt;contact-summary.templated.js .fields[]&lt;/code&gt;&lt;/h3&gt;
&lt;!-- If you change this table, update the duplicate descriptions in ### Cards --&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;property&lt;/th&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;th&gt;required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;label&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A translation key which is shown with the field.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;icon&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The name of the icon to display beside this field, as defined through the Configuration &amp;gt; Icons page.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;value&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The value shown for the field.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The display filter to apply to the value, eg: &lt;code&gt;{ value: &#39;2005-10-09&#39;, filter: &#39;age&#39; }&lt;/code&gt; will render as &amp;ldquo;11 years&amp;rdquo;. Common filters are: &lt;code&gt;age&lt;/code&gt;, &lt;code&gt;phone&lt;/code&gt;, &lt;code&gt;weeksPregnant&lt;/code&gt;, &lt;code&gt;relativeDate&lt;/code&gt;, &lt;code&gt;relativeDay&lt;/code&gt;, &lt;code&gt;fullDate&lt;/code&gt;, &lt;code&gt;simpleDate&lt;/code&gt;, &lt;code&gt;simpleDateTime&lt;/code&gt;, &lt;code&gt;lineage&lt;/code&gt;, &lt;code&gt;resourceIcon&lt;/code&gt;, &lt;code&gt;translate&lt;/code&gt;. For the complete list of filters, and more details on what each does, check out the code in &lt;a href=&#34;https://github.com/medic/medic/tree/master/webapp/src/js/filters&#34;&gt;&lt;code&gt;medic/webapp/src/js/filters&lt;/code&gt; dir&lt;/a&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;width&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;integer&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The horizontal space for the field. Common values are 12 for full width, 6 for half width, or 3 for quarter width. Default 12.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;translate&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Whether or not to translate the &lt;code&gt;value&lt;/code&gt;. Defaults to false.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;context&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;object&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;When &lt;code&gt;translate: true&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; uses &lt;a href=&#34;https://angular-translate.github.io/docs/#/guide/06_variable-replacement&#34;&gt;translation variables&lt;/a&gt;, this value should provide the translation variables.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;appliesIf&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;function()&lt;/code&gt; or &lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Return true if the field should be shown.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;appliesToType&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string[]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Filters the contacts for which &lt;code&gt;appliesIf&lt;/code&gt; will be evaluated. For example, &lt;code&gt;[&#39;person&#39;]&lt;/code&gt; or &lt;code&gt;[&#39;clinic&#39;, &#39;health_center&#39;]&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;!-- TODO: See [How to configure profile pages]() for an example.  --&gt;
&lt;h2 id=&#34;condition-cards&#34;&gt;Condition Cards&lt;/h2&gt;
&lt;p&gt;Each condition card is defined as a card object in the &lt;code&gt;cards&lt;/code&gt; array of &lt;code&gt;contact-summary.templated.js&lt;/code&gt;. The properties for each object determine how and when the card and its fields are shown.&lt;/p&gt;
&lt;h3 id=&#34;contact-summarytemplatedjs-cards&#34;&gt;&lt;code&gt;contact-summary.templated.js .cards[]&lt;/code&gt;&lt;/h3&gt;
&lt;!-- If you change the field data in this table, update the duplicate descriptions in ### Fields --&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;property&lt;/th&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;th&gt;required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;label&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;translation key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Label on top of card.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;appliesToType&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string[]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A filter, so &lt;code&gt;appliesIf&lt;/code&gt; is called only if the contact&amp;rsquo;s type matches one or more of the elements. For example, &lt;code&gt;[&#39;person&#39;]&lt;/code&gt;. Please, note that &lt;code&gt;[&#39;report&#39;]&lt;/code&gt; is also allowed to create a report card. But, you cannot use it in conjunction with a contact&amp;rsquo;s type.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;appliesIf&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;function()&lt;/code&gt; or &lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Return true if the field should be shown.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;modifyContext&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;function(context)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Used to modify or add data which is passed as input to forms filled from the contact page.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Array[]&lt;/code&gt; of &lt;a href=&#34;#fields&#34;&gt;fields&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;The content of the card.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields[n].appliesIf&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;boolean&lt;/code&gt; or &lt;code&gt;function(report)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Same as Fields.appliesIf above.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields[n].label&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt; or &lt;code&gt;function(report)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Label shown with the field.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields[n].icon&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt; or &lt;code&gt;function(report)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The name of the icon to display beside this field, as defined through the Configuration &amp;gt; Icons page.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields[n].value&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt; or &lt;code&gt;function(report)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The value shown for the field.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields[n].filter&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt; or &lt;code&gt;function(report)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The display filter to apply to the value, eg: &lt;code&gt;{ value: &#39;2005-10-09&#39;, filter: &#39;age&#39; }&lt;/code&gt; will render as &amp;ldquo;11 years&amp;rdquo;. Common filters are: &lt;code&gt;age&lt;/code&gt;, &lt;code&gt;phone&lt;/code&gt;, &lt;code&gt;weeksPregnant&lt;/code&gt;, &lt;code&gt;relativeDate&lt;/code&gt;, &lt;code&gt;relativeDay&lt;/code&gt;, &lt;code&gt;fullDate&lt;/code&gt;, &lt;code&gt;simpleDate&lt;/code&gt;, &lt;code&gt;simpleDateTime&lt;/code&gt;, &lt;code&gt;lineage&lt;/code&gt;, &lt;code&gt;resourceIcon&lt;/code&gt;, &lt;code&gt;translate&lt;/code&gt;. For the complete list of filters, and more details on what each does, check out the code in &lt;a href=&#34;https://github.com/medic/medic/tree/master/webapp/src/js/filters&#34;&gt;&lt;code&gt;medic/webapp/src/js/filters&lt;/code&gt; dir&lt;/a&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields[n].width&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;integer&lt;/code&gt; or &lt;code&gt;function(report)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The horizontal space for the field. Common values are 12 for full width, 6 for half width, or 3 for quarter width. Default 12.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields[n].translate&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;boolean&lt;/code&gt; or &lt;code&gt;function(report)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Whether or not to translate the &lt;code&gt;value&lt;/code&gt;. Defaults to false.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields[n].context&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;object&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;When &lt;code&gt;translate: true&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; uses &lt;a href=&#34;https://angular-translate.github.io/docs/#/guide/06_variable-replacement&#34;&gt;translation variables&lt;/a&gt;, this value should provide the translation variables. Only supports properties &lt;code&gt;count&lt;/code&gt; and &lt;code&gt;total&lt;/code&gt; on cards.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;!-- TODO: See [How to configure profile pages]() for an example. --&gt;
&lt;h2 id=&#34;care-guides&#34;&gt;Care Guides&lt;/h2&gt;
&lt;p&gt;Each care guide accessible from a contact profile is defined as an &lt;a href=&#34;https://docs.communityhealthtoolkit.org/beta/apps/reference/app-forms/&#34;&gt;App Form&lt;/a&gt;. Context information can be provided to forms via the &lt;code&gt;context&lt;/code&gt; object of &lt;code&gt;contact-summary.templated.js&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To show an App Form on a contact&amp;rsquo;s profile, the form&amp;rsquo;s &lt;code&gt;expression&lt;/code&gt; field in its properties file must evaluate to true for that contact. The context infomation from the profile is accessible as the variable &lt;code&gt;summary&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The context data is also available directly within the app forms&amp;rsquo; XForm calculations, as &lt;code&gt;instance(&#39;contact-summary&#39;)/context/${variable}&lt;/code&gt;. For instance if &lt;code&gt;context.is_pregnant&lt;/code&gt; is used in the contact summary, it can be accessed in an XForm field&amp;rsquo;s calculation as &lt;code&gt;instance(&#39;contact-summary&#39;)/context/is_pregnant&lt;/code&gt;. Note that these fields are not available when editing a previously completed form, or when accessing the form from outside of the profile page.&lt;/p&gt;
&lt;!-- TODO: See [How to configure profile pages]() and [How to build app forms]() for examples and more information. --&gt;
&lt;h2 id=&#34;code-samples&#34;&gt;Code samples&lt;/h2&gt;
&lt;p&gt;The following samples show how fields, cards, and care guide context comes together in the &lt;code&gt;contact-summary.templated.js&lt;/code&gt; file.&lt;/p&gt;
&lt;h3 id=&#34;contact-summarytemplatedjs&#34;&gt;&lt;code&gt;contact-summary.templated.js&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;module&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;use_cases&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;anc&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;isCoveredByUseCaseInLineage&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;lineage&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;anc&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;pnc&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;isCoveredByUseCaseInLineage&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;lineage&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;pnc&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;

  &lt;span style=&#34;color:#000&#34;&gt;fields&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;appliesToType&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;person&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;  &lt;span style=&#34;color:#000&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;patient_id&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;patient_id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;width&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;appliesToType&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;person&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;  &lt;span style=&#34;color:#000&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;contact.age&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;date_of_birth&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;width&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;filter&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;age&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;appliesToType&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;person&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;  &lt;span style=&#34;color:#000&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;contact.parent&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;lineage&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;filter&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;lineage&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;appliesToType&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;!person&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;appliesIf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;parent&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;lineage&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;];&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;contact.parent&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;lineage&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;filter&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;lineage&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;

  &lt;span style=&#34;color:#000&#34;&gt;cards&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;contact.profile.pregnancy&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;appliesToType&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;report&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;appliesIf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;extras&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;isActivePregnancy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;fields&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
          &lt;span style=&#34;color:#000&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;contact.profile.edd&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#000&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fields&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;edd_8601&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
          &lt;span style=&#34;color:#000&#34;&gt;filter&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;relativeDay&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#000&#34;&gt;width&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;12&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
          &lt;span style=&#34;color:#000&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;contact.profile.visit&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#000&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;contact.profile.visits.of&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#000&#34;&gt;translate&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#000&#34;&gt;count&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;extras&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;getSubsequentVisits&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;length&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
            &lt;span style=&#34;color:#000&#34;&gt;total&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
          &lt;span style=&#34;color:#000&#34;&gt;width&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
          &lt;span style=&#34;color:#000&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;contact.profile.risk.title&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#000&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;extras&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;isHighRiskPregnancy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;high&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;normal&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
          &lt;span style=&#34;color:#000&#34;&gt;translate&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#000&#34;&gt;width&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#000&#34;&gt;icon&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;extras&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;isHighRiskPregnancy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;risk&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;modifyContext&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ctx&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;ctx&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pregnant&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// don&amp;#39;t show Create Pregnancy Report button
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;contact-summary-extrasjs&#34;&gt;&lt;code&gt;contact-summary-extras.js&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;module&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;isActivePregnancy&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// ...
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;isCoveredByUseCaseInLineage&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;lineage&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;usecase&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// ...
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;isHighRiskPregnancy&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pregnancy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// ...
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;getSubsequentVisits&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// ...
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;build&#34;&gt;Build&lt;/h2&gt;
&lt;p&gt;To update the Contact profiles for an app, changes must be compiled into &lt;code&gt;app-settings&lt;/code&gt;, then uploaded.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;medic-conf --local compile-app-settings backup-app-settings upload-app-settings&lt;/code&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: DHIS2 Integration</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/dhis2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/dhis2/</guid>
      <description>
        
        
        &lt;p&gt;From 3.9.0 it is possible to integrate with DHIS2 by modifying the &lt;code&gt;dhisDataSets&lt;/code&gt; property in &lt;code&gt;app_settings.json&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See Also:&lt;/em&gt; &lt;a href=https://docs.communityhealthtoolkit.org/beta/apps/features/integrations/dhis2/#&gt;DHIS2 Integration&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;app_settingsjs-dhisdatasets&#34;&gt;&lt;code&gt;app_settings.js .dhisDataSets[]&lt;/code&gt;&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;id&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The data set id from DHIS2 with which to integrate&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;translation_key&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The translation key of the DHIS2 data set name to be displayed&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;code-samples&#34;&gt;Code samples&lt;/h2&gt;
&lt;p&gt;Configure the &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;translation_key&lt;/code&gt; of the DHIS2 data set. The &lt;code&gt;id&lt;/code&gt; corresponds to the &lt;code&gt;id&lt;/code&gt; of the data set in the DHIS2 instance you want to integrate with. The &lt;code&gt;translation_key&lt;/code&gt; corresponds to the name of the DHIS2 data set as it appears in the dropdown in the App Management app.&lt;/p&gt;
&lt;h3 id=&#34;app_settingsjs&#34;&gt;&lt;code&gt;app_settings.js&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;dhisDataSets&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;VMuFODsyWaO&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;translation_key&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;dhis.dataset.moh515&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;,&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Apps: Functions</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/functions/</guid>
      <description>
        
        
        &lt;h2 id=&#34;utils&#34;&gt;Utils&lt;/h2&gt;
&lt;p&gt;Utility functions in the Core Framework can make common tasks much easier. These are available only for Tasks and Targets. To use the function call &lt;code&gt;Utils.&amp;lt;function-name&amp;gt;(&amp;lt;params&amp;gt;)&lt;/code&gt;, for example &lt;code&gt;Utils.addDate(report.reported_date, 10)&lt;/code&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;isTimely(date, event)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Returns true if the given date is after the start date and before the end date of the event.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;addDate(date, days)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Returns a new Date set to midnight the given number of days after the given date. If no date is given the date defaults to today.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;getLmpDate(doc)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Attempts to work out the LMP from the given doc. If no LMP is given it defaults to four weeks before the reported_date.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;getSchedule(name)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Returns the task schedule with the given name from the configuration.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;getMostRecentTimestamp(reports, form)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Returns the reported_date of the most recent of the reports with form ID matching the given form.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;getMostRecentReport(reports, form)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Like &lt;code&gt;getMostRecentTimestamp&lt;/code&gt; but returns the report, not just the reported_date.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;isFormSubmittedInWindow(reports, form, start, end)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Returns true if any of the given reports are for the given form and were reported after start and before end.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;isFirstReportNewer(firstReport, secondReport)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Returns true if the firstReport was reported before the secondReport.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;isDateValid(date)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Returns true if the given date is a validate JavaScript Date.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;now()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Returns the current Date.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;MS_IN_DAY&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A constant for the number of milliseconds in a day.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;
Please open &lt;a href=&#34;https://github.com/medic/cht-core/issues/new&#34;&gt;an issue&lt;/a&gt; if you&amp;rsquo;d like other functions included.
&lt;/div&gt;

&lt;h2 id=&#34;nools-extras&#34;&gt;Nools Extras&lt;/h2&gt;
&lt;p&gt;Helper variables and functions can be defined in &lt;code&gt;nools-extras.js&lt;/code&gt;, which is shared by both &lt;code&gt;tasks.js&lt;/code&gt; and &lt;code&gt;targets.js&lt;/code&gt;. The following are global variables that can be used:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Variable&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;c.contact&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The contact&amp;rsquo;s doc. All contacts have &lt;code&gt;type&lt;/code&gt; of either &lt;code&gt;person&lt;/code&gt; or &lt;code&gt;place&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;c.reports&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An array of all the reports submitted about the contact.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;console&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Useful for outputting &lt;em&gt;debugging&lt;/em&gt; statements. Should not be used in production code.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Utils&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Useful functions across projects are available, and describe in the Utils section.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;contact-summary-extras&#34;&gt;Contact Summary Extras&lt;/h2&gt;
&lt;p&gt;Helper variables and functions for the contact summary can be defined in &lt;code&gt;contact-summary-extras.js&lt;/code&gt;. There are several variables available to inspect to generate the summary information:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Variable&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;contact&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The currently selected contact. This has minimal stubs for the &lt;code&gt;contact.parent&lt;/code&gt;, so if you want to refer to a property on the parent use &lt;code&gt;lineage&lt;/code&gt; below.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;reports&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An array of reports for the contact.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;lineage&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An array of the contact&amp;rsquo;s parents (2.13+), eg &lt;code&gt;lineage[0]&lt;/code&gt; is the parent, &lt;code&gt;lineage[1]&lt;/code&gt; is the grandparent, etc. Each lineage entry has full information for the contact, so you can use &lt;code&gt;lineage[1].contact.phone&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Graphics</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/graphics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/graphics/</guid>
      <description>
        
        
        &lt;h2 id=&#34;icons&#34;&gt;Icons&lt;/h2&gt;
&lt;p&gt;Apps can be customized by defining the icons to use for tasks, targets, and contacts.&lt;/p&gt;
&lt;p&gt;Add icons to the &lt;code&gt;resources&lt;/code&gt; folder, and include them by name in the resources.json file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
    &amp;quot;icon-risk&amp;quot;: &amp;quot;icon-healthcare-warning@2x.png&amp;quot;,
    &amp;quot;icon-treatment&amp;quot;: &amp;quot;icon-healthcare-medicine@2x.png&amp;quot;,
    &amp;quot;medic-clinic&amp;quot;: &amp;quot;medic-family.svg&amp;quot;,
    &amp;quot;medic-district-hospital&amp;quot;: &amp;quot;medic-health-center.svg&amp;quot;,
    &amp;quot;medic-health-center&amp;quot;: &amp;quot;medic-chw-area.svg&amp;quot;,
    &amp;quot;medic-person&amp;quot;: &amp;quot;medic-person.svg&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;See Also:&lt;/em&gt; &lt;a href=https://docs.communityhealthtoolkit.org/beta/design/icons/#&gt;Icon Library&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;build&#34;&gt;Build&lt;/h3&gt;
&lt;p&gt;Build the icons into the application with the &lt;code&gt;upload-resources&lt;/code&gt; action in &lt;code&gt;medic-conf&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;medic-conf --local upload-resources&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;branding&#34;&gt;Branding&lt;/h2&gt;
&lt;p&gt;The site title, favicon, and header logo are configurable. The location to change these are in the Admin console on the images page under the branding tab.&lt;/p&gt;
&lt;h2 id=&#34;partner-logos&#34;&gt;Partner logos&lt;/h2&gt;
&lt;p&gt;Adding your partner logos can be done in the Admin console on the images page under the Partners tab. This will add partner logos on the about page.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Hierarchy</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/hierarchy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/hierarchy/</guid>
      <description>
        
        
        &lt;p&gt;From 3.7.0 it is possible to configure what types of places and people are available by modifying the &lt;code&gt;contact_types&lt;/code&gt; array in the app settings. Each type has the following properties.&lt;/p&gt;
&lt;h3 id=&#34;app_settingsjson-contact_types&#34;&gt;&lt;code&gt;app_settings.json .contact_types[]&lt;/code&gt;&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;id&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;String identifier for the type. At times this will be used to sort the contacts in the UI so it is recommended to using a number prefix with gaps between numbers, eg: &lt;code&gt;10-district&lt;/code&gt;, &lt;code&gt;20-region&lt;/code&gt;, etc.&lt;/td&gt;
&lt;td&gt;Yes.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;name_key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The translation key used for the title for the contact profile.&lt;/td&gt;
&lt;td&gt;No, defaults to &amp;lsquo;contact.profile&amp;rsquo;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;group_key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The translation key used for the title of a list of contacts of this type.&lt;/td&gt;
&lt;td&gt;Yes.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;create_key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The translation key used on the button for creating new contacts of this type.&lt;/td&gt;
&lt;td&gt;Yes.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;edit_key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The translation key used on the button for editing contacts of this type.&lt;/td&gt;
&lt;td&gt;Yes.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;primary_contact_key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The translation key used to identify a person as the primary contact of contacts of this type.&lt;/td&gt;
&lt;td&gt;No, defaults to &amp;lsquo;Primary contact&amp;rsquo;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;parents&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An array of strings of IDs of parent types. If more than one then this type can appear in different places in the hierarchy. If more than one type lists the same type as a parent then a user will get a dropdown of places to create. If no parents then contacts of this type will be at the top of the hierarchy and cannot be added as a child of any contact.&lt;/td&gt;
&lt;td&gt;No, defaults to no parents.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;icon&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The string ID for the icon to show beside contacts of this type.&lt;/td&gt;
&lt;td&gt;Yes.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;create_form&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The string ID for the xform used to create contacts of this type.&lt;/td&gt;
&lt;td&gt;Yes.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;edit_form&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The string ID for the xform used to edit contacts of this type.&lt;/td&gt;
&lt;td&gt;No, defaults to the create_form.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;count_visits&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Whether or not to show a count of visits for contacts of this type. Requires UHC to be enabled.&lt;/td&gt;
&lt;td&gt;No, defaults to &lt;code&gt;false&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;person&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Whether this is a person type or a place type.&lt;/td&gt;
&lt;td&gt;No, defaults to &lt;code&gt;false&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;forms&#34;&gt;Forms&lt;/h3&gt;
&lt;p&gt;When creating contacts the type will be automatically assigned based on the button the user clicked. However if the form also creates sibling or child contacts these nested sections must specify a &lt;code&gt;type&lt;/code&gt; field with a hardcoded value of &amp;ldquo;contact&amp;rdquo; and a &lt;code&gt;contact_type&lt;/code&gt; field with the ID of the desired contact type.&lt;/p&gt;
&lt;h3 id=&#34;changing-the-configuration&#34;&gt;Changing the configuration&lt;/h3&gt;
&lt;p&gt;You can change any contact type configuration easily except for the IDs. To change the ID of a contact type in configuration of a project which already has contact data the contact docs will also have be updated to have a &lt;code&gt;type&lt;/code&gt; of &amp;ldquo;contact&amp;rdquo; and a &lt;code&gt;contact_type&lt;/code&gt; with the new ID of the contact type.&lt;/p&gt;
&lt;h3 id=&#34;migration&#34;&gt;Migration&lt;/h3&gt;
&lt;p&gt;If you already have person and place documents, switching from using the fixed hierarchy requires that you also update all the exisitng docs. Each contact and report holds the IDs of ancestors in their hierarchy so they will all need to be updated to be consistent with the changes you&amp;rsquo;ve made. You can use the medic-conf &lt;code&gt;move-contacts&lt;/code&gt; command to help with this migration.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: JSON Forms</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/json-forms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/json-forms/</guid>
      <description>
        
        
        &lt;p&gt;JSON Forms are used for parsing reports from formatted SMS, SIM applications, and Medic Collect. JSON form definitions are also used for interoperability with third-party systems. Each form is defined as an JSON form object according to the following schema.&lt;/p&gt;
&lt;h3 id=&#34;app_settingsjson-forms&#34;&gt;&lt;code&gt;app_settings.json .forms[]&lt;/code&gt;&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;property&lt;/th&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;th&gt;required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;meta&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;Information about the report.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;meta.code&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;The unique form identifier, which will be sent with all reports of this form. Must be the same as the form&amp;rsquo;s key.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;meta.icon&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;Name of the icon resource shown in the app.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;meta.translation_key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;Name of the form shown in the app.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;Collection of field objects included in the form.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields.${field}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;Field that is part of the form.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields.${field}.type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;Data type of field:&lt;br&gt;  - &lt;code&gt;&amp;quot;integer&amp;quot;&lt;/code&gt;: a whole number&lt;br&gt; - &lt;code&gt;&amp;quot;string&amp;quot;&lt;/code&gt;: any collection of characters&lt;br&gt; - &lt;code&gt;&amp;quot;date&amp;quot;&lt;/code&gt;: a date in the format &lt;code&gt;YYYY-mm-dd&lt;/code&gt;, for example &amp;ldquo;2019-01-28&amp;quot;&lt;br&gt; - &lt;code&gt;&amp;quot;boolean&amp;quot;&lt;/code&gt;: true or false, represented by the digit &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; respectively (native JSON booleans are also supported if sending via JSON)&lt;br&gt; - &lt;code&gt;&amp;quot;custom&amp;quot;&lt;/code&gt;: Only possible for JSON forms that are passed as actual JSON (not an SMS that gets parsed into JSON). Effectively any non-specific data structure, which will be taken without validation.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields.${field}.labels&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields.${field}.labels.short&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string, object with &lt;code&gt;translation_key&lt;/code&gt; field, or translation object&lt;/td&gt;
&lt;td&gt;Label shown for field in the app, seen when report is viewed in Reports tab. If missing, label will default to a translation key of &lt;code&gt;report.${form_name}.${field_name}&lt;/code&gt; (eg &lt;code&gt;report.f.patient_id&lt;/code&gt;) which can be translated in the app languages.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields.${field}.labels.tiny&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;Unique identifier within the form for this field. Used in form submission to bind values to fields. Not required for all submission formats.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields.${field}.position&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Zero based order of this field for incoming reports.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields.${field}.flags&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;Additional instructions that could be used by form renderers. For instance &lt;code&gt;{ &amp;quot;input_digits_only&amp;quot;: true }&lt;/code&gt; indicated to SIM applications to show the number keyboard. Obsolete.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields.${field}.length&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;array with two integers&lt;/td&gt;
&lt;td&gt;Inclusive range accepted for length of the field.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields.${field}.required&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;Determines if a report without this field is considered valid.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;public_form&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;Determines if reports will be accepted from phone numbers not associated to a contact. Set to false if you want to reject reports from unknown senders. Default: true.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;facility_reference&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;The form field whose value is to be used to match the incoming report to a contact&amp;rsquo;s &lt;code&gt;rc_code&lt;/code&gt;. Useful when reports are sent on behalf of a facility by unknown or various phone numbers. Requires the &lt;a href=&#34;transitions.md#available-transitions&#34;&gt;&lt;code&gt;update_clinics&lt;/code&gt; transition&lt;/a&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Localization</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/localization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/localization/</guid>
      <description>
        
        
        &lt;p&gt;Given that CHT apps are used around the world, the Core Framework was designed with localization in mind. The Core Framework itself is available in English, French, Hindi, Nepali, Spanish, Swahili, and Indonesian. In the &lt;code&gt;app_settings.json&lt;/code&gt; file the default language for the application is set, along with a separate default language for outgoing messages that are sent via SMS.&lt;/p&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;
Please open &lt;a href=&#34;https://github.com/medic/cht-core/issues/new&#34;&gt;an issue&lt;/a&gt; if you are interested in translating the app into a different language, as we can work together to make that language available to the community.
&lt;/div&gt;

&lt;h2 id=&#34;translations&#34;&gt;Translations&lt;/h2&gt;
&lt;p&gt;To modify some labels in the app add the key and modified label in a custom translations file in the &lt;code&gt;translations&lt;/code&gt; folder. All the properties files use the format &lt;code&gt;messages-{language-code}.properties&lt;/code&gt;, where the language code is the same 2-letter code used to identify the language in the application. For instance, for English, we would have a &lt;code&gt;translations/messages-en.properties&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;New elements in CHT apps, such as tasks, targets, profiles, and forms should be localized as well. These labels should be included in the same custom translations properties file. If a translation is missing for the user&amp;rsquo;s language it will use that of the default language.&lt;/p&gt;
&lt;p&gt;Here is an example, including both a modified label, and a new one:&lt;/p&gt;
&lt;h3 id=&#34;translationsmessages-language-codeproperties&#34;&gt;&lt;code&gt;translations/messages-{language-code}.properties&lt;/code&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;    [Application Text]
    contact.type.district_hospital = Community
    targets.assessments.title = Assessments Completed
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;forms&#34;&gt;Forms&lt;/h2&gt;
&lt;p&gt;Translations for XForms are defined within the forms themselves. The XLSForm notation is &lt;a href=&#34;http://xlsform.org/en/#multiple-language-support&#34;&gt;documented here&lt;/a&gt;, and would use the corresponding 2-character language codes.&lt;/p&gt;
&lt;h2 id=&#34;build&#34;&gt;Build&lt;/h2&gt;
&lt;p&gt;Custom translations from the properties files are added to the app with the &lt;code&gt;upload-custom-translations&lt;/code&gt; action.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;medic-conf --local upload-custom-translations&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Updated translations from forms need to be added with the actions to upload forms.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;medic-conf --local upload-contact-forms upload-app-forms&lt;/code&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Outbound push [beta]</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/outbound/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/outbound/</guid>
      <description>
        
        
        &lt;p&gt;&lt;em&gt;Outbound is only available in Medic 3.5.0 and above&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Outbound push allows configurers to have the creation or editing of CouchDB documents trigger outbound REST requests using the data in that document. For example, upon receiving a referral report you could send that referral to an external facility system that will manage and process that event.&lt;/p&gt;
&lt;p&gt;These triggers can apply to all document types (not just common types such as reports or contacts) and as such care should be taken to only send the documents you intend (see configuration of &lt;code&gt;relevant_to&lt;/code&gt; below).&lt;/p&gt;
&lt;p&gt;This feature is experimental, and may be replaced by some third party technology over time as we discover the feature-set we&amp;rsquo;re looking for.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;For outbound pushes to occur, you must &lt;a href=&#34;./transitions.md#Configurations&#34;&gt;enable the &lt;code&gt;mark_for_outbound&lt;/code&gt; transition in config&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;transitions&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;mark_for_outbound&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The rest of the configuration is against the &lt;code&gt;outbound&lt;/code&gt; configuration property, which allows you to configure as many outbound pushes as you like, keyed off a unique name:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;outbound&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;first config&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;relevant_to&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;destination&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{},&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;mapping&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{}&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;second config&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Each outbound push configuration contains the following properties: &lt;code&gt;relevant_to&lt;/code&gt;, &lt;code&gt;destination&lt;/code&gt; and &lt;code&gt;mapping&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;relevant_to&#34;&gt;relevant_to&lt;/h3&gt;
&lt;p&gt;An &amp;ldquo;expression&amp;rdquo; (some JS code that resolves to a truthy or falsy value) that determines whether this configuration is relevant to a document. The document is passed to the expression as &lt;code&gt;doc&lt;/code&gt;, and if relevant is fully hydrated before being passed (i.e. the attached contact, its parents etc are fully attached instead of just being stubs).&lt;/p&gt;
&lt;p&gt;Example: you want to send a referral to a facility&amp;rsquo;s EMR system when a CHW refers a patient:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;relevant_to&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;doc.type === &amp;#39;data_record&amp;#39; &amp;amp;&amp;amp; doc.form === &amp;#39;referral&amp;#39;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; all documents that Sentinel processes can be picked up by your configuration, so it&amp;rsquo;s important to correctly configure &lt;code&gt;relevant_to&lt;/code&gt;. Checking the document type as shown above is probably a good start.&lt;/p&gt;
&lt;h3 id=&#34;destination&#34;&gt;destination&lt;/h3&gt;
&lt;p&gt;A complex property that defines the details of the connection to the external service. It currently supports several authentication types: basic authentication, HTTP authorization request header, and a custom authentication mode for Muso SIH.&lt;/p&gt;
&lt;p&gt;Basic auth example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;destination&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;base_url&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;https://example.com&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;auth&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;basic&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;username&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;admin&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;password_key&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;example.com&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/api/v1/referral&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here &lt;code&gt;password_key&lt;/code&gt; is a key used to find the password in CouchDB&amp;rsquo;s node-based configuration. See Credentials section below.&lt;/p&gt;
&lt;p&gt;If you don&amp;rsquo;t provide an authentication parameter then the request will be sent without authentication.&lt;/p&gt;
&lt;p&gt;As of 3.9, the &lt;code&gt;header&lt;/code&gt; type is also supported, which sends authentication credentials via a HTTP request header: &lt;code&gt;Authorization: &#39;&amp;lt;value&amp;gt;&#39;&lt;/code&gt;. The value is set in the CouchDB configuration, and referred to by the &lt;code&gt;value_key&lt;/code&gt;, similarly to the &lt;code&gt;password_key&lt;/code&gt;. The value must match the credentials needed for the third party tool, and is generally formatted as &lt;code&gt;&amp;lt;type&amp;gt; &amp;lt;credentials&amp;gt;&lt;/code&gt;. For instance, to send data to RapidPro, the value in the configuration would be set to the complete RapidPro API Token: eg &lt;code&gt;Token 123456789abcdef&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Header auth example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;destination&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;base_url&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;https://example.com&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;auth&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;header&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Authorization&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;value_key&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;example.com&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/api/v1/referral&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;mapping&#34;&gt;mapping&lt;/h3&gt;
&lt;p&gt;A complex property that declares how the payload to be sent to the &lt;code&gt;destination&lt;/code&gt; should be created.&lt;/p&gt;
&lt;p&gt;Each key is a string &lt;a href=&#34;https://github.com/mariocasciaro/object-path#usage&#34;&gt;object path&lt;/a&gt; to a location in the payload, and each value is either:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a string object path to the location of the source data in the report being processed, where the value is required to exist&lt;/li&gt;
&lt;li&gt;an object with either a &lt;code&gt;path&lt;/code&gt; property that represents a string object path as above, or an &lt;code&gt;expr&lt;/code&gt; property which is an expression similar to &lt;code&gt;relevant_to&lt;/code&gt; to determine the resulting value. If you wish for the value to be optional (that is to say it&amp;rsquo;s OK if &lt;code&gt;path&lt;/code&gt; or &lt;code&gt;expr&lt;/code&gt; evaluate to &lt;code&gt;undefined&lt;/code&gt;) you may also set &lt;code&gt;optional&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;a-mapping-example&#34;&gt;A mapping example&lt;/h4&gt;
&lt;p&gt;Given the following example (incomplete) report:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;abc-1234&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;data_record&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;form&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;referral&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;reported_date&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1555069530966&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;fields&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;patient_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;12345&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;patient_temp_deg_F&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;danger_signs&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;V&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;BL&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;D&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;IG&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;contact&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;def-5678&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Jane CHW&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;parent&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;hij-9012&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The following mapping configuration:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;mapping&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;patient_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;doc.fields.patient_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;chw_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;doc.contact._id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;event.temp_c&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;expr&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;((doc.fields.patient_temp_deg_F - 32) * (5.0/9.0)).toFixed(2)&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;event.in_danger&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;expr&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;doc.fields.danger_signs.length &amp;gt;= 3 ? true : undefined&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;event.additional_notes&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;doc.fields.notes&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Would create the following JSON payload to send:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;patient_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;12345&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;chw_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;def-5678&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;event&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;temp_c&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;37.78&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;in_danger&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This example makes a few points:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The report that is being used to generate the outbound push is referenced as &lt;code&gt;doc&lt;/code&gt; in both &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;expr&lt;/code&gt; properties&lt;/li&gt;
&lt;li&gt;To define a property that is itself an object, you can make the mapping key a JSON path.&lt;/li&gt;
&lt;li&gt;If you define a property as &lt;code&gt;optional&lt;/code&gt;, it won&amp;rsquo;t exist at all in the payload if the resulting value is &lt;code&gt;undefined&lt;/code&gt;, either because that is the result of executing the &lt;code&gt;expr&lt;/code&gt;, or the &lt;code&gt;path&lt;/code&gt; doesn&amp;rsquo;t exist. Note that if the &lt;code&gt;event.in_danger&lt;/code&gt; expression was instead &lt;code&gt;doc.fields.danger_signs.length &amp;gt;= 3&lt;/code&gt; the property &lt;code&gt;in_danger&lt;/code&gt; would always exist and would either be &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;other-notes&#34;&gt;Other Notes&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Your report will be hydrated before being passed to the mapper. This gives you access to the contact and its parents&lt;/li&gt;
&lt;li&gt;object paths that may have undefined properties need to be dealt with differently depending on if you are using a &lt;code&gt;path&lt;/code&gt; or an &lt;code&gt;expr&lt;/code&gt;. Given &lt;code&gt;doc.foo.bar.smang&lt;/code&gt; as a path where any of those properties may not exist in the doc:&lt;/li&gt;
&lt;li&gt;If you&amp;rsquo;re using &lt;code&gt;path&lt;/code&gt; just use the path as is, if any part of the path is &lt;code&gt;undefined&lt;/code&gt; the resulting value will safely be &lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;However, in &lt;code&gt;expr&lt;/code&gt; you &lt;strong&gt;do&lt;/strong&gt; need to handle this situation: &lt;code&gt;doc.foo &amp;amp;&amp;amp; doc.foo.bar &amp;amp;&amp;amp; doc.foo.bar.smang&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;If any of your &lt;code&gt;expr&lt;/code&gt; expressions throw an exception (for example because you didn&amp;rsquo;t handle potentially &lt;code&gt;undefined&lt;/code&gt; properties as noted above) your push will fail&lt;/li&gt;
&lt;li&gt;If any of your &lt;code&gt;path&lt;/code&gt; declarations result in an &lt;code&gt;undefined&lt;/code&gt; value and you have not also declared that property optional your push will fail&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;credentials&#34;&gt;Credentials&lt;/h2&gt;
&lt;p&gt;To securely store credentials, we&amp;rsquo;ll be using CouchDB&amp;rsquo;s &lt;a href=&#34;https://docs.couchdb.org/en/stable/api/server/configuration.html&#34;&gt;config storage&lt;/a&gt;, as this is a convenient location that only CouchDB administrators can access.&lt;/p&gt;
&lt;p&gt;Passwords are stored under the &lt;code&gt;medic-credentials&lt;/code&gt; section, under the key declared in config.&lt;/p&gt;
&lt;p&gt;In the following example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;destination&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;base_url&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;https://example.com&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;auth&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;basic&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;username&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;admin&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;password_key&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;example.com&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/api/v1/referral&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We have our key configured to &lt;code&gt;example.com&lt;/code&gt;. This means that in CouchDB&amp;rsquo;s admin config we would expect to find a password at &lt;code&gt;medic-credentials/example.com&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To add the credential to the admin config you need to either &lt;a href=&#34;https://docs.couchdb.org/en/stable/api/server/configuration.html#put--_node-node-name-_config-section-key&#34;&gt;PUT the value using curl&lt;/a&gt; or similar:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;curl -X PUT https://&amp;lt;user&amp;gt;:&amp;lt;pass&amp;gt;@&amp;lt;domain&amp;gt;/_node/couchdb@127.0.0.1/_config/medic-credentials/example.com -d &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;&amp;#34;the-real-password&amp;#34;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;(Note that &lt;code&gt;couchdb@127.0.0.1&lt;/code&gt; is the local node name, and may be different for you depending on your setup.)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;You can also add it via Fauxton:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Navigate to &lt;a href=&#34;http://localhost:5984/_utils/#/_config&#34;&gt;the Config screen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Add Option&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;Section&lt;/code&gt; should be &lt;code&gt;medic-credentials&lt;/code&gt;, the &lt;code&gt;Name&lt;/code&gt; should be (in this example) &lt;code&gt;example.com&lt;/code&gt; and the value should be the password&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Create&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;You should then be able to see your credential in the list of configuration shown\&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;flow&#34;&gt;Flow&lt;/h2&gt;
&lt;p&gt;Outbound pushes happen in two stages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sentinel picks up the report and runs transitions over it. Any outbound configuration that is relevant (via executing the &lt;code&gt;relevant_to&lt;/code&gt; expression) will be added to a task queue&lt;/li&gt;
&lt;li&gt;Every 5 minutes sentinel will check its task queue. For each outbound push that is queued, sentinel will perform the mapping and attempt to send the resulting payload (via POST) to the configured web address
&lt;ul&gt;
&lt;li&gt;If the push succeeds it will be taken out of the task queue&lt;/li&gt;
&lt;li&gt;If the push fails (i.e. the response is not 2xx) it remains in the task queue, to be tried again in 5 minutes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;inbound&#34;&gt;Inbound?&lt;/h2&gt;
&lt;p&gt;The outbound feature is used for sending data to an external service. If you are looking to &lt;strong&gt;receive&lt;/strong&gt; data from an external service, take a look at &lt;a href=&#34;https://github.com/medic/medic/tree/master/api#post-apiv2records&#34;&gt;the records api&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Replications</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/replication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/replication/</guid>
      <description>
        
        
        &lt;p&gt;Replications are defined under the &lt;code&gt;replications&lt;/code&gt; key as an array of replication objects.&lt;/p&gt;
&lt;h2 id=&#34;app_settingsjson-replications&#34;&gt;&lt;code&gt;app_settings.json .replications&lt;/code&gt;&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;property&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;th&gt;required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fromSuffix&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The suffix of the source table(s). Regular expression may be used.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;toSuffix&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The suffix of the target table.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;text_expression&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Any valid text expression. For more information, see &lt;a href=&#34;https://bunkat.github.io/later/parsers.html#text&#34;&gt;LaterJS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;no if &lt;code&gt;cron&lt;/code&gt; provided&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cron&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Any valid Cron expression. For more information, see &lt;a href=&#34;https://bunkat.github.io/later/parsers.html#cron&#34;&gt;LaterJS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;no if &lt;code&gt;text_expression&lt;/code&gt; provided&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;code-sample&#34;&gt;Code sample&lt;/h2&gt;
&lt;p&gt;The definition takes the typical form below:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;replications&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;fromSuffix&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;user-[^\\-]+-meta&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;toSuffix&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;users-meta&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;text_expression&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;cron&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;0 2 * * *&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Apps: SMS message states</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/sms-states/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/sms-states/</guid>
      <description>
        
        
        &lt;h2 id=&#34;interaction-with-sms-providers&#34;&gt;Interaction with SMS providers&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/medic/medic&#34;&gt;Medic&lt;/a&gt; can use &lt;a href=&#34;https://github.com/medic/medic-gateway&#34;&gt;medic-gateway&lt;/a&gt; and third party aggregators to send and receive SMS messages.&lt;/p&gt;
&lt;p&gt;When an SMS report comes in from a user, &lt;a href=&#34;https://github.com/medic/medic-sentinel&#34;&gt;medic-sentinel&lt;/a&gt; adds the appropriate list of scheduled messages (to be sent at a future date) to the report doc.&lt;/p&gt;
&lt;p&gt;Periodically, sentinel checks for messages that need to be sent, and &lt;a href=&#34;https://github.com/medic/medic-sentinel/blob/master/schedule/due_tasks.js&#34;&gt;sets their state to &lt;code&gt;pending&lt;/code&gt;&lt;/a&gt; if their scheduled sending time has been reached or passed.&lt;/p&gt;
&lt;p&gt;Periodically, the aggregator checks for messages that need to be sent (i.e. that are in &lt;code&gt;pending&lt;/code&gt; state).&lt;/p&gt;
&lt;p&gt;The aggregator also reports on the status of the messages it&amp;rsquo;s sending.&lt;/p&gt;
&lt;h2 id=&#34;message-statusesstates&#34;&gt;Message statuses/states&lt;/h2&gt;
&lt;p&gt;Both webapp and the aggregator store states/statuses of the messages to keep track of the exchange. They each have their set of statuses, which sometimes are called the same but do not mean the same thing. Watch out.&lt;/p&gt;
&lt;h3 id=&#34;message-statuses-in-medic-gateway&#34;&gt;Message statuses in medic-gateway&lt;/h3&gt;
&lt;p&gt;See &lt;a href=&#34;https://github.com/medic/medic-gateway#content&#34;&gt;https://github.com/medic/medic-gateway#content&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;message-states-in-medic&#34;&gt;Message states in medic&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;State&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;scheduled&lt;/td&gt;
&lt;td&gt;Not yet due. Messages as part of a configured schedule start in this state and are changed to &lt;code&gt;pending&lt;/code&gt; when due.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pending&lt;/td&gt;
&lt;td&gt;Due to be sent. The SMS gateway should pick this up for sending. Auto replies and instant messages start in this state.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;forwarded-to-gateway&lt;/td&gt;
&lt;td&gt;Message has been sent to gateway.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;received-by-gateway&lt;/td&gt;
&lt;td&gt;Has been received by the gateway.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;forwarded-by-gateway&lt;/td&gt;
&lt;td&gt;Gateway has tried sending the message.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sent&lt;/td&gt;
&lt;td&gt;Successfully delivered to the sms network.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;delivered&lt;/td&gt;
&lt;td&gt;Successfully received by the recipient&amp;rsquo;s device.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;failed&lt;/td&gt;
&lt;td&gt;The sending attempt failed. Sending will not be retried without user intervention.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;denied&lt;/td&gt;
&lt;td&gt;This will not be sent. The recipient phone number is configured to be denied via &lt;code&gt;outgoing_deny_list&lt;/code&gt;, &lt;code&gt;outgoing_deny_with_alphas&lt;/code&gt;, or &lt;code&gt;outgoing_deny_shorter_than&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cleared&lt;/td&gt;
&lt;td&gt;This will not be sent as a report has triggered an event to stop it. This can happen if a patient visit has occurred before the visit reminder is sent.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;muted&lt;/td&gt;
&lt;td&gt;This will not be sent as the task has been deliberately stopped. Messages in this state can be unmuted by user action.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;timeline-of-the-medic-gateway-protocol-for-webapp-originating-message&#34;&gt;Timeline of the medic-gateway protocol for webapp-originating message&lt;/h2&gt;
&lt;p&gt;Read the table below like a vertical timeline : each time an event happens, the states/statuses corresponding to the message get updated.&lt;/p&gt;
&lt;p&gt;Note 1 : Gateway only sends a status update for a message only if the &amp;ldquo;needs forwarding&amp;rdquo; flag for the message status is true, and then sets it back to false. So it only sends status updates once.&lt;/p&gt;
&lt;p&gt;Note 2 : If api sends the same WO message again, then gateway sets its needs forwarding flag to true, and so sends the status at the next poll.&lt;/p&gt;
&lt;p&gt;Note 3 : not all of the events below happen every time : this is assuming only one step of SMS-sending happens between each poll. If several steps happened, then some of the events below are skipped. If several status changes have happened between polls, Gateway will report the multiple new statuses at the next poll.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;number&lt;/th&gt;
&lt;th&gt;Event&lt;/th&gt;
&lt;th&gt;webapp state&lt;/th&gt;
&lt;th&gt;gateway status&lt;/th&gt;
&lt;th&gt;gateway &amp;ldquo;Needs forwarding&amp;rdquo; flag&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Due date to send the message passes&lt;/td&gt;
&lt;td&gt;pending&lt;/td&gt;
&lt;td&gt;&amp;mdash;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Gateway polls and gets a new WO message&lt;/td&gt;
&lt;td&gt;forwarded-to-gateway&lt;/td&gt;
&lt;td&gt;&amp;mdash;&lt;/td&gt;
&lt;td&gt;&amp;mdash;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;Gateway saves message in its DB&lt;/td&gt;
&lt;td&gt;forwarded-to-gateway&lt;/td&gt;
&lt;td&gt;UNSENT&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;Gateway reports UNSENT status for the message&lt;/td&gt;
&lt;td&gt;received-by-gateway&lt;/td&gt;
&lt;td&gt;UNSENT&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;Gateway sends the message&lt;/td&gt;
&lt;td&gt;received-by-gateway&lt;/td&gt;
&lt;td&gt;PENDING&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;Gateway reports PENDING status for the message&lt;/td&gt;
&lt;td&gt;forwarded-by-gateway&lt;/td&gt;
&lt;td&gt;PENDING&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;Gateway gets confirmation the message left&lt;/td&gt;
&lt;td&gt;forwarded-by-gateway&lt;/td&gt;
&lt;td&gt;SENT&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;Gateway reports SENT status for the message&lt;/td&gt;
&lt;td&gt;sent&lt;/td&gt;
&lt;td&gt;SENT&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;Gateway gets confirmation the message arrived&lt;/td&gt;
&lt;td&gt;sent&lt;/td&gt;
&lt;td&gt;DELIVERED&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;Gateway reports DELIVERED status for the message&lt;/td&gt;
&lt;td&gt;delivered&lt;/td&gt;
&lt;td&gt;DELIVERED&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: SMS Workflows</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/workflows-sms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/workflows-sms/</guid>
      <description>
        
        
        &lt;p&gt;The Medic platform can be set up to send automated messages at specificied times in the future. To set this up a form must be defined in &lt;code&gt;app_settings.json&lt;/code&gt; as a registration form, then trigger a particular set of scheduled messages. Forms can also be configured to clear the schedule, or silence it for a period of time.&lt;/p&gt;
&lt;h2 id=&#34;scheduled-messages&#34;&gt;Scheduled messages&lt;/h2&gt;
&lt;p&gt;Scheduled messages are defined under the &lt;code&gt;schedules&lt;/code&gt; key as an array of schedule objects. The definition takes the typical form below:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;  &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;schedules&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;ANC Visit Reminders&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;summary&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;start_from&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;lmp_date&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;start_mid_group&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;messages&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;translation_key&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;messages.schedule.registration.followup_anc_pnc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;group&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;offset&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;4 weeks&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;send_day&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;monday&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;send_time&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;09:00&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;recipient&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;reporting_unit&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;app_settingsjson-schedules&#34;&gt;&lt;code&gt;app_settings.json .schedules[]&lt;/code&gt;&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;property&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;th&gt;required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A unique string label that is used to identify the schedule. Spaces are allowed.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;summary&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Short description of the of the schedule.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;description&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A narrative for the schedule.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;start_from&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The base date from which the &lt;code&gt;messages[].offset&lt;/code&gt; is added to determine when to send individual messages. You could specify any property on the report that contains a date value. The default is &lt;code&gt;reported_date&lt;/code&gt;, which is when the report was submitted.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;start_mid_group&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Whether or not a schedule can start mid-group. If not present, the schedule will not start mid-group. In other terms, the default value is &lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Array of objects, each containing a message to send out and its properties.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages[].translation_key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The translation key of the message to send out. Available in 2.15+.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages[].messages&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Array of message objects, each with &lt;code&gt;content&lt;/code&gt; and &lt;code&gt;locale&lt;/code&gt; properties. From 2.15 on use &lt;code&gt;translation_key&lt;/code&gt; instead.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages[].group&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Integer identifier to group messages that belong together so that they can be cleared together as a group by future reports. For instance a series of messages announcing a visit, and following up for a missed visit could be grouped together and cleared by a single visit report.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages[].offset&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Time interval from the &lt;code&gt;start_from&lt;/code&gt; date for when the message should be sent. It is structured as a string with an integer value followed by a space and the time unit. For instance &lt;code&gt;8 weeks&lt;/code&gt; or &lt;code&gt;2 days&lt;/code&gt;. The units available are &lt;code&gt;seconds&lt;/code&gt;, &lt;code&gt;minutes&lt;/code&gt;, &lt;code&gt;hours&lt;/code&gt;, &lt;code&gt;days&lt;/code&gt;, &lt;code&gt;weeks&lt;/code&gt;, &lt;code&gt;months&lt;/code&gt;, &lt;code&gt;years&lt;/code&gt;, and their singular forms as well. Note that although you can specify &lt;code&gt;seconds&lt;/code&gt;, the accuracy of the sending time will be determined by delays in the processing the message on the server and on the gateway.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages[].send_day&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;String value of the day of the week on which the message should be sent. For instance, to send a message at the beginning of the week setting it to &lt;code&gt;&amp;quot;Monday&amp;quot;&lt;/code&gt; will make sure the message goes out on the closest Monday &lt;em&gt;after&lt;/em&gt; the &lt;code&gt;start_date&lt;/code&gt; + &lt;code&gt;offset&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages[].send_time&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Time of day that the message should be sent in 24 hour format.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages[].recipient&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Recipient of the message. It can be set to &lt;code&gt;reporting_unit&lt;/code&gt; (sender of the form), &lt;code&gt;clinic&lt;/code&gt; (clinic that the sender of the form is attached to), &lt;code&gt;parent&lt;/code&gt; (parent of the sender of the form), or a specific phone number.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;registrations&#34;&gt;Registrations&lt;/h2&gt;
&lt;p&gt;Under the &lt;code&gt;registrations&lt;/code&gt; key in app_settings, we can setup triggers for scheduled messages. A trigger for the schedule above can be defined as shown below:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;
&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;registrations&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;form&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;PR&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;events&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;on_create&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;trigger&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;assign_schedule&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;params&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;ANC Visit Reminders&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;bool_expr&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;doc.fields.last_menstrual_period&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;validations&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{},&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;messages&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[]&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;app_settingsjson-registrations&#34;&gt;&lt;code&gt;app_settings.json .registrations[]&lt;/code&gt;&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;property&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;th&gt;required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;form&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Form ID that should trigger the schedule.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;events&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An array of event object definitions of what should happen when this form is received.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;event[].name&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Name of the event that has happened. The only supported event is &lt;code&gt;on_create&lt;/code&gt; which happens when a form is received.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;event[].trigger&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;What should happen after the named event. &lt;code&gt;assign_schedule&lt;/code&gt; will assign the schedule named in &lt;code&gt;params&lt;/code&gt; to this report. Similarly &lt;code&gt;clear_schedule&lt;/code&gt; will permanently clear all messages for a patient that are part of schedules listed in the &lt;code&gt;params&lt;/code&gt; field. The full set of trigger configuration directives are described &lt;a href=&#34;https://github.com/medic/medic-docs/blob/master/configuration/transitions.md#triggers&#34;&gt;here&lt;/a&gt;.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;event[].params&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Any useful information for the event. In our case, it holds the name of the schedule to be triggered.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;event[].bool_expr&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A JavaScript expression that will be cast to boolean to qualify execution of the event. Leaving blank will default to always true. CouchDB document fields can be accessed using &lt;code&gt;doc.key.subkey&lt;/code&gt;. Regular expressions can be tested using &lt;code&gt;pattern.test(value)&lt;/code&gt; e.g. /^[0-9]+$/.test(doc.fields.last_menstrual_period). In our example above, we&amp;rsquo;re making sure the form has an LMP date.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;validations&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A set of validations to perform on incoming reports. More information about validation rules can be found &lt;a href=&#34;app-settings-validations.md&#34;&gt;here&lt;/a&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;validations.join_responses&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A boolean specifying whether validation messages should be combined into one message.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;validations.list[]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An array of validation rules a report should pass to be considered valid.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;validations.list[].property&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Report field for which this validation rule will be applied.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;validations.list[].rule&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Validation condition to be applied to the property field. More information about rules can be found &lt;a href=&#34;app-settings-validations.md#rules&#34;&gt;here&lt;/a&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;validations.list[].translation_key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Translation key for the message reply to be sent if a report fails this rule.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An array of automated responses to incoming reports.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages[].translation_key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Translation key for the message text associated with this event.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages[].event_type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An event that will trigger sending of this message. Typical values are: &lt;code&gt;report_accepted&lt;/code&gt; when the report has been successfully validated and &lt;code&gt;registration_not_found&lt;/code&gt; when the patient ID supplied in the report doesn&amp;rsquo;t match any patient ID issued by Medic.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages[].recipient&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Who the message should be sent to. Use &lt;code&gt;reporting_unit&lt;/code&gt; for the sender of the report, &lt;code&gt;clinic&lt;/code&gt; for clinic contact, and &lt;code&gt;parent&lt;/code&gt; for the parent contact.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;patient-reports&#34;&gt;Patient Reports&lt;/h2&gt;
&lt;p&gt;Under the &lt;code&gt;patient_reports&lt;/code&gt; key in app_settings, we can setup actions to take for other form submissions. A patient report can be defined as shown below:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;  &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;patient_reports&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;form&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;V&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Visit (SMS)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;format&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;V &amp;lt;patientid&amp;gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;silence_type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;ANC Reminders, ANC Reminders LMP, ANC Reminders LMP from App&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;silence_for&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;8 days&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;fields&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;field_name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;validations&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;join_responses&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;list&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;property&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;patient_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;rule&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;regex(&amp;#39;^[0-9]{5,13}$&amp;#39;)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;translation_key&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;messages.generic.validation.patient_id&amp;#34;&lt;/span&gt;
          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;messages&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;translation_key&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;messages.v.report_accepted&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;event_type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;report_accepted&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;recipient&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;reporting_unit&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;translation_key&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;messages.generic.registration_not_found&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;event_type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;registration_not_found&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;recipient&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;reporting_unit&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;app_settingsjson-patient_reports&#34;&gt;&lt;code&gt;app_settings.json .patient_reports[]&lt;/code&gt;&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;property&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;th&gt;required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;form&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Form ID of the patient form.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Descriptive name of the form. This is not currently used in the app, but can be a helpful annotation.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;format&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Guide of how the form can be used. This is not currently used in the app, but can be a helpful annotation.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;silence_type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A comma separated list of schedules to mute.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;silence_for&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Duration from when the report was submitted for which messages should be muted. It is structured as a string with an integer value followed by a space and the time unit. For instance &lt;code&gt;8 weeks&lt;/code&gt; or &lt;code&gt;2 days&lt;/code&gt;. The units available are &lt;code&gt;seconds&lt;/code&gt;, &lt;code&gt;minutes&lt;/code&gt;, &lt;code&gt;hours&lt;/code&gt;, &lt;code&gt;days&lt;/code&gt;, &lt;code&gt;weeks&lt;/code&gt;, &lt;code&gt;months&lt;/code&gt;, &lt;code&gt;years&lt;/code&gt;, and their singular forms as well. When a message is muted all messages belonging to the same group will be muted, even if it falls outside of this time period. See &lt;code&gt;messages[].group&lt;/code&gt; in &lt;em&gt;Schedules&lt;/em&gt; for related info.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Descriptive list of form fields. This is not currently used in the app, but can be a helpful annotation.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;validations&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A set of validations to perform on incoming reports. More information about validation rules can be found &lt;a href=&#34;app-settings-validations.md&#34;&gt;here&lt;/a&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;validations.join_responses&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A boolean specifying whether validation messages should be combined into one message.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;validations.list[]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An array of validation rules a report should pass to be considered valid.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;validations.list[].property&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Report field for which this validation rule will be applied.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;validations.list[].rule&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Validation condition to be applied to the property field. More information about rules can be found &lt;a href=&#34;app-settings-validations.md#rules&#34;&gt;here&lt;/a&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;validations.list[].translation_key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Translation key for the message reply to be sent if a report fails this rule.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An array of automated responses to incoming reports.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages[].translation_key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Translation key for the message text associated with this event&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages[].event_type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An event that will trigger sending of this message. Typical values are: &lt;code&gt;report_accepted&lt;/code&gt; when the report has been successfully validated, &lt;code&gt;registration_not_found&lt;/code&gt; when the patient ID supplied in the report doesn&amp;rsquo;t match any patient ID issued by Medic. &lt;code&gt;on_mute&lt;/code&gt; and &lt;code&gt;on_unmute&lt;/code&gt; are used in the context of muting as described &lt;a href=&#34;transitions.md#muting&#34;&gt;here&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages[].recipient&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Who the message should be sent to. Use &lt;code&gt;reporting_unit&lt;/code&gt; for the sender of the report, &lt;code&gt;clinic&lt;/code&gt; for clinic contact, and &lt;code&gt;parent&lt;/code&gt; for the parent contact.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;!-- TODO 
## Case Reports
### `app_settings.json .case_reports[]`
--&gt;
&lt;h2 id=&#34;variables-in-outgoing-sms&#34;&gt;Variables in outgoing SMS&lt;/h2&gt;
&lt;p&gt;Outgoing messages can use &lt;a href=&#34;https://mustache.github.io/mustache.5.html&#34;&gt;Mustache templating&lt;/a&gt; to insert variables and specify data formats.&lt;/p&gt;
&lt;p&gt;All the fields on the report doc are available as variables. Additionally, the &lt;code&gt;contact&lt;/code&gt; variable is the sender of the report.&lt;/p&gt;
&lt;h3 id=&#34;code-sample&#34;&gt;Code sample&lt;/h3&gt;
&lt;p&gt;The following translation label includes the &lt;code&gt;name&lt;/code&gt; field of &lt;code&gt;contact&lt;/code&gt;, along with the submitted &lt;code&gt;patient_name&lt;/code&gt; field, and the generated &lt;code&gt;patient_id&lt;/code&gt; field.&lt;/p&gt;
&lt;h4 id=&#34;translationsmessages-enproperties&#34;&gt;&lt;code&gt;translations/messages-en.properties&lt;/code&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;messages.registration.report_accepted = Thank you {{contact.name}} for registering {{patient_name}}. Their ID is {{patient_id}}.
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;date-format-filters&#34;&gt;Date Format Filters&lt;/h3&gt;
&lt;p&gt;The following filter functions are available for formating dates.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;filter&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;date&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Displays dates according to the &lt;code&gt;date_format&lt;/code&gt; specified in app_settings. See &lt;a href=&#34;https://momentjs.com/docs/#/parsing/string-format/&#34;&gt;doc for Moment.js format&lt;/a&gt; for details.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Displays dates according to the &lt;code&gt;reported_date_format&lt;/code&gt; specified in app_settings. See &lt;a href=&#34;https://momentjs.com/docs/#/parsing/string-format/&#34;&gt;doc for Moment.js format&lt;/a&gt; for details.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;bikram_sambat_date&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Displays dates in Bikram Sambat calendar (most commonly used calendar in Nepal). Currently display format is hardcoded to e.g. &amp;ldquo;१५ चैत २०७३&amp;rdquo;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Targets</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/targets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/targets/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;counts.png&#34; alt=&#34;Percentages&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;percentages.png&#34; alt=&#34;Percentages&#34;&gt;&lt;/p&gt;
&lt;p&gt;All targets are defined in the &lt;code&gt;targets.js&lt;/code&gt; file as an array of objects according to the Targets schema defined below. Each object corresponds to a target widget that shows in the app. The order of objects in the array defines the display order of widgets on the Targets tab. The properties of the object are used to define when the target should appear, what it should look like, and the values it will display.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See Also:&lt;/em&gt; &lt;a href=https://docs.communityhealthtoolkit.org/beta/apps/features/targets/#&gt;Targets Overview&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;targetsjs&#34;&gt;&lt;code&gt;targets.js&lt;/code&gt;&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;property&lt;/th&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;th&gt;required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;id&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An identifier for the target. Used for querying task completeness.&lt;/td&gt;
&lt;td&gt;yes, unique&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;icon&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The icon to show alongside the task. Should correspond with a value defined in &lt;code&gt;resources.json&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;translation_key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;translation key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Translation key for the title of this target.&lt;/td&gt;
&lt;td&gt;no, but recommended&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;subtitle_translation_key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;translation key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Translation key for the subtitle of this target. If none supplied the subtitle will be blank.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;percentage_count_translation_key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;translation key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Translation key for the percentage value detail shown at the bottom of the target, eg &amp;ldquo;(5 of 6 deliveries)&amp;quot;. The translation context has &lt;code&gt;pass&lt;/code&gt; and &lt;code&gt;total&lt;/code&gt; variables available. If none supplied this defaults to &lt;code&gt;targets.count.default&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;context&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A string containing a JavaScript expression. This widget will only be shown if the expression evaluates to true. Details of the current user is available through the variable &lt;code&gt;user&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&#39;count&#39;&lt;/code&gt; or &lt;code&gt;&#39;percent&#39;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The type of the widget.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;goal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;integer&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;For targets with &lt;code&gt;type: &#39;percent&#39;&lt;/code&gt;, an integer from 0 to 100. For &lt;code&gt;type: &#39;count&#39;&lt;/code&gt;, any positive number. If there is no goal, put -1.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;appliesTo&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&#39;contacts&#39;&lt;/code&gt; or &lt;code&gt;&#39;reports&#39;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Do you want to count reports or contacts? This attribute controls the behavior of other attributes herein.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;appliesToType&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;If &lt;code&gt;appliesTo: &#39;reports&#39;&lt;/code&gt;, an array of form codes. If &lt;code&gt;appliesTo: &#39;contacts&#39;&lt;/code&gt;, an array of contact types.&lt;/td&gt;
&lt;td&gt;Filters the contacts or reports for which &lt;code&gt;appliesIf&lt;/code&gt; will be evaluated. For example, &lt;code&gt;[&#39;person&#39;]&lt;/code&gt; or &lt;code&gt;[&#39;clinic&#39;, &#39;health_center&#39;]&lt;/code&gt;. For example, &lt;code&gt;[&#39;pregnancy&#39;]&lt;/code&gt; or &lt;code&gt;[&#39;P&#39;, &#39;pregnancy&#39;]&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;appliesIf&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;function(contact, report)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;If &lt;code&gt;appliesTo: &#39;contacts&#39;&lt;/code&gt;, this function is invoked once per contact and &lt;code&gt;report&lt;/code&gt; is undefined. If &lt;code&gt;appliesTo: &#39;reports&#39;&lt;/code&gt;, this function is invoked once per report. Return true to count this document. For &lt;code&gt;type: &#39;percent&#39;&lt;/code&gt;, this controls the denominator.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;passesIf&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;function(contact, report)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;For &lt;code&gt;type: &#39;percent&#39;&lt;/code&gt;, return true to increment the numerator.&lt;/td&gt;
&lt;td&gt;yes, if &lt;code&gt;type: &#39;percent&#39;&lt;/code&gt;. Forbidden when &lt;code&gt;groupBy&lt;/code&gt; is defined.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;date&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&#39;reported&#39;&lt;/code&gt; or &lt;code&gt;&#39;now&#39;&lt;/code&gt; or &lt;code&gt;function(contact, report)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;When &lt;code&gt;&#39;reported&#39;&lt;/code&gt;, the target will count documents with a &lt;code&gt;reported_date&lt;/code&gt; within the current month. When &lt;code&gt;&#39;now&#39;&lt;/code&gt;, target includes all documents. A function can be used to indicate when the document should be counted. Default is &lt;code&gt;&#39;reported&#39;&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;idType&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&#39;report&#39;&lt;/code&gt; or &lt;code&gt;&#39;contact&#39;&lt;/code&gt; or &lt;code&gt;function(contact, report)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The target&amp;rsquo;s values are incremented once per unique ID. To count individual contacts that have one or more reports that apply, use &lt;code&gt;&#39;contact&#39;&lt;/code&gt;. Use &lt;code&gt;&#39;report&#39;&lt;/code&gt; to count all reports, even if there are multiple that apply for a single contact. If you need more than a single count for each applying contact or report then a custom function can be used returning an array with unique IDs — one element for each count.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;groupBy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;function(contact, report)&lt;/code&gt; returning string&lt;/td&gt;
&lt;td&gt;Allows for target ids to be aggregated and scored in groups. Not required for most targets. Use with passesIfGroupCount.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;passesIfGroupCount&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;object&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The criteria to determine if the target ids within a group should be counted as passing&lt;/td&gt;
&lt;td&gt;yes when &lt;code&gt;groupBy&lt;/code&gt; is defined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;passesIfGroupCount.gte&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The group should be counted as passing if the number of target ids in the group is greater-than-or-equal-to this value&lt;/td&gt;
&lt;td&gt;yes when &lt;code&gt;groupBy&lt;/code&gt; is defined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dhis&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;object&lt;/code&gt; or &lt;code&gt;object[]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Settings relevant to the &lt;a href=&#34;https://docs.communityhealthtoolkit.org/beta/apps/guides/dhis2-aggregate/#configuration&#34;&gt;DHIS2 Integration&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dhis[n].dataElement&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The hash id of a data element configured in the DHIS2 data set you&amp;rsquo;re integrating with&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dhis[n].dataSet&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The hash id of the data set that contains the data element you&amp;rsquo;re integrating with. If this is left undefined, the data element will appear in all data sets.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;visible&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Whether the target is visible in the targets page. &lt;strong&gt;Default: true&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;code-samples&#34;&gt;Code Samples&lt;/h2&gt;
&lt;p&gt;This sample &lt;code&gt;targets.js&lt;/code&gt; generates three widgets, and uses functions written in the &lt;code&gt;targets-extras.js&lt;/code&gt; file.&lt;/p&gt;
&lt;h3 id=&#34;targetsjs-1&#34;&gt;&lt;code&gt;targets.js&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;isHealthyDelivery&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;countReportsSubmittedInWindow&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;require&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;./targets-extras&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color:#000&#34;&gt;module&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// BIRTHS THIS MONTH
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;births-this-month&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;count&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;icon&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;infant&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;goal&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;translation_key&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;targets.births.title&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;subtitle_translation_key&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;targets.this_month.subtitle&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;

    &lt;span style=&#34;color:#000&#34;&gt;appliesTo&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;reports&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesIf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;isHealthyDelivery&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;date&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;reported&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;

  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// % DELIVERIES ALL TIME WITH 1+ VISITS
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;delivery-with-min-1-visit&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;percent&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;icon&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;nurse&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;goal&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;translation_key&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;targets.delivery_1_visit.title&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;subtitle_translation_key&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;targets.all_time.subtitle&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;

    &lt;span style=&#34;color:#000&#34;&gt;appliesTo&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;reports&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;idType&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;report&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesIf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;isHealthyDelivery&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;passesIf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;visits&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;countReportsSubmittedInWindow&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reports&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;antenatalForms&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reported_date&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;MAX_DAYS_IN_PREGNANCY&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;MS_IN_DAY&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reported_date&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;visits&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;date&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;now&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;

  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;2-home-visits-per-family&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;icon&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;home-visit&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;percent&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;goal&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;translation_key&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;`target.2-home-visits-per-family`&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;user.role === &amp;#34;chw&amp;#34;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;date&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;reported&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;

    &lt;span style=&#34;color:#000&#34;&gt;appliesTo&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;contacts&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesToType&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;person&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;idType&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Determines the target ids which will be in the group.
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// eg. &amp;#34;family1~2000-02-15&amp;#34; and &amp;#34;family1~2000-02-16&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;householdVisitDates&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Set&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reports&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;map&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;report&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;toDateString&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;report&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reported_date&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)));&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;familyId&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;parent&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;_id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;Array&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;from&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;householdVisitDates&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;map&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;date&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;familyId&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;~&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;date&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;groupBy&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;parent&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;_id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;passesIfGroupCount&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;gte&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;targets-extrasjs&#34;&gt;&lt;code&gt;targets-extras.js&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;module&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;isHealthyDelivery&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;form&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;D&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;||&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;form&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;delivery&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fields&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pregnancy_outcome&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;healthy&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;

  &lt;span style=&#34;color:#000&#34;&gt;countReportsSubmittedInWindow&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reports&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;form&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;reportsFound&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;reports&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;forEach&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;form&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;indexOf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;form&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reported_date&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reported_date&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
          &lt;span style=&#34;color:#000&#34;&gt;reportsFound&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;++&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;});&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;reportsFound&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;build&#34;&gt;Build&lt;/h2&gt;
&lt;p&gt;To build your targets into your app, you must compile them into app-settings, then upload them to your instance.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;medic-conf --local compile-app-settings backup-app-settings upload-app-settings&lt;/code&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Tasks</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/tasks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/tasks/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;task-with-description.png&#34; alt=&#34;task&#34;&gt;&lt;/p&gt;
&lt;p&gt;Tasks are configured in the &lt;code&gt;tasks.js&lt;/code&gt; file. This file is a JavaScript module which defines an array of objects conforming to the Task schema detailed below. When defining tasks, all the data about contacts on the device (both people and places) along with all their reports are available. Tasks are available only for users of type &amp;ldquo;restricted to their place&amp;rdquo;. Tasks can pull in fields from reports and pass data as inputs to the form that opens when the task is selected, enabling richer user experiences.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See Also:&lt;/em&gt; &lt;a href=https://docs.communityhealthtoolkit.org/beta/apps/features/tasks/#&gt;Tasks Overview&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;tasksjs&#34;&gt;&lt;code&gt;tasks.js&lt;/code&gt;&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;property&lt;/th&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;th&gt;required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A unique identifier for the task. Used for querying task completeness.&lt;/td&gt;
&lt;td&gt;yes, unique&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;icon&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The icon to show alongside the task. Should correspond with a value defined in &lt;code&gt;resources.json&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;title&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;translation key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The title of the task (labeled above).&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;appliesTo&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&#39;contacts&#39;&lt;/code&gt; or &lt;code&gt;&#39;reports&#39;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Do you want to emit one task per report, or one task per contact? This attribute controls the behavior of other properties herein.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;appliesIf&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;function(contact, report)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;If &lt;code&gt;appliesTo: &#39;contacts&#39;&lt;/code&gt;, this function is invoked once per contact and &lt;code&gt;report&lt;/code&gt; is undefined. If &lt;code&gt;appliesTo: &#39;reports&#39;&lt;/code&gt;, this function is invoked once per report. Return true if the task should appear for the given documents.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;appliesToType&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string[]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Filters the contacts or reports for which &lt;code&gt;appliesIf&lt;/code&gt; will be evaluated. If &lt;code&gt;appliesTo: &#39;reports&#39;&lt;/code&gt;, this is an array of form codes. If &lt;code&gt;appliesTo: &#39;contacts&#39;&lt;/code&gt;, this is an array of contact types. For example, &lt;code&gt;[&#39;person&#39;]&lt;/code&gt; or &lt;code&gt;[&#39;clinic&#39;, &#39;health_center&#39;]&lt;/code&gt;. For example, &lt;code&gt;[&#39;pregnancy&#39;]&lt;/code&gt; or &lt;code&gt;[&#39;P&#39;, &#39;pregnancy&#39;]&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;contactLabel&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt; or &lt;code&gt;function(contact, report)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Controls the label describing the subject of the task. Defaults to the name of the contact (&lt;code&gt;contact.contact.name&lt;/code&gt;).&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;resolvedIf&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;function(contact, report, event, dueDate)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Return true to mark the task as &amp;ldquo;resolved&amp;rdquo;. A resolved task uses memory on the phone, but is not displayed.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;events&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;object[]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An event is used to specify the timing of the task.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;events[n].id&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A descriptive identifier. Used for querying task completeness.&lt;/td&gt;
&lt;td&gt;yes, unique&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;events[n].days&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;integer&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Number of days after the doc&amp;rsquo;s &lt;code&gt;reported_date&lt;/code&gt; that the event is due&lt;/td&gt;
&lt;td&gt;yes, if &lt;code&gt;dueDate&lt;/code&gt; is not set&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;events[n].dueDate&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;function(event, contact, report)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Returns a &lt;code&gt;Date&lt;/code&gt; object for the day when this event is due.&lt;/td&gt;
&lt;td&gt;yes, if &lt;code&gt;days&lt;/code&gt; is not set&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;events[n].start&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;integer&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Number of days to show the task before it is due.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;events[n].end&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;integer&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Number of days to show the task after it is due.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;actions&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;object[]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The actions (forms) that a user can access after clicking on a task. If you put multiple forms here, the user will see a task summary screen where they can select which action they would like to complete.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;actions[n].type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&#39;report&#39;&lt;/code&gt; or &lt;code&gt;&#39;contact&#39;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;When &lt;code&gt;&#39;report&#39;&lt;/code&gt;, the action opens the given form. When &lt;code&gt;&#39;contact&#39;&lt;/code&gt;, the action redirects to a contact&amp;rsquo;s profile page. Defaults to &amp;lsquo;report&amp;rsquo;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;actions[n].form&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The code of the form that should open when you select the action.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;actions[n].label&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;translation key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The label that should appear on the task summary screen if multiple actions are present.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;actions[n].modifyContent&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;function (content, contact, report)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Set the values on the content object to control the data which will be passed as &lt;code&gt;inputs&lt;/code&gt; to the form which opens when the action is selected.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;priority&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;object&lt;/code&gt; or &lt;code&gt;function(contact, report)&lt;/code&gt; returning object of same schema&lt;/td&gt;
&lt;td&gt;Controls the &amp;ldquo;high risk&amp;rdquo; line seen above.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;priority.level&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;high&lt;/code&gt; or &lt;code&gt;medium&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Tasks that are &lt;code&gt;high&lt;/code&gt; will display a high risk icon with the task. Default: &lt;code&gt;medium&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;priority.label&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;translation key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Text shown with the task associated to the risk level.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;code-samples&#34;&gt;Code samples&lt;/h2&gt;
&lt;h3 id=&#34;basic-task&#34;&gt;Basic task&lt;/h3&gt;
&lt;p&gt;This sample &lt;code&gt;tasks.js&lt;/code&gt; generates two postnatal-visit tasks for each delivery form. The tasks are due 7 and 14 days after the delivery report was submitted. Each task is displayed for 2 days before the due date and 2 days after the due date.&lt;/p&gt;
&lt;h4 id=&#34;tasksjs-1&#34;&gt;tasks.js&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;module&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;icon&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;mother-child&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;task.postnatal_followup&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesTo&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;reports&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesToType&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;delivery&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;actions&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;form&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;postnatal_visit&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;events&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;days&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;days&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;tasks-with-functions&#34;&gt;Tasks with functions&lt;/h3&gt;
&lt;p&gt;These samples show more complex tasks which use functions kepts in a separate &lt;code&gt;nools-extras.js&lt;/code&gt; file&lt;/p&gt;
&lt;h4 id=&#34;tasksjs-2&#34;&gt;&lt;code&gt;tasks.js&lt;/code&gt;&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;extras&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;require&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;./nools-extras&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;isFormFromArraySubmittedInWindow&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;extras&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#000&#34;&gt;module&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// PNC TASK 1: If a home delivery, needs clinic tasks
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;icon&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;mother-child&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;locale&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;en&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;Postnatal visit needed&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesTo&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;reports&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesToType&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;D&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;delivery&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesIf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;isCoveredByUseCase&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;pnc&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
          &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fields&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
             &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fields&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;delivery_code&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
             &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fields&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;delivery_code&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;toUpperCase&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;!==&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;actions&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[{&lt;/span&gt; 
      &lt;span style=&#34;color:#000&#34;&gt;form&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;postnatal_visit&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Pass content that will be used within the task form
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#000&#34;&gt;modifyContent&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;delivery_place&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;home&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}],&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;events&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;days&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;priority&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;level&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;high&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;locale&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;en&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;Home Birth&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;resolvedIf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;event&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;dueDate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Resolved if there a visit report received in time window or a newer pregnancy
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reported_date&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;extras&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;getNewestDeliveryTimestamp&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;||&lt;/span&gt;
             &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reported_date&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;extras&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;getNewestPregnancyTimestamp&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;||&lt;/span&gt;
             &lt;span style=&#34;color:#000&#34;&gt;isFormFromArraySubmittedInWindow&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reports&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;extras&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;postnatalForms&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
                 &lt;span style=&#34;color:#000&#34;&gt;Utils&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;addDate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dueDate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;event&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;getTime&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(),&lt;/span&gt;
                 &lt;span style=&#34;color:#000&#34;&gt;Utils&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;addDate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dueDate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;  &lt;span style=&#34;color:#000&#34;&gt;event&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;getTime&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;());&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;

  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Option 1a: Place-based task: Family survey when place is created, then every 6 months
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;icon&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;family&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;task.family_survey.title&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesTo&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;contacts&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesToType&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;clinic&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;actions&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;form&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;family_survey&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;events&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;family-survey&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;days&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;resolvedIf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;event&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;dueDate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Resolved if there a family survey received in time window
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;isFormFromArraySubmittedInWindow&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reports&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;family_survey&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
                 &lt;span style=&#34;color:#000&#34;&gt;Utils&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;addDate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dueDate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;event&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;getTime&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(),&lt;/span&gt;
                 &lt;span style=&#34;color:#000&#34;&gt;Utils&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;addDate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dueDate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;  &lt;span style=&#34;color:#000&#34;&gt;event&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;getTime&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;());&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;

  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Regular check for infants
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;icon&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;infant&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;task.infant.title&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesTo&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;contacts&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesToType&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;person&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;actions&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;form&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;infant_assessment&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;events&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; 
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;infant_asssessment-q1&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;days&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;infant_asssessment-q2&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;days&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;182&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;infant_asssessment-q3&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;days&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;273&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;infant_asssessment-q4&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;days&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;365&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;

  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Option 2: Place-based task: Family survey every 6 months
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;icon&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;family&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;task.family_survey.title&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesTo&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;contacts&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesToType&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;clinic&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesIf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;extras&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;needsFamilySurvey&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// function returns true if family doesn&amp;#39;t have survey in previous 6 months
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#000&#34;&gt;actions&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;form&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;family_survey&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;events&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;family-survey&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;dueDate&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;extras&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;getNextFamilySurveyDate&lt;/span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// function gets expected date of next family survey 
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;resolvedIf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;event&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;dueDate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Resolved if there a family survey received in time window
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;isFormFromArraySubmittedInWindow&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reports&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;family_survey&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
                 &lt;span style=&#34;color:#000&#34;&gt;Utils&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;addDate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dueDate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;event&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;getTime&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(),&lt;/span&gt;
                 &lt;span style=&#34;color:#000&#34;&gt;Utils&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;addDate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dueDate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;  &lt;span style=&#34;color:#000&#34;&gt;event&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;getTime&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;());&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;

&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;nools-extrasjs&#34;&gt;&lt;code&gt;nools-extras.js&lt;/code&gt;&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;module&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;isCoveredByUseCase&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;usecase&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// ...
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;getNewestDeliveryTimestamp&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// ...
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;getNewestPregnancyTimestamp&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// ...
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;isFormFromArraySubmittedInWindow&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reports&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;formsArray&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;startTime&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;endTime&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// ...
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;build&#34;&gt;Build&lt;/h2&gt;
&lt;p&gt;To build your tasks into your app, you must compile them into app-settings, then upload them to your instance.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;medic-conf --local compile-app-settings backup-app-settings upload-app-settings&lt;/code&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Sentinel Transitions</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/transitions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/transitions/</guid>
      <description>
        
        
        &lt;p&gt;When sentinel detects a document has changed it runs transitions against the doc. These transitions can be used to generate a short form patient id or assign a report to a facility.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;By default all transitions are disabled. They can be enabled by configuring the &lt;code&gt;transitions&lt;/code&gt; property to have a key with the transitions name and a &lt;code&gt;truthy&lt;/code&gt; value, eg:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;transitions&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;b&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;c&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;disable&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;d&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;disable&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In this example the &lt;code&gt;d&lt;/code&gt; transition will not be applied, but the other three will be.&lt;/p&gt;
&lt;h2 id=&#34;available-transitions&#34;&gt;Available transitions&lt;/h2&gt;
&lt;p&gt;The following transitions are available and executed in order.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Key&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;maintain_info_document&lt;/td&gt;
&lt;td&gt;Records metadata about the document such as when it was replicated. Enabled by default.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;update_clinics&lt;/td&gt;
&lt;td&gt;Adds a contact&amp;rsquo;s info to a new data record. This is used to attribute an incoming SMS message or report to the appropriate contact. The &lt;code&gt;rc_code&lt;/code&gt; value on the contact is used to match to the value of the form field set as the &lt;code&gt;facility_reference&lt;/code&gt; in the &lt;a href=&#34;https://github.com/medic/medic-docs/blob/master/configuration/forms.md#json-forms&#34;&gt;JSON form definition&lt;/a&gt;. This matching is useful when reports are sent on behalf of a facility by unknown or various phone numbers. If &lt;code&gt;facility_reference&lt;/code&gt; is not set for a form, the contact match is attempted using the sender&amp;rsquo;s phone number.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#registration&#34;&gt;registration&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;For registering a patient to a schedule. Performs some validation and creates the patient document if the patient does not already exist. Can create places (as of 3.8.x).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;accept_patient_reports&lt;/td&gt;
&lt;td&gt;Validates reports about a patient and silences relevant reminders.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#generate-shortcode-on-contacts&#34;&gt;generate_shortcode_on_contacts&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Automatically generates the &lt;code&gt;patient_id&lt;/code&gt; on all person documents and the &lt;code&gt;place_id&lt;/code&gt; on all place documents. Available since 3.8.x.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#generate-patient-id-on-people&#34;&gt;generate_patient_id_on_people&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Deprecated in 3.8.x&lt;/strong&gt; Automatically generates the &lt;code&gt;patient_id&lt;/code&gt; on all person documents. As of 3.8.x, also generates the &lt;code&gt;place_id&lt;/code&gt; on all place documents and is an alias for &lt;code&gt;generate_shortcode_on_contacts&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;default_responses&lt;/td&gt;
&lt;td&gt;Responds to the message with a confirmation or validation error.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;update_sent_by&lt;/td&gt;
&lt;td&gt;Sets the sent_by field of the report based on the sender&amp;rsquo;s phone number.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;update_sent_forms&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Deprecated in 3.7.x&lt;/strong&gt; Update sent_forms property on facilities so we can setup reminders for specific forms. &lt;em&gt;As of 3.7.x, reminders no longer require this transition&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#death_reporting&#34;&gt;death_reporting&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Updates the deceased status of patients.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;conditional_alerts&lt;/td&gt;
&lt;td&gt;Executes the configured condition and sends an alert if the condition is met.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#multi_report_alerts&#34;&gt;multi_report_alerts&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Similar to conditional_alerts, with more flexible configuration, including using different form types for the same alert.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#update_notifications&#34;&gt;update_notifications&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Deprecated in 3.2.x&lt;/strong&gt; Mutes or unmutes scheduled messages based on configuration.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;update_scheduled_reports&lt;/td&gt;
&lt;td&gt;If a report has a month/week/week_number, year and clinic then look for duplicates and update those instead.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;resolve_pending&lt;/td&gt;
&lt;td&gt;Sets the state of pending messages to sent. It is useful during builds where we don&amp;rsquo;t want any outgoing messages queued for sending.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#muting&#34;&gt;muting&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Implements muting/unmuting actions of people and places. Available since 3.2.x.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;./outbound.md&#34;&gt;mark_for_outbound&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Enables outbound pushes. Available since 3.5.x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#self_report&#34;&gt;self_report&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Maps patient to sender. Available since 3.9.x&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;transition-configuration-guide&#34;&gt;Transition Configuration Guide&lt;/h2&gt;
&lt;p&gt;Guides for how to setup specific transitions.&lt;/p&gt;
&lt;h3 id=&#34;multi_report_alerts&#34;&gt;multi_report_alerts&lt;/h3&gt;
&lt;p&gt;Send alert messages by SMS when specific conditions are received through reports. More flexible than simple Alerts.&lt;/p&gt;
&lt;p&gt;Example: send SMS to the district manager when 2 CHWs within the same district report cholera or diarrhea symptoms within the last week.&lt;/p&gt;
&lt;p&gt;Understanding the different types of reports used in the configuration:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;             previous suspected_cholera alert was sent
             |
             |           latest_report comes in, suspected_cholera alert is sent
             |           |
             v           v
---[---*-o---*--*--o-o---*]-------&amp;gt;    time
                1        0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;[]&lt;/code&gt; : time window&lt;/p&gt;
&lt;p&gt;&lt;code&gt;*&lt;/code&gt; and &lt;code&gt;o&lt;/code&gt; : &lt;code&gt;reports&lt;/code&gt; : any report that came in to the server.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;*&lt;/code&gt; : &lt;code&gt;counted_reports&lt;/code&gt; : reports that came in that passed the &lt;code&gt;is_report_counted&lt;/code&gt; filter function.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;0&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt; : &lt;code&gt;new_reports&lt;/code&gt; : &lt;code&gt;counted_reports&lt;/code&gt; that came in since the previous alert was sent. They haven&amp;rsquo;t been messaged about yet.&lt;/p&gt;
&lt;h4 id=&#34;configuration-1&#34;&gt;Configuration&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;multi_report_alerts&amp;quot; : [
  {
    &amp;quot;name&amp;quot;: &amp;quot;suspected_cholera&amp;quot;,
    &amp;quot;is_report_counted&amp;quot;: &amp;quot;function(report, latest_report) {  return latest_report.contact.parent.parent._id === report.contact.parent.parent._id; }&amp;quot;,
    &amp;quot;num_reports_threshold&amp;quot;: 2,
    &amp;quot;message&amp;quot;: &amp;quot;{{num_counted_reports}} patients with {{alert_name}} in {{time_window_in_days}} days reported at {{new_reports.0.contact.parent.name}}. New reports from: {{new_reports.0.contact.name}}, {{new_reports.1.contact.name}}, {{new_reports.2.contact.name}}.&amp;quot;,
    &amp;quot;recipients&amp;quot;: [
      &amp;quot;+123456&amp;quot;,
      &amp;quot;new_report.contact.phone&amp;quot;, // sender of each report in new_reports
      &amp;quot;new_report.contact.parent.parent.contact.phone&amp;quot;, // contact person for the parent place of the sender of each report in new_reports.
      // If it&#39;s the same for several reports, only one message will be sent (recipient phone numbers are deduplicated before generating messages).
    ],
    &amp;quot;time_window_in_days&amp;quot;: 7,
    &amp;quot;forms&amp;quot;: [&amp;quot;C&amp;quot;, &amp;quot;D&amp;quot;] // Only Cholera and Diarrhea forms.
  }
]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note that we are using Mustache templates for our message templates (anything with &lt;code&gt;{{}}&lt;/code&gt;), and they use a &lt;code&gt;.&lt;/code&gt; notation to access items in an array (e.g. &lt;code&gt;new_reports.1&lt;/code&gt;) rather than a &lt;code&gt;[]&lt;/code&gt; notation as in conventional javascript (&lt;code&gt;new_reports[1]&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;For performance reasons the &lt;code&gt;num_reports_threshold&lt;/code&gt; cannot exceed 100.&lt;/p&gt;
&lt;h3 id=&#34;death_reporting&#34;&gt;death_reporting&lt;/h3&gt;
&lt;p&gt;Updates patient documents with a &lt;code&gt;date_of_death&lt;/code&gt; field which updates how the patient is displayed in the UI.&lt;/p&gt;
&lt;h4 id=&#34;configuration-2&#34;&gt;Configuration&lt;/h4&gt;
&lt;p&gt;Configuration is stored in the &lt;code&gt;death_reporting&lt;/code&gt; field of the settings.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mark_deceased_forms&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An array of form codes which will cause patients to be recorded as deceased.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;undo_deceased_forms&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An array of form codes which will remove the deceased date from the patient. Optional.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;date_field&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The path to the field in the report document which has the date the patient died. Optional: if not configured it defaults to the reported_date of the report.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&#34;example&#34;&gt;Example&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;death_reporting&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;mark_deceased_forms&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;death&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;undo_deceased_forms&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;undo-death&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;date_field&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;fields.death_date&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;registration&#34;&gt;Registration&lt;/h3&gt;
&lt;p&gt;Configuration is held at &lt;code&gt;app_settings.registrations&lt;/code&gt;, as a list of objects connecting forms to validations, events and messages.&lt;/p&gt;
&lt;h4 id=&#34;events&#34;&gt;Events&lt;/h4&gt;
&lt;p&gt;Lists different events.&lt;/p&gt;
&lt;h5 id=&#34;on_create&#34;&gt;&lt;code&gt;on_create&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;This is the only supported event.&lt;/p&gt;
&lt;h4 id=&#34;triggers&#34;&gt;Triggers&lt;/h4&gt;
&lt;h5 id=&#34;add_patient&#34;&gt;&lt;code&gt;add_patient&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;Sets the &lt;code&gt;patient_id&lt;/code&gt; on the root of the registration document and creates the person doc if required. Can be configured to either use a provided ID or generate a new unique one.&lt;/p&gt;
&lt;h6 id=&#34;external-patient-id&#34;&gt;External Patient ID&lt;/h6&gt;
&lt;p&gt;If you are providing the patient id instead of having Sentinel generate you one, name the field in a &lt;code&gt;patient_id_field&lt;/code&gt; key in &lt;code&gt;&amp;quot;params&amp;quot;&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;on_create&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;trigger&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;add_patient&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;params&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;{\&amp;#34;patient_id_field\&amp;#34;: \&amp;#34;external_id\&amp;#34;}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;bool_expr&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In this example the provided id would be in &lt;code&gt;fields.external_id&lt;/code&gt; on the registration document.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NB:&lt;/strong&gt; this field must not be called &lt;code&gt;patient_id&lt;/code&gt;.
&lt;strong&gt;NB:&lt;/strong&gt; the JSON passed in &lt;code&gt;&amp;quot;params&amp;quot;&lt;/code&gt; should still be a string. Support for raw JSON as shown below exists, but is in beta and may not always work correctly in all situations, because kanso.json does not support it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;params&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;patient_id_field&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;external_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h6 id=&#34;alternative-name-location&#34;&gt;Alternative Name Location&lt;/h6&gt;
&lt;p&gt;To provide an alternative location for the patient name, either provide a &lt;code&gt;patient_name_field&lt;/code&gt; in &lt;code&gt;&amp;quot;params&amp;quot;&lt;/code&gt; or provide it directly into the &lt;code&gt;&amp;quot;params&amp;quot;&lt;/code&gt; field as a String:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;params&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;{\&amp;#34;patient_name_field\&amp;#34;: \&amp;#34;full_name\&amp;#34;}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;params&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;full_name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The first format is required if you wish to also provide other params:&lt;/p&gt;
&lt;h6 id=&#34;contact-type&#34;&gt;Contact Type&lt;/h6&gt;
&lt;p&gt;If you have changed from the default contact hierarchy you will need to specify which type of contact the registration should create.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;params&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;{ \&amp;#34;contact_type\&amp;#34;: \&amp;#34;patient\&amp;#34; }&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h6 id=&#34;specific-parent-as-of-380&#34;&gt;Specific Parent &lt;em&gt;as of 3.8.0&lt;/em&gt;&lt;/h6&gt;
&lt;p&gt;By default, the newly created person will have the same parent as the report submitter.
A different parent may be selected by providing a location for the parent id. This field should
contain the &lt;code&gt;place_id&lt;/code&gt; of the place in question.
If the selected parent is invalid - does not exist or does not respect the configured hierarchy&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the report is rejected as invalid and the person document is not created. As such
, &lt;code&gt;report_accepted&lt;/code&gt; event should check if the report has a &lt;code&gt;patient&lt;/code&gt; property (or similar).&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
     &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;params&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;{ \&amp;#34;parent_id\&amp;#34;: \&amp;#34;parent_id\&amp;#34; }&amp;#34;&lt;/span&gt;
 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h6 id=&#34;events-1&#34;&gt;Events&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;parent_field_not_provided&lt;/code&gt; - triggered when the report does not have the required parent_id field&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parent_invalid&lt;/code&gt; - triggered when selected parent is invalid (parent document is found and
either does not have a configured type or its type is not configured to be a parent to the
person type to be created)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parent_not_found&lt;/code&gt; - triggered when selected parent is not found&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The selected parent (if found) can be accessed by using the &lt;code&gt;parent&lt;/code&gt; path in error messages:
&lt;code&gt;Cannot create a person type &amp;quot;patient&amp;quot; under parent {{parent.place_id}}({{parent.contact_type}})&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&#34;add_patient_id&#34;&gt;&lt;code&gt;add_patient_id&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;&lt;strong&gt;Deprecated in favour of &lt;code&gt;add_patient&lt;/code&gt;.&lt;/strong&gt; Previously this only added a &lt;code&gt;patient_id&lt;/code&gt; to the root of the registration form. This functionality has been merged into &lt;code&gt;add_patient&lt;/code&gt;. Now, using this event will result in the same functionality as described in &lt;code&gt;add_patient&lt;/code&gt; above.&lt;/p&gt;
&lt;h5 id=&#34;add_expected_date&#34;&gt;&lt;code&gt;add_expected_date&lt;/code&gt;&lt;/h5&gt;
&lt;h5 id=&#34;add_birth_date&#34;&gt;&lt;code&gt;add_birth_date&lt;/code&gt;&lt;/h5&gt;
&lt;h5 id=&#34;assign_schedule&#34;&gt;&lt;code&gt;assign_schedule&lt;/code&gt;&lt;/h5&gt;
&lt;h5 id=&#34;clear_schedule&#34;&gt;&lt;code&gt;clear_schedule&lt;/code&gt;&lt;/h5&gt;
&lt;h5 id=&#34;add_place-as-of-380&#34;&gt;&lt;code&gt;add_place&lt;/code&gt; &lt;em&gt;as of 3.8.0&lt;/em&gt;&lt;/h5&gt;
&lt;p&gt;Sets the &lt;code&gt;place_id&lt;/code&gt; on the root of the registration document and creates the place doc with the
provided type.&lt;/p&gt;
&lt;p&gt;By default, the created place would have the same parent as the submitter. If such a combination is
invalid - for example a contact under a &amp;ldquo;clinic&amp;rdquo; attempts to create a new &amp;ldquo;health_center&amp;rdquo; - the
report will be rejected as errored and the place document will not be created. As such,
&lt;code&gt;report_accepted&lt;/code&gt; event should check if the report has a &lt;code&gt;place&lt;/code&gt; property (or similar).&lt;/p&gt;
&lt;p&gt;The created place does not have a primary contact.
The created place can be accessed by the &lt;code&gt;place&lt;/code&gt; path in messages:
&lt;code&gt;Place {{place.name}}({{place.place_id}}) added to {{place.parent.name}}({{place.parent.place_id}})&lt;/code&gt;&lt;/p&gt;
&lt;h6 id=&#34;contact-type-1&#34;&gt;Contact Type&lt;/h6&gt;
&lt;p&gt;Specifying the contact type is required, even if not using configurable hierarchies.
The selected contact type must be a configured place type.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;params&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;{ \&amp;#34;contact_type\&amp;#34;: \&amp;#34;clinic\&amp;#34; }&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h6 id=&#34;specific-parent&#34;&gt;Specific Parent&lt;/h6&gt;
&lt;p&gt;By default, the newly created place will have the same parent as the report submitter.
A different parent may be selected by providing a location for the parent id. This field should
contain the &lt;code&gt;place_id&lt;/code&gt; of the place in question.
If the selected parent is invalid - does not exist or is not an acceptable parent to the
selected type in the configured hierarchy - the report will be rejected as errored.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
     &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;params&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;{ \&amp;#34;parent_id\&amp;#34;: \&amp;#34;parent_id\&amp;#34; }&amp;#34;&lt;/span&gt;
 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h6 id=&#34;events-2&#34;&gt;Events&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;parent_field_not_provided&lt;/code&gt; - triggered when the report does not have the required parent_id field&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parent_invalid&lt;/code&gt; - triggered when selected parent is invalid (parent document is found and
either does not have a configured type or its type is not configured to be a parent to the
place type to be created)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parent_not_found&lt;/code&gt; - triggered when selected parent is not found&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The selected parent (if found) can be accessed by using the &lt;code&gt;parent&lt;/code&gt; path in error messages:
&lt;code&gt;&#39;Cannot create a place type &amp;quot;health_center&amp;quot; under parent {{parent.place_id}}({{parent.contact_type}})&#39;&lt;/code&gt;&lt;/p&gt;
&lt;h6 id=&#34;alternative-name-location-1&#34;&gt;Alternative Name Location&lt;/h6&gt;
&lt;p&gt;The created place&amp;rsquo;s name is provided in the &lt;code&gt;place_name&lt;/code&gt; field by default.
To provide an alternative location for the place name, provide a &lt;code&gt;place_name_field&lt;/code&gt; in
&lt;code&gt;&amp;quot;params&amp;quot;&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;params&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;{\&amp;#34;place_name_field\&amp;#34;: \&amp;#34;clinic_name\&amp;#34;}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;generate-shortcode-on-contacts&#34;&gt;Generate Shortcode on Contacts&lt;/h3&gt;
&lt;p&gt;No custom configuration for &lt;code&gt;generate_shortcode_on_contacts&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;generate-patient-id-on-people&#34;&gt;Generate Patient ID On People&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Deprecated since 3.8.x&lt;/strong&gt; in favor of &lt;code&gt;generate_shortcode_on_contacts&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;No custom configuration for &lt;code&gt;generate_patient_id_on_people&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;update_notifications&#34;&gt;update_notifications&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Deprecated in favor of &lt;a href=&#34;#muting&#34;&gt;Muting&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;configuration-3&#34;&gt;Configuration&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;notifications&amp;quot;: {
    &amp;quot;off_form&amp;quot;: &amp;quot;OFF&amp;quot;,
    &amp;quot;on_form&amp;quot;: &amp;quot;ON&amp;quot;,
    &amp;quot;validations&amp;quot;: {
      &amp;quot;join_responses&amp;quot;: true,
      &amp;quot;list&amp;quot;: []
    },
    &amp;quot;messages&amp;quot;: [
      {
        &amp;quot;translation_key&amp;quot;: &amp;quot;&amp;quot;,
        &amp;quot;event_type&amp;quot;: &amp;quot;on_mute&amp;quot;,
        &amp;quot;recipient&amp;quot;: &amp;quot;reporting_unit&amp;quot;
      },
      {
       &amp;quot;translation_key&amp;quot;: &amp;quot;&amp;quot;,
        &amp;quot;event_type&amp;quot;: &amp;quot;on_unmute&amp;quot;,
        &amp;quot;recipient&amp;quot;: &amp;quot;reporting_unit&amp;quot;
      },
      {
        &amp;quot;translation_key&amp;quot;: &amp;quot;&amp;quot;,
        &amp;quot;event_type&amp;quot;: &amp;quot;patient_not_found&amp;quot;,
        &amp;quot;recipient&amp;quot;: &amp;quot;reporting_unit&amp;quot;
      }
    ]
  }
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;muting&#34;&gt;Muting&lt;/h3&gt;
&lt;p&gt;Implements muting/unmuting of persons and places. Supports multiple forms for each action, for webapp and sms workflows.&lt;/p&gt;
&lt;p&gt;Muting action:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;updates target contact and all its descendants&lt;sup&gt;[1]&lt;/sup&gt;, setting the &lt;code&gt;muted&lt;/code&gt; property equal to the current &lt;code&gt;date&lt;/code&gt; in ISO format&lt;sup&gt;[2]&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;adds a &lt;code&gt;muting_history&lt;/code&gt; entry to Sentinel &lt;code&gt;info&lt;/code&gt; docs for every updated contact&lt;sup&gt;[7]&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;updates all connected registrations&lt;sup&gt;[3]&lt;/sup&gt;, changing the state of all unsent&lt;sup&gt;[4]&lt;/sup&gt; &lt;code&gt;scheduled_tasks&lt;/code&gt; to &lt;code&gt;muted&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Unmuting action:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;updates target contact&amp;rsquo;s topmost muted ancestor&lt;sup&gt;[1][5]&lt;/sup&gt; and all its descendants, removing the &lt;code&gt;muted&lt;/code&gt; property&lt;/li&gt;
&lt;li&gt;adds a &lt;code&gt;muting_history&lt;/code&gt; entry to Sentinel &lt;code&gt;info&lt;/code&gt; docs for every updated contact&lt;sup&gt;[7]&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;updates all connected registrations&lt;sup&gt;[3]&lt;/sup&gt;, changing the state of all present/future&lt;sup&gt;[6]&lt;/sup&gt; &lt;code&gt;muted&lt;/code&gt; &lt;code&gt;scheduled_tasks&lt;/code&gt; to &lt;code&gt;scheduled&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[1] Contacts that are already in the correct state are skipped. This applies to updates to the contact itself, updates to the Sentinel &lt;code&gt;muting_history&lt;/code&gt; and to the connected registrations (registrations of a contact that is already in the correct state will not be updated).
[2] The date represents the moment Sentinel has processed the muting action
[3] target contact and descendants&amp;rsquo; registrations
[4] &lt;code&gt;scheduled_tasks&lt;/code&gt; being in either &lt;code&gt;scheduled&lt;/code&gt; or &lt;code&gt;pending&lt;/code&gt; state
[5] Because the muted state is inherited, unmuting cascades upwards to the highest level muted ancestor. If none of the ancestors is muted, unmuting cascades downwards only.
[6] &lt;code&gt;scheduled_tasks&lt;/code&gt; which are due today or in the future. All &lt;code&gt;scheduled_tasks&lt;/code&gt; with a due date in the past will remain unchanged.&lt;/p&gt;
&lt;h5 id=&#34;7-muting-history&#34;&gt;[7] Muting history&lt;/h5&gt;
&lt;p&gt;Each time the &lt;code&gt;muted&lt;/code&gt; state of a contact changes, an entry is added to a &lt;code&gt;muting_history&lt;/code&gt; list saved in Sentinel &lt;code&gt;info&lt;/code&gt; docs (stored as an array property with the same name).
Entries in &lt;code&gt;muting_history&lt;/code&gt; contain the following information:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;muted&lt;/td&gt;
&lt;td&gt;Boolean representing the muted state&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;date&lt;/td&gt;
&lt;td&gt;Date in ISO Format&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;report_id&lt;/td&gt;
&lt;td&gt;An &lt;code&gt;_id&lt;/code&gt; reference to the report that triggered the action&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;configuration-4&#34;&gt;Configuration&lt;/h4&gt;
&lt;p&gt;Configuration is stored in the &lt;code&gt;muting&lt;/code&gt; field of &lt;code&gt;app_settings.json&lt;/code&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mute_forms&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An array of form codes which will trigger muting. &lt;strong&gt;Required&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;unmute_forms&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An array of form codes which will trigger unmuting. Optional.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;validations&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;List of form fields validations. All mute &amp;amp; unmute forms will be subjected to these validation rules. Invalid forms will not trigger muting/unmuting actions. Optional.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;List of tasks/errors that will be created, determined by &lt;code&gt;event_type&lt;/code&gt;. Optional.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Supported &lt;code&gt;events_types&lt;/code&gt; are:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Event Type&lt;/th&gt;
&lt;th&gt;Trigger&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mute&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;On successful &lt;code&gt;mute&lt;/code&gt; action&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;unmute&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;On successful &lt;code&gt;unmute&lt;/code&gt; action&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;already_muted&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;On &lt;code&gt;mute&lt;/code&gt; action, when target contact is already muted&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;already_unmuted&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;On &lt;code&gt;unmute&lt;/code&gt; action, when target contact is already unmuted&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;contact_not_found&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Either mute or unmute actions when target contact is not found&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&#34;example-1&#34;&gt;Example&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;muting&amp;quot;: {
    &amp;quot;mute_forms&amp;quot;: [&amp;quot;mute_person&amp;quot;, &amp;quot;mute_clinic&amp;quot;],
    &amp;quot;unmute_forms&amp;quot;: [&amp;quot;unmute_person&amp;quot;, &amp;quot;unmute_clinic&amp;quot;],
    &amp;quot;validations&amp;quot;: {
      &amp;quot;join_responses&amp;quot;: true,
      &amp;quot;list&amp;quot;: []
    },
    &amp;quot;messages&amp;quot;: [
      {
        &amp;quot;translation_key&amp;quot;: &amp;quot;&amp;quot;,
        &amp;quot;event_type&amp;quot;: &amp;quot;mute&amp;quot;,
        &amp;quot;recipient&amp;quot;: &amp;quot;reporting_unit&amp;quot;
      },
      {
        &amp;quot;translation_key&amp;quot;: &amp;quot;&amp;quot;,
        &amp;quot;event_type&amp;quot;: &amp;quot;unmute&amp;quot;,
        &amp;quot;recipient&amp;quot;: &amp;quot;reporting_unit&amp;quot;
      },
      {
        &amp;quot;translation_key&amp;quot;: &amp;quot;&amp;quot;,
        &amp;quot;event_type&amp;quot;: &amp;quot;already_muted&amp;quot;,
        &amp;quot;recipient&amp;quot;: &amp;quot;reporting_unit&amp;quot;
      },
      {
        &amp;quot;translation_key&amp;quot;: &amp;quot;&amp;quot;,
        &amp;quot;event_type&amp;quot;: &amp;quot;already_unmuted&amp;quot;,
        &amp;quot;recipient&amp;quot;: &amp;quot;reporting_unit&amp;quot;
      },
      {
        &amp;quot;translation_key&amp;quot;: &amp;quot;&amp;quot;,
        &amp;quot;event_type&amp;quot;: &amp;quot;contact_not_found&amp;quot;,
        &amp;quot;recipient&amp;quot;: &amp;quot;reporting_unit&amp;quot;
      }
    ]
  }
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;self_report&#34;&gt;self_report&lt;/h3&gt;
&lt;p&gt;Updates a &lt;code&gt;data_record&lt;/code&gt; to set its patient to its sender. The resulting doc will have &lt;code&gt;fields.patient_uuid&lt;/code&gt; and &lt;code&gt;fields.patient_id&lt;/code&gt; filled with the sender&amp;rsquo;s information. Provides hydrated patient information to subsequent transitions.
The &lt;code&gt;sender&lt;/code&gt; is the contact associated with the phone number that sent the original SMS.&lt;br&gt;
If a doc already contains a &lt;code&gt;patient&lt;/code&gt; field, does not have a sender or its &lt;code&gt;form&lt;/code&gt; is not configured to be enabled for this transition, it will be ignored.&lt;/p&gt;
&lt;h4 id=&#34;configuration-5&#34;&gt;Configuration&lt;/h4&gt;
&lt;p&gt;Configuration is stored in the &lt;code&gt;self_report&lt;/code&gt; field of &lt;code&gt;app_settings.json&lt;/code&gt; as a list of objects connecting forms to messages.
Every object should have this structure:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;form&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Form code. &lt;strong&gt;Required&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;List of tasks/errors that will be created, determined by &lt;code&gt;event_type&lt;/code&gt;. Optional.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Supported &lt;code&gt;events_types&lt;/code&gt; are:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Event Type&lt;/th&gt;
&lt;th&gt;Trigger&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;report_accepted&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;On successful sender updating&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;sender_not_found&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Sender not found&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&#34;example-2&#34;&gt;Example&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;self_report&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;form&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;FORM&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;messages&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;event_type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;report_accepted&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;recipient&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;reporting_unit&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;translation_key&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;messages.form.report_accepted&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;event_type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;sender_not_found&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;recipient&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;reporting_unit&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;translation_key&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;messages.form.sender_not_found&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;form&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;OTHER&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;messages&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;event_type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;report_accepted&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;recipient&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;reporting_unit&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;translation_key&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;messages.other.report_accepted&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;event_type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;sender_not_found&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;recipient&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;reporting_unit&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;translation_key&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;messages.other.sender_not_found&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Apps: User Permissions</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/user-permissions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/user-permissions/</guid>
      <description>
        
        
        &lt;h3 id=&#34;app_settingsjson-permissions&#34;&gt;&lt;code&gt;app_settings.json .permissions{}&lt;/code&gt;&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;placeholder&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: User Roles</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/user-roles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/user-roles/</guid>
      <description>
        
        
        &lt;p&gt;Each user is assigned one of the defined roles. Roles can be defined using the App Management app, which is represented by the &lt;code&gt;roles&lt;/code&gt; object of the &lt;code&gt;app-settings.json&lt;/code&gt; file. Each role is defined by an identifier as the key, and an object with the following properties:&lt;/p&gt;
&lt;h3 id=&#34;app_settingsjson-roles&#34;&gt;&lt;code&gt;app_settings.json .roles{}&lt;/code&gt;&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The translation key for this role&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;offline&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Determines if user will be an online or offline user. Set to &lt;code&gt;false&lt;/code&gt; for users to be &amp;ldquo;online&amp;rdquo; users.&lt;/td&gt;
&lt;td&gt;No, default &lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
  </channel>
</rss>
