<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Community Health Toolkit – forms</title>
    <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/forms/</link>
    <description>Recent content in forms on Community Health Toolkit</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://docs.communityhealthtoolkit.org/beta/apps/reference/forms/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Apps: app</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/forms/app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/forms/app/</guid>
      <description>
        
        
        &lt;p&gt;App forms are used for care guides within the web app, whether accessed in browser or via the Android app. When a user completes an app form, the contents are saved in the database with the type &lt;code&gt;data_record&lt;/code&gt;. These docs are known in the app as &lt;a href=&#34;https://docs.communityhealthtoolkit.org/beta/apps/features/reports/&#34;&gt;Reports&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;App forms are defined by the following files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A XML form definition using a CHT-enhanced ODK XForm format&lt;/li&gt;
&lt;li&gt;A XLSForm form definition, easier to write and converts to the XForm (optional)&lt;/li&gt;
&lt;li&gt;Meta information in the &lt;code&gt;{form_name}.properties.json&lt;/code&gt; file (optional)&lt;/li&gt;
&lt;li&gt;Media files in the &lt;code&gt;{form_name}-media&lt;/code&gt; directory (optional)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;xform&#34;&gt;XForm&lt;/h2&gt;
&lt;p&gt;A CHT-enhanced version of the ODK XForm standard is supported.&lt;/p&gt;
&lt;p&gt;Data needed during the completion of the form (eg patient&amp;rsquo;s name, prior information) is passed into the &lt;code&gt;inputs&lt;/code&gt; group. Reports that have at least one of &lt;code&gt;place_id&lt;/code&gt;, &lt;code&gt;patient_id&lt;/code&gt;, and &lt;code&gt;patient_uuid&lt;/code&gt; at the top level will be associated with that contact.&lt;/p&gt;
&lt;p&gt;A typical form ends with a summary group (eg &lt;code&gt;group_summary&lt;/code&gt;, or &lt;code&gt;group_review&lt;/code&gt;) where important information is shown to the user before they submit the form.&lt;/p&gt;
&lt;p&gt;In between the &lt;code&gt;inputs&lt;/code&gt; and the closing group is the form flow - a collection of questions that can be grouped into pages. All data fields submitted with a form are stored, but often important information that will need to be accessed from the form is brought to the top level. To make sure forms are properly associated to a contact, make sure at least one of &lt;code&gt;place_id&lt;/code&gt;, &lt;code&gt;patient_id&lt;/code&gt;, and &lt;code&gt;patient_uuid&lt;/code&gt; is stored at the top level of the form.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See Also:&lt;/em&gt; &lt;a href=https://docs.communityhealthtoolkit.org/beta/design/apps/#content-and-layout&gt;Content and Layout&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;xlsform&#34;&gt;XLSForm&lt;/h2&gt;
&lt;p&gt;Since writing raw XML can be tedious, we suggest creating the forms using the &lt;a href=&#34;http://xlsform.org/&#34;&gt;XLSForm standard&lt;/a&gt;, and using the &lt;a href=&#34;https://github.com/medic/medic-conf&#34;&gt;medic-conf&lt;/a&gt; command line configurer tool to &lt;a href=&#34;#build&#34;&gt;convert them to XForm format&lt;/a&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;label&lt;/th&gt;
&lt;th&gt;relevant&lt;/th&gt;
&lt;th&gt;appearance&lt;/th&gt;
&lt;th&gt;calculate&lt;/th&gt;
&lt;th&gt;&amp;hellip;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;begin group&lt;/td&gt;
&lt;td&gt;inputs&lt;/td&gt;
&lt;td&gt;Inputs&lt;/td&gt;
&lt;td&gt;./source = &amp;lsquo;user&amp;rsquo;&lt;/td&gt;
&lt;td&gt;field-list&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hidden&lt;/td&gt;
&lt;td&gt;source&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hidden&lt;/td&gt;
&lt;td&gt;source_id&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;begin group&lt;/td&gt;
&lt;td&gt;contact&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;db:person&lt;/td&gt;
&lt;td&gt;_id&lt;/td&gt;
&lt;td&gt;Patient ID&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;db-object&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;patient_id&lt;/td&gt;
&lt;td&gt;Medic ID&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;hidden&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;Patient Name&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;hidden&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;end group&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;end group&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;calculate&lt;/td&gt;
&lt;td&gt;_id&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;../inputs/contact/_id&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;calculate&lt;/td&gt;
&lt;td&gt;patient_id&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;../inputs/contact/patient_id&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;calculate&lt;/td&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;../inputs/contact/name&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;hellip;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;begin group&lt;/td&gt;
&lt;td&gt;group_summary&lt;/td&gt;
&lt;td&gt;Summary&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;field-list summary&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;note&lt;/td&gt;
&lt;td&gt;r_patient_info&lt;/td&gt;
&lt;td&gt;**${patient_name}** ID: ${r_patient_id}&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;note&lt;/td&gt;
&lt;td&gt;r_followup&lt;/td&gt;
&lt;td&gt;Follow Up &amp;lt;i class=&amp;quot;fa fa-flag&amp;rdquo;&amp;gt;&amp;lt;/i&amp;gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;note&lt;/td&gt;
&lt;td&gt;r_followup_note&lt;/td&gt;
&lt;td&gt;${r_followup_instructions}&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;end group&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;cht-xform-widgets&#34;&gt;CHT XForm Widgets&lt;/h2&gt;
&lt;p&gt;Some XForm widgets have been added or modified for use in the app:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Bikram Sambat Datepicker&lt;/strong&gt;: Calendar widget using Bikram Sambat calendar. Used by default for appropriate languages.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Countdown Timer&lt;/strong&gt;: A visual timer widget that starts when tapped/clicked, and has an audible alert when done. To use it create a &lt;code&gt;string&lt;/code&gt; field with an &lt;code&gt;appearance&lt;/code&gt; set to &lt;code&gt;countdown-timer&lt;/code&gt;. The duration of the timer is the field&amp;rsquo;s value, which can be set in the XLSForm&amp;rsquo;s &lt;code&gt;default&lt;/code&gt; column. If this value is not set, the timer will be set to 60 seconds.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Contact Selector&lt;/strong&gt;: Select a contact, such as a person or place, and save their UUID in the report. To use create a field of type &lt;code&gt;db:{{contact_type}}&lt;/code&gt; (eg &lt;code&gt;db:person&lt;/code&gt;, &lt;code&gt;db:clinic&lt;/code&gt;) with appearance &lt;code&gt;db-object&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rapid Diagnostic Test capture&lt;/strong&gt;: Take a picture of a Rapid Diagnotistic Test and save it with the report. Works with &lt;a href=&#34;https://github.com/medic/rdt-capture/&#34;&gt;rdt-capture Android application&lt;/a&gt;. To use create a string field with appearance &lt;code&gt;mrdt-verify&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Simprints registration&lt;/strong&gt;: Register a patient with the Simprints biometric tool. To include in a form create a &lt;code&gt;string&lt;/code&gt; field with &lt;code&gt;appearance&lt;/code&gt; of &lt;code&gt;simprints-reg&lt;/code&gt;. Requires the Simprints app connected with hardware, or &lt;a href=&#34;https://github.com/medic/mocksimprints&#34;&gt;mock app&lt;/a&gt;. Demo only, not ready for production since API key is hardcoded.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The code for these widgets can be found in the &lt;a href=&#34;https://github.com/medic/medic/tree/master/webapp/src/js/enketo/widgets&#34;&gt;Medic repo&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;contact-selector&#34;&gt;Contact Selector&lt;/h3&gt;
&lt;p&gt;Using a contact selector allows you to get data off the selected contact(person or place) or search for an existing contact.&lt;/p&gt;
&lt;p&gt;When using with the appearance column set to &lt;code&gt;db-object&lt;/code&gt;. The contact selector will display as a search box allowing you to search for the type of contact specified when building the report. EX: &lt;code&gt;db-person&lt;/code&gt; will only search for contacts with type of person.&lt;/p&gt;
&lt;p&gt;When used as a field you can pull the current contact. This is can be used to link reports to a person or place where you started the form from. Getting the data of &lt;code&gt;_id&lt;/code&gt; or &lt;code&gt;patient_id&lt;/code&gt; and setting those to &lt;code&gt;patient_id&lt;/code&gt; or &lt;code&gt;patient_uuid&lt;/code&gt; on the final report will link that report so it displays on their contact summary page.&lt;/p&gt;
&lt;p&gt;Example of getting the data from the contact and assigning it to the fields neccessary to link the report.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;label&lt;/th&gt;
&lt;th&gt;relevant&lt;/th&gt;
&lt;th&gt;appearance&lt;/th&gt;
&lt;th&gt;calculate&lt;/th&gt;
&lt;th&gt;&amp;hellip;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;begin group&lt;/td&gt;
&lt;td&gt;contact&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;db:person&lt;/td&gt;
&lt;td&gt;_id&lt;/td&gt;
&lt;td&gt;Patient ID&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;db-object&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;patient_id&lt;/td&gt;
&lt;td&gt;Medic ID&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;hidden&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;Patient Name&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;hidden&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;end group&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;calculate&lt;/td&gt;
&lt;td&gt;patient_uuid&lt;/td&gt;
&lt;td&gt;Patient UUID&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;../contact/_id&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;calculate&lt;/td&gt;
&lt;td&gt;patient_id&lt;/td&gt;
&lt;td&gt;Patient ID&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;../contact/patient_id&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;cht-xpath-functions&#34;&gt;CHT XPath Functions&lt;/h2&gt;
&lt;h3 id=&#34;difference-in-months&#34;&gt;&lt;code&gt;difference-in-months&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Calculates the number of whole calendar months between two dates. This is often used when determining a child&amp;rsquo;s age for immunizations or assessments.&lt;/p&gt;
&lt;h3 id=&#34;z-score&#34;&gt;&lt;code&gt;z-score&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;In Enketo forms you have access to an XPath function to calculate the z-score value for a patient.&lt;/p&gt;
&lt;h2 id=&#34;uploading-binary-attachments&#34;&gt;Uploading Binary Attachments&lt;/h2&gt;
&lt;p&gt;Forms can include arbitrary binary data which is submitted and included in the doc as an attachment. If this is an image type it&amp;rsquo;ll then be displayed inline in the report UI.&lt;/p&gt;
&lt;p&gt;To mark an element as having binary data add an extra column in the XLSForm called &lt;code&gt;instance::type&lt;/code&gt; and specify &lt;code&gt;binary&lt;/code&gt; in the element&amp;rsquo;s row.&lt;/p&gt;
&lt;h2 id=&#34;properties&#34;&gt;Properties&lt;/h2&gt;
&lt;p&gt;The meta information in the &lt;code&gt;{form_name}.properties.json&lt;/code&gt; file defines the form&amp;rsquo;s title and icon, as well as when and where the form should be available.&lt;/p&gt;
&lt;h3 id=&#34;formsappform_namepropertiesjson&#34;&gt;&lt;code&gt;forms/app/{form_name}.properties.json&lt;/code&gt;&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;property&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;th&gt;required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;title&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The form&amp;rsquo;s title seen in the app. Uses a localization array using the 2-letter code, not the translation keys discussed in the &lt;a href=&#34;#localization&#34;&gt;Localization section&lt;/a&gt;.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;icon&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Icon associated with the form. The value is the image&amp;rsquo;s key in the &lt;code&gt;resources.json&lt;/code&gt; file, as described in the &lt;a href=&#34;#icons&#34;&gt;Icons section&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;context&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The context defines when and where the form should be available in the app&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;context.person&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Boolean determining if the form can be seen in the Action list for a person&amp;rsquo;s profile. This is still subject to the &lt;code&gt;expression&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;context.place&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Boolean determining if the form can be seen in the Action list for a person&amp;rsquo;s profile. This is still subject to the &lt;code&gt;expression&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;context.expression&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A JavaScript expression which is evaluated when a contact profile or the reports tab is viewed. If the expression evaluates to true, the form will be listed as an available action. The inputs &lt;code&gt;contact&lt;/code&gt;, &lt;code&gt;user&lt;/code&gt;, and &lt;code&gt;summary&lt;/code&gt; are available. By default, forms are not shown on the reports tab, use &lt;code&gt;&amp;quot;expression&amp;quot;: &amp;quot;!contact&amp;quot;&lt;/code&gt; to show the form on the Reports tab since there is no contact for this scenario.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;code-sample&#34;&gt;Code sample&lt;/h3&gt;
&lt;p&gt;In this sample properties file, the associated form would only show on a person&amp;rsquo;s page, and only if their sex is unspecified or female and they are between 10 and 65 years old:&lt;/p&gt;
&lt;h4 id=&#34;formsapppregnancypropertiesjson&#34;&gt;&lt;code&gt;forms/app/pregnancy.properties.json&lt;/code&gt;&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;locale&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;content&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;New Pregnancy&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;locale&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;hi&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;content&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;नई गर्भावस्था&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;icon&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;pregnancy-1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;context&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;person&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;place&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;expression&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;contact.type === &amp;#39;person&amp;#39; &amp;amp;&amp;amp; (!contact.sex || contact.sex === &amp;#39;female&amp;#39;) &amp;amp;&amp;amp; (!contact.date_of_birth || (ageInYears(contact) &amp;gt;= 10 &amp;amp;&amp;amp; ageInYears(contact) &amp;lt; 65))&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;build&#34;&gt;Build&lt;/h2&gt;
&lt;p&gt;Convert and build the app forms into your application using the &lt;code&gt;convert-app-forms&lt;/code&gt; and &lt;code&gt;upload-app-forms&lt;/code&gt; actions in &lt;code&gt;medic-conf&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;medic-conf --local convert-app-forms upload-app-forms
&lt;/code&gt;&lt;/pre&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: collect</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/forms/collect/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/forms/collect/</guid>
      <description>
        
        
        &lt;p&gt;ODK XForms are used to render forms in the Medic Collect Android app. These forms cannot use any Medic-specific XForm notations. All Medic Collect forms are processed as SMS (even when submitted over a wifi) therefore a corresponding JSON form with matching fields is used to interpret the incoming report.&lt;/p&gt;
&lt;p&gt;Collect forms must be in the &lt;code&gt;forms/collect&lt;/code&gt; folder to be processed by &lt;a href=&#34;https://github.com/medic/medic-conf&#34;&gt;&lt;code&gt;medic-conf&lt;/code&gt;&lt;/a&gt;&amp;lsquo;s &lt;code&gt;convert-collect-forms&lt;/code&gt; and &lt;code&gt;upload-collect-forms&lt;/code&gt; actions. Once uploaded to the server, they can be downloaded by the Medic Collect app. These forms can also be included in Medic Collect builds for users without a data connection to get forms.&lt;/p&gt;
&lt;p&gt;XForms require a couple minor changes to be compatible with Medic Collect so that they can properly be received by a Medic instance. The changes can be done either manually in the XForm&amp;rsquo;s XML, or automatically with XLSForm forms using &lt;code&gt;medic-conf&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;automatic-changes-with-xlsforms&#34;&gt;Automatic changes with XLSForms&lt;/h3&gt;
&lt;p&gt;If using a &lt;a href=&#34;http://xlsform.org/&#34;&gt;XLSForm&lt;/a&gt; and using &lt;a href=&#34;https://github.com/medic/medic-conf&#34;&gt;&lt;code&gt;medic-conf&lt;/code&gt;&lt;/a&gt; to convert to XForm, the necessary fields will be automatically added to the resulting XForm. You can override the default prefix and separator by declaring &lt;code&gt;sms_keyword&lt;/code&gt; and &lt;code&gt;sms_seperator&lt;/code&gt; respectively in the Settings tab.&lt;/p&gt;
&lt;h3 id=&#34;manual-changes-in-xform&#34;&gt;Manual changes in XForm&lt;/h3&gt;
&lt;p&gt;Collect forms need &lt;code&gt;prefix&lt;/code&gt; and &lt;code&gt;delimiter&lt;/code&gt; values added to the XForm&amp;rsquo;s XML. This is done where the form ID is declared in the instance&amp;rsquo;s data model. For example, the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;instance&amp;gt;
   &amp;lt;data id=&amp;quot;myform&amp;quot; &amp;gt;
   ...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;becomes:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;instance&amp;gt;
   &amp;lt;data id=&amp;quot;myform&amp;quot; prefix=&amp;quot;J1!FORM_CODE!&amp;quot; delimiter=&amp;quot;#&amp;quot;&amp;gt;
   ...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note that &lt;code&gt;FORM_CODE&lt;/code&gt; should be replaced with the form code as defined in the JSON forms version of the form. If the form code is &lt;code&gt;ABCD&lt;/code&gt; the prefix value would be &lt;code&gt;J1!ABCD!&lt;/code&gt;, resulting in &lt;code&gt;prefix=&amp;quot;J1!ABCD!&amp;quot;&lt;/code&gt;. In case you are curious, the &lt;code&gt;J1&lt;/code&gt; lets the Medic Mobile server know that version 1 of the JavaRosa parser should be used on the incoming SMS.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: contact</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/forms/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/forms/contact/</guid>
      <description>
        
        
        &lt;p&gt;Contact forms are used for the creation and editing of each contact. The type associated to people is &lt;code&gt;person&lt;/code&gt;, and there are three types of places corresponding to levels in the app: &lt;code&gt;district_hospital&lt;/code&gt; &amp;gt; &lt;code&gt;health_center&lt;/code&gt; &amp;gt; &lt;code&gt;clinic&lt;/code&gt;. The display names for the place levels can be changed via &lt;a href=&#34;https://docs.communityhealthtoolkit.org/beta/apps/reference/translations/&#34;&gt;custom translations&lt;/a&gt;, and wherever they are defined in the contact forms. Each contact type has its own XForm where it defines the fields that it wants to store/edit for the contact:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- /forms/contact/person-create.xml
- /forms/contact/person-edit.xml
- /forms/contact/clinic-create.xml
- /forms/contact/clinic-edit.xml
- /forms/contact/health_center-create.xml
- /forms/contact/health_center-edit.xml
- /forms/contact/district_hospital-create.xml
- /forms/contact/district_hospital-edit.xml
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To create the above XForm files it is recommended to use XLSForms. Also, if the contact forms will be similar for all places, you can use a &lt;code&gt;PLACE_TYPE-create.xlsx&lt;/code&gt; file for creation, a &lt;code&gt;PLACE_TYPE-edit.xlsx&lt;/code&gt; for editing, and have &lt;code&gt;medic-conf&lt;/code&gt; generate the individual forms. For this you would also need &lt;code&gt;forms/contact/places.json&lt;/code&gt;, where you would define the place names. From the XLSForm you can refer to the place type with &lt;code&gt;PLACE_TYPE&lt;/code&gt;, and the place name with &lt;code&gt;PLACE_NAME&lt;/code&gt;. You can even use the place type for conditional behaviour in the form. The base files needed would therefore be:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- /forms/contact/person-create.xlsx
- /forms/contact/person-edit.xlsx
- /forms/contact/PLACE_TYPE-create.xlsx
- /forms/contact/PLACE_TYPE-edit.xlsx
- /forms/contact/places.json
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here is an example of a &lt;code&gt;places.json&lt;/code&gt; files:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
  &amp;quot;clinic&amp;quot;: &amp;quot;Village Clinic&amp;quot;,
  &amp;quot;health_center&amp;quot;: &amp;quot;Health Center&amp;quot;,
  &amp;quot;district_hospital&amp;quot;: &amp;quot;District Hospital&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Convert and build the contact forms into your application using the &lt;code&gt;convert-contact-forms&lt;/code&gt; and &lt;code&gt;upload-contact-forms&lt;/code&gt; actions in &lt;code&gt;medic-conf&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;medic-conf --local convert-contact-forms upload-contact-form&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
  </channel>
</rss>
