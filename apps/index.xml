<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Community Health Toolkit – CHT Applications</title>
    <link>https://docs.communityhealthtoolkit.org/beta/apps/</link>
    <description>Recent content in CHT Applications on Community Health Toolkit</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://docs.communityhealthtoolkit.org/beta/apps/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Apps: Accessing CHT Apps</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/concepts/access/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/concepts/access/</guid>
      <description>
        
        
        &lt;p&gt;Apps built with the Core Framework runs on most modern computers with the newest versions of Google Chrome or Mozilla Firefox.&lt;/p&gt;
&lt;h2 id=&#34;hardware--software-requirements&#34;&gt;Hardware &amp;amp; Software Requirements&lt;/h2&gt;
&lt;p&gt;Hardware procurement, ownership, and management is the responsibility of each implementing organization. We strongly urge all organizations to procure hardware locally to ensure ease of replacement, repair, sustainability, and hardware support when needed.&lt;/p&gt;
&lt;h2 id=&#34;accessing-on-desktop&#34;&gt;Accessing on Desktop&lt;/h2&gt;
&lt;p&gt;On desktop devices, there is no need to download anything. Simply go to a web browser and type in your unique URL, for example:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{{projectname}}.app.medicmobile.org&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;accessing-on-mobile&#34;&gt;Accessing on Mobile&lt;/h2&gt;
&lt;p&gt;The app also runs with an app on Android phones and tablets. It works best on devices running version 5.1 or later with at least 8 GB of internal memory (16 GB for supervisors) and minimum 1 GHz RAM.&lt;/p&gt;
&lt;h3 id=&#34;downloading&#34;&gt;Downloading&lt;/h3&gt;
&lt;figure class=&#34;right col-6 col-lg-3&#34;&gt;&lt;a href=&#34;download-app-store.png&#34;&gt;
    &lt;img src=&#34;download-app-store.png&#34;/&gt; &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;To download your app on a mobile device, first navigate to the Google Play Store. From there, click on the search icon in the upper right, and type in the custom name of your health app or project. Make sure the app shown is the correct one and then select it. Then, click on the “Install” button to begin the download.&lt;/p&gt;
&lt;h3 id=&#34;launching&#34;&gt;Launching&lt;/h3&gt;
&lt;p&gt;Once the download is complete, you can access your app via an app icon in your applications menu. Note that the icon, as well as the app name displayed, is customizable by the organization or project.&lt;/p&gt;
&lt;h2 id=&#34;logging-in&#34;&gt;Logging In&lt;/h2&gt;
&lt;figure class=&#34;right col-6 col-lg-3&#34;&gt;&lt;a href=&#34;logging-in.png&#34;&gt;
    &lt;img src=&#34;logging-in.png&#34;/&gt; &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;When accessing your app for the very first time, a login page is displayed. Users enter a username and password that grant access to their customized app experience.&lt;/p&gt;
&lt;p&gt;On mobile devices, the app generally stays logged in after initial setup so that CHW users don’t have to type in their credentials each day.&lt;/p&gt;
&lt;p&gt;On desktop devices, the user must login again if they close the app tab or browser window.&lt;/p&gt;
&lt;p&gt;Users may log out by going to the options menu available in the top right corner of the app.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See Also:&lt;/em&gt; &lt;a href=https://docs.communityhealthtoolkit.org/beta/apps/concepts/navigation/#&gt;Navigating CHT Apps&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Antenatal Care Reference App</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/examples/anc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/examples/anc/</guid>
      <description>
        
        
        &lt;p&gt;CHT applications are configurable by design and support an exceptional range of features and health service areas. The ANC Reference App provides organizations with a template for structuring and organizing you app, it’s configuration code, and testing framework. It includes a foundation for forms related to pregnancy and delivery, flexible data fields, and even analytics, and can be deployed as-is or customized by a developer for your unique context.&lt;/p&gt;
&lt;p&gt;To install the ANC Reference Application, follow the &lt;a href=&#34;https://github.com/medic/cht-core/blob/master/INSTALL.md&#34;&gt;easy installation instructions&lt;/a&gt;. An &lt;a href=&#34;anc-reference-app-overview.pdf&#34;&gt;overview of the ANC Reference App&lt;/a&gt; and its key features is also available.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;anc-reference-app-overview.pdf&#34;&gt;&lt;img src=&#34;preview-anc-ref-app-overview.png&#34; alt=&#34;ANC Overview&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you want to modify our ANC Reference Application for your project or context, read our &lt;a href=&#34;https://docs.communityhealthtoolkit.org/beta/design/apps/&#34;&gt;configuration best practices&lt;/a&gt; or learn how to &lt;a href=&#34;https://docs.communityhealthtoolkit.org/beta/apps/&#34;&gt;develop your own community health apps&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: DHIS2</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/features/integrations/dhis2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/features/integrations/dhis2/</guid>
      <description>
        
        
        &lt;p&gt;Most health systems have regular reporting requirements for community-level activities. Health workers often carry around heavy logbooks to manually record all relevant activities. When it is time to submit their data, community health workers summarize what was recorded in their logbooks and share this information with their supervisors, who in turn create paper records of these totals across entire community units or health facilities. This paper record is often passed to yet another individual whose responsibility is to manually key in the data into a health information management system, such as DHIS2.&lt;/p&gt;
&lt;p&gt;In communities using digital health apps that do not integrate with DHIS2, it is highly likely that health workers are duplicating efforts by recording the same information in their app and in their logbook(s).  For example, they are not only registering new pregnancies in their app, but they are also manually recording this in their logbooks, manually adding them up at the end of the month, and then someone else is manually keying this into DHIS2.&lt;/p&gt;
&lt;p&gt;In communities using digital health apps built with the CHT, health systems can reduce or eliminate the need to complete paper based forms for DHIS2 reporting needs. This gives health workers more time to focus on caring for the families in their community while also increasing accuracy and timeliness of their DHIS2 reporting requirements.&lt;/p&gt;
&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;CHT Core supports integrations with DHIS2 in a variety of ways:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Sending patient data&lt;/li&gt;
&lt;li&gt;Sending event data&lt;/li&gt;
&lt;li&gt;Sending pre-aggregated &amp;ldquo;Service Reports&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Aggregating data across multiple health workers into DHIS2 Data Values&lt;/li&gt;
&lt;li&gt;Exporting a file that can be imported into DHIS2 as a Data Set&lt;/li&gt;
&lt;li&gt;Exposing an API for DHIS2 app developers to pull aggregate data from CHT Core&lt;/li&gt;
&lt;li&gt;Receiving data from DHIS2&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Sending patient, event, and pre-aggregated data can be achieved using the Outbound push feature. Receiving data from DHIS2 can be achieved using the &lt;a href=&#34;https://github.com/medic/cht-core/tree/master/api&#34;&gt;CHT Core Web API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Aggregating data across multiple health workers requires a somewhat specific workflow and was designed with three key user personas in mind. The aggregate workflow is described in more detail below.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See Also:&lt;/em&gt; &lt;a href=https://docs.communityhealthtoolkit.org/beta/apps/reference/outbound/#&gt;Outbound Push&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;aggregate-workflow&#34;&gt;Aggregate Workflow&lt;/h2&gt;
&lt;p&gt;The aggregate workflow was designed specifically for CHWs, Supervisors, and Health Records Information Officers (HRIO) but may be adapted to other contexts.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CHW (Offline user)&lt;/strong&gt;: Conducts home visits and records information in the app. Reviews aggregate data throughout the month and makes sure to sync at the end of the month.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Supervisor (Offline user)&lt;/strong&gt;: Provides supervision to the CHWs, reviews and verifies aggregate data for an entire community unit.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HRIO (Online user)&lt;/strong&gt;: Exports a file from the CHT and imports into DHIS2. Reviews data in DHIS2.&lt;/p&gt;
&lt;h3 id=&#34;chw&#34;&gt;CHW&lt;/h3&gt;
&lt;p&gt;CHWs support patients in their community by following care guides and recording responses in the CHT. The CHT calculates aggregate DHIS2 Data Values for each CHW based on rules configured in the CHT. CHWs can view these indicators on the Targets tab and should review them and sync at the end of the month.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;chw.png&#34; alt=&#34;CHWs&#34; title=&#34;Feature Overview CHWs&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See Also:&lt;/em&gt; &lt;a href=https://docs.communityhealthtoolkit.org/beta/apps/features/targets/#&gt;Targets&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;supervisor&#34;&gt;Supervisor&lt;/h3&gt;
&lt;p&gt;In addition to their own Targets, Supervisors can see the aggregate of each DHIS2 Data Value across &lt;em&gt;all&lt;/em&gt; CHWs in their area from the CHW Aggregate view on the Targets tab. By tapping on a Target, they can also see each CHW’s contribution towards that total. Supervisors can review and verify with CHWs that everyone has synced and their data is correct. The Supervisor can communicate with the HRIO when everything has been validated.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;supervisor.png&#34; alt=&#34;Supervisors&#34; title=&#34;Feature Overview Supervisors&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;hrio&#34;&gt;HRIO&lt;/h3&gt;
&lt;p&gt;HRIOs access the CHT App Management tab and select the appropriate DHIS2 Data Set, Organisation Unit, and Period.  They then “Export” a file that is formatted for DHIS2. HRIOs will need access to the “Import/Export” feature in DHIS2 so that they can “Import” the file. Once it has been imported into DHIS2, they review the data from the Data Entry screen in DHIS2.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;data-entry-1.png&#34; alt=&#34;Data Entry&#34; title=&#34;Feature Overview Data Entry 1&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;dhis2-apps&#34;&gt;DHIS2 apps&lt;/h2&gt;
&lt;p&gt;The CHT also includes an &lt;a href=&#34;https://github.com/medic/cht-core/tree/master/api#get-apiv2exportdhis&#34;&gt;API&lt;/a&gt; that can be called from other applications that returns DHIS2 Data Sets. This means that you can build a &lt;a href=&#34;https://docs.dhis2.org/master/en/developer/html/apps_creating_apps.html&#34;&gt;DHIS2 app&lt;/a&gt; that pulls data from the CHT and imports it electronically into DHIS2. This would allow Data Entry to control the process directly from DHIS2 without having to access the CHT.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;data-entry-2.png&#34; alt=&#34;Data Entry&#34; title=&#34;Feature Overview Data Entry 2&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;version-notes&#34;&gt;Version Notes&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Feature&lt;/th&gt;
&lt;th&gt;CHT Core version&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Calculate DHIS2 Data Values by aggregating data from CHT Core reports&lt;/td&gt;
&lt;td&gt;3.9.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Export file from CHT Core that can be imported into DHIS2 as a Data Set&lt;/td&gt;
&lt;td&gt;3.9.0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: CHT Local Environment Setup</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/tutorials/local-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/tutorials/local-setup/</guid>
      <description>
        
        
        &lt;h2 id=&#34;purpose-of-the-tutorial&#34;&gt;Purpose of the tutorial&lt;/h2&gt;
&lt;p&gt;This tutorial will take you through setting up a local environment to build and test CHT applications. This includes setting up the necessary tools to download and run the CHT public docker image as well as a command line interface tool to manage and build CHT apps.&lt;/p&gt;
&lt;p&gt;By the end of the tutorial you should be able to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;View the login page to CHT webapp on localhost&lt;/li&gt;
&lt;li&gt;Upload default settings to localhost&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;brief-overview-of-key-concepts&#34;&gt;Brief overview of key concepts&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;CHT Core Framework&lt;/strong&gt; The Core Framework makes it faster to build full-featured, scalable digital health apps by providing a foundation developers can build on. These apps can support most languages, are offline-first, and work on basic phones (via SMS), smartphones, tablets, and computers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Medic Project Configurer&lt;/strong&gt; a.k.a &lt;em&gt;&lt;strong&gt;medic-conf&lt;/strong&gt;&lt;/em&gt; is command-line interface tool to manage and configure CHT apps.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Docker&lt;/strong&gt; is a tool designed to make it easier to create, deploy, and run applications by using containers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Containers&lt;/strong&gt; allow a developer to package up an application with all of the parts it needs, such as libraries and other dependencies, and deploy it as one package.&lt;/p&gt;
&lt;h2 id=&#34;required-resources&#34;&gt;Required resources&lt;/h2&gt;
&lt;p&gt;Before you begin, you need to have some useful software and tools that are required for things to work.&lt;/p&gt;
&lt;p&gt;First off, install &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;nodejs&lt;/a&gt; 8 or later and &lt;a href=&#34;https://www.npmjs.com/get-npm&#34;&gt;npm&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You also require Docker for your operating system:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.docker.com/engine/install/ubuntu/&#34;&gt;Docker for Ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/editions/community/docker-ce-desktop-mac&#34;&gt;Docker for MacOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/editions/community/docker-ce-desktop-windows&#34;&gt;Docker for Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;implementation-steps&#34;&gt;Implementation steps&lt;/h2&gt;
&lt;p&gt;Now that you have the dependent tools and software install, you are ready to begin setting up your CHT local environment.&lt;/p&gt;
&lt;h3 id=&#34;1-install-medic-conf&#34;&gt;1. Install medic-conf&lt;/h3&gt;
&lt;p&gt;Using npm on your terminal or command line, install medic-conf globally using the following command;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;npm install -g medic-conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can confirm that the installation was successful by typing &lt;code&gt;medic-conf&lt;/code&gt; in your terminal or command line.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;confirm-medic-conf.png&#34; alt=&#34;confirm medic-conf&#34; title=&#34;Confirm medic-conf&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-install-the-core-framework&#34;&gt;2. Install the Core Framework&lt;/h3&gt;
&lt;p&gt;Download the &lt;a href=&#34;https://github.com/medic/cht-core/blob/master/docker-compose.yml&#34;&gt;docker-compose.yml&lt;/a&gt; file to a folder of your choice. Be sure to place it in a folder that&amp;rsquo;s easy to find on terminal or command line.&lt;/p&gt;
&lt;p&gt;Open your terminal or command line and navigate to the folder where you have your &lt;a href=&#34;https://github.com/medic/cht-core/blob/master/docker-compose.yml&#34;&gt;docker-compose.yml&lt;/a&gt; file and run the command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;docker-compose up
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once the command is done running, navigate to &lt;code&gt;https://localhost&lt;/code&gt; on a Google Chrome browser and login with the default username &lt;code&gt;medic&lt;/code&gt; and default password &lt;code&gt;password&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;medic-login.png&#34; alt=&#34;medic login&#34; title=&#34;Medic login&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-create-and-upload-a-blank-project&#34;&gt;3. Create and upload a blank project&lt;/h3&gt;
&lt;p&gt;With &lt;code&gt;medic-conf&lt;/code&gt; you can create a blank project. This provides you a template from which you can begin working on CHT. Just run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;mkdir cht-app-tutorials
&lt;span style=&#34;color:#204a87&#34;&gt;cd&lt;/span&gt; cht-app-tutorials
medic-conf initialise-project-layout
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;init-project-layout.png&#34; alt=&#34;initialise project layout&#34; title=&#34;Initialise project layout&#34;&gt;&lt;/p&gt;
&lt;p&gt;Then deploy the blank project onto your local test environment with the command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;medic-conf --url&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;https://medic:password@localhost --accept-self-signed-certs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;accept-self-signed-certs&lt;/code&gt; tells medic-conf that it’s OK that the server’s certificate isn’t signed properly, which will be the case when using docker locally.&lt;/p&gt;
&lt;p&gt;Once you have run the above command it should complete with the message: &lt;code&gt;INFO All actions completed.&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;all-actions-completed.png&#34; alt=&#34;all actions completed&#34; title=&#34;All actions completed&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;frequently-asked-questions&#34;&gt;Frequently Asked Questions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://forum.communityhealthtoolkit.org/t/cant-upgrade-to-3-8-version/608&#34;&gt;How do I upgrade to a higher version of the webapp?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forum.communityhealthtoolkit.org/t/unable-to-install-core-framework-in-cloud-instance/533&#34;&gt;How do I access the instance remotely?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Supported Versions</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/supported-software/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/supported-software/</guid>
      <description>
        
        
        &lt;p&gt;Medic Mobile supports the latest patch of minor versions of the Core Framework for three months after the next minor version is made available, and the latest minor of a major version for twelve months after the next major version is made available.&lt;/p&gt;
&lt;p&gt;Once a version is no longer supported it will not receive any further releases and upgrading may be required before Medic Mobile can investigate any issues.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Version&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Release date&lt;/th&gt;
&lt;th&gt;End of life&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;3.8.1&lt;/td&gt;
&lt;td&gt;Current&lt;/td&gt;
&lt;td&gt;6-Apr-2020&lt;/td&gt;
&lt;td&gt;TBA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.8.0&lt;/td&gt;
&lt;td&gt;EOL&lt;/td&gt;
&lt;td&gt;11-Feb-2020&lt;/td&gt;
&lt;td&gt;6-Apr-2020&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.7.1&lt;/td&gt;
&lt;td&gt;Supported&lt;/td&gt;
&lt;td&gt;13-Nov-2019&lt;/td&gt;
&lt;td&gt;11-Jun-2020&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.7.0&lt;/td&gt;
&lt;td&gt;EOL&lt;/td&gt;
&lt;td&gt;22-Oct-2019&lt;/td&gt;
&lt;td&gt;13-Nov-2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.6.2&lt;/td&gt;
&lt;td&gt;EOL&lt;/td&gt;
&lt;td&gt;24-Mar-2020&lt;/td&gt;
&lt;td&gt;24-Mar-2020&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.6.1&lt;/td&gt;
&lt;td&gt;EOL&lt;/td&gt;
&lt;td&gt;07-Aug-2019&lt;/td&gt;
&lt;td&gt;22-Jan-2020&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.6.0&lt;/td&gt;
&lt;td&gt;EOL&lt;/td&gt;
&lt;td&gt;17-Jul-2019&lt;/td&gt;
&lt;td&gt;07-Aug-2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.5.0&lt;/td&gt;
&lt;td&gt;EOL&lt;/td&gt;
&lt;td&gt;27-Jun-2019&lt;/td&gt;
&lt;td&gt;17-Oct-2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.4.1&lt;/td&gt;
&lt;td&gt;EOL&lt;/td&gt;
&lt;td&gt;4-Jun-2019&lt;/td&gt;
&lt;td&gt;27-Sep-2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.4.0&lt;/td&gt;
&lt;td&gt;EOL&lt;/td&gt;
&lt;td&gt;27-Mar-2019&lt;/td&gt;
&lt;td&gt;4-Jun-2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.3.0&lt;/td&gt;
&lt;td&gt;EOL&lt;/td&gt;
&lt;td&gt;22-Feb-2019&lt;/td&gt;
&lt;td&gt;27-Jun-2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.2.1&lt;/td&gt;
&lt;td&gt;EOL&lt;/td&gt;
&lt;td&gt;23-Jan-2019&lt;/td&gt;
&lt;td&gt;22-May-2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.2.0&lt;/td&gt;
&lt;td&gt;EOL&lt;/td&gt;
&lt;td&gt;23-Jan-2019&lt;/td&gt;
&lt;td&gt;23-Jan-2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.1.0&lt;/td&gt;
&lt;td&gt;EOL&lt;/td&gt;
&lt;td&gt;21-Nov-2018&lt;/td&gt;
&lt;td&gt;23-Apr-2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.0.0&lt;/td&gt;
&lt;td&gt;EOL&lt;/td&gt;
&lt;td&gt;15-Nov-2018&lt;/td&gt;
&lt;td&gt;21-Feb-2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.18.1&lt;/td&gt;
&lt;td&gt;EOL&lt;/td&gt;
&lt;td&gt;31-Oct-2018&lt;/td&gt;
&lt;td&gt;15-Nov-2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.18.0&lt;/td&gt;
&lt;td&gt;EOL&lt;/td&gt;
&lt;td&gt;30-Aug-2018&lt;/td&gt;
&lt;td&gt;31-Oct-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;earlier&lt;/td&gt;
&lt;td&gt;EOL&lt;/td&gt;
&lt;td&gt;&amp;hellip;&lt;/td&gt;
&lt;td&gt;30-Nov-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;dependencies&#34;&gt;Dependencies&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;medic&lt;/th&gt;
&lt;th&gt;Node&lt;/th&gt;
&lt;th&gt;CouchDB&lt;/th&gt;
&lt;th&gt;Browsers&lt;/th&gt;
&lt;th&gt;SMS bridge&lt;/th&gt;
&lt;th&gt;Android&lt;/th&gt;
&lt;th&gt;medic-android&lt;/th&gt;
&lt;th&gt;medic-couch2pg&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;0.4&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.12+&lt;/td&gt;
&lt;td&gt;1.6+&lt;/td&gt;
&lt;td&gt;Chrome 30+, Firefox latest&lt;/td&gt;
&lt;td&gt;SMSSync&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;2.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;6+&lt;/td&gt;
&lt;td&gt;1.6+&lt;/td&gt;
&lt;td&gt;Chrome 30+, Firefox latest&lt;/td&gt;
&lt;td&gt;medic-gateway&lt;/td&gt;
&lt;td&gt;4.4+&lt;/td&gt;
&lt;td&gt;Any&lt;/td&gt;
&lt;td&gt;2.0 &amp;lt; 3.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;3.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;8.11+&lt;/td&gt;
&lt;td&gt;2.1+&lt;/td&gt;
&lt;td&gt;Chrome 53+, Firefox latest&lt;/td&gt;
&lt;td&gt;medic-gateway&lt;/td&gt;
&lt;td&gt;4.4+&lt;/td&gt;
&lt;td&gt;0.4.5+&lt;/td&gt;
&lt;td&gt;3.0+&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;hardware-requirements&#34;&gt;Hardware requirements&lt;/h1&gt;
&lt;h2 id=&#34;smartphones&#34;&gt;Smartphones&lt;/h2&gt;
&lt;p&gt;The following is the minimum specification recommendation for smartphones to handle the typical workload of front line health workers. Users with particularly high workloads or facility or supervisor workloads will require more powerful devices.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Specification&lt;/th&gt;
&lt;th&gt;Minimum&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Android version&lt;/td&gt;
&lt;td&gt;5.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Processor&lt;/td&gt;
&lt;td&gt;1.0GHz dual-core&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RAM&lt;/td&gt;
&lt;td&gt;1GB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Storage&lt;/td&gt;
&lt;td&gt;8GB&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Contact and User Management - Part 1</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/tutorials/contact-and-users-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/tutorials/contact-and-users-1/</guid>
      <description>
        
        
        &lt;h2 id=&#34;purpose-of-the-tutorial&#34;&gt;Purpose of the tutorial&lt;/h2&gt;
&lt;p&gt;In this tutorial you will learn how to create and edit contacts and their associated users in the CHT application using the default contact creation forms. This will help you get familiar with the UI of the webapp as well as some features and functionality. If you are already comfortable with this, you can skip to &lt;a href=&#34;creating-and-managing-users-and-contacts-with-medic-conf.md&#34;&gt;manipulating contacts and their associated documents using medic conf&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;brief-overview-of-key-concepts&#34;&gt;Brief overview of key concepts&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Contacts&lt;/strong&gt; are people or places that are created in the CHT application.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;People&lt;/strong&gt; are both patients in the system and users of the system, such as CHWs or Nurses.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Places&lt;/strong&gt; represent either an actual physical location such as a health facility, clinic, or a grouping such as a household or CHW area.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Contact forms&lt;/strong&gt; are forms in the CHT app that are used to create people or places.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CHT app hierarchy&lt;/strong&gt; is often modeled after the health system, health program or community structure.  All people who are registered in the app must be associated with a place. These places are located in a hierarchy with other places. For instance, a Family Member is part of a Household. A Household and CHWs are part of a CHW Area. A CHW Area and nurses are part of a Health Facility. Additional levels may be added as needed. The Admin level operates outside of the hierarchy and gives access to all levels and people.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;app-hierarchy.jpg&#34; alt=&#34;app hierarchy&#34; title=&#34;Default app hierarchy&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Users&lt;/strong&gt; represent credentials and roles / permissions for accessing the application. This can either be:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;People who can log into the application, such as CHWs or Nurses or&lt;/li&gt;
&lt;li&gt;Credentials granting external software restricted permissions to perform certain tasks, such as allowing an external service permission to write reports via the api.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;required-resources&#34;&gt;Required resources&lt;/h2&gt;
&lt;p&gt;You should have a functioning CHT instance with contact forms configured. Read &lt;a href=&#34;setting_up_local_configuration_environment.md&#34;&gt;How to set up a CHT local configuration environment&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;implementation-steps&#34;&gt;Implementation steps&lt;/h2&gt;
&lt;p&gt;In this tutorial, you will work with the default contact forms and the default hierachy. The default hierarchy is illustrated above as part of the overview of key concepts.&lt;/p&gt;
&lt;p&gt;While logged in as an admin user, you will first create the Health Facility, CHW Supervisor, CHW Area, and CHW. You will then create the users for the CHW so that they can log in and create households and household members.&lt;/p&gt;
&lt;h3 id=&#34;1-create-the-health-facility-chw-supervisor-chw-area-and-chw&#34;&gt;1. Create the Health Facility, CHW Supervisor, CHW Area, and CHW&lt;/h3&gt;
&lt;h4 id=&#34;create-new-health-facility&#34;&gt;Create new Health facility&lt;/h4&gt;
&lt;p&gt;While logged into the CHT application, go to the people tab and select &lt;code&gt;New health facility&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;new-facility/select-new-facility.png&#34; alt=&#34;new health facility&#34; title=&#34;New health facility&#34;&gt;&lt;/p&gt;
&lt;p&gt;There are 2 options for assigning a primary contact for the new facility:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Creating a new contact as you are creating the new facility&lt;/li&gt;
&lt;li&gt;Selecting a primary contact from already created contacts&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For now we will skip creating or assigning a primary contact so that we can focus on creating the new facility.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;new-facility/skip-primary-contact.png&#34; alt=&#34;skip primary contact&#34; title=&#34;Skip primary contact&#34;&gt;&lt;/p&gt;
&lt;p&gt;Enter the details of the facility and submit the form.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;new-facility/enter-facility-name.png&#34; alt=&#34;enter facility details&#34; title=&#34;Enter facility details&#34;&gt;&lt;/p&gt;
&lt;p&gt;You should see the newly created facility appear on the left hand side and when you select it, you will see details of the facility appear on the right hand side.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;new-facility/created-facility.png&#34; alt=&#34;created facility&#34; title=&#34;Created facility&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;create-chw-area-and-chw&#34;&gt;Create CHW Area and CHW&lt;/h4&gt;
&lt;p&gt;We will now create a place and the primary contact for the place within one form. We want to create a CHW area within the facility that we previously created.&lt;/p&gt;
&lt;p&gt;Select the Health facility on the left hand side. You will then select &lt;code&gt;New area&lt;/code&gt; on the right hand side.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;new-chw-area/new-chw-area.png&#34; alt=&#34;new chw area&#34; title=&#34;New CHW area&#34;&gt;&lt;/p&gt;
&lt;p&gt;Select the option that lets you create a new person within the form. This person will automatically become the primary contact for the created place.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;new-chw-area/create-new-person.png&#34; alt=&#34;create new person&#34; title=&#34;Create a new person&#34;&gt;&lt;/p&gt;
&lt;p&gt;Fill in the required fields and go to the next section.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;new-chw-area/fill-required-fields.png&#34; alt=&#34;fill fields&#34; title=&#34;Fill required fields&#34;&gt;&lt;/p&gt;
&lt;p&gt;You will get an option to name the place after the created contact person or name it yourself. If you select &lt;code&gt;Yes&lt;/code&gt;, the new place will be named &lt;code&gt;&amp;lt;contact-name&amp;gt;&#39;s Area&lt;/code&gt;. For example &lt;code&gt;Jane Doe&#39;s Area&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;new-chw-area/name-after-primary-contact.png&#34; alt=&#34;name after contact&#34; title=&#34;Name after contact&#34;&gt;&lt;/p&gt;
&lt;p&gt;Once you submit, a new CHW area will be created. You should see on the right hand, the CHW Area name, the primary contact of the CHW Area, and the facility that the CHW area belongs to.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;new-chw-area/created-chw-area.png&#34; alt=&#34;created area&#34; title=&#34;Created CHW Area&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;create-chw-supervisor&#34;&gt;Create CHW Supervisor&lt;/h4&gt;
&lt;p&gt;To create a primary contact for an existing place (in this case, for the facility that we created without a primary contact); select the place and the select the &lt;code&gt;New person&lt;/code&gt; action.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;new-chw-supervisor/new-person.png&#34; alt=&#34;new person&#34; title=&#34;New person&#34;&gt;&lt;/p&gt;
&lt;p&gt;A new person form will appear with an option to change the place the new person will belong to. Once you submit this form, a new contact will be created in the Facility.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;new-chw-supervisor/belongs-to.png&#34; alt=&#34;belongs to&#34; title=&#34;Belongs to&#34;&gt;&lt;/p&gt;
&lt;p&gt;Finally, we will set the newly created person as a primary contact for the Facility they belong to. To do this, select the facility and then select the &lt;code&gt;Edit&lt;/code&gt; action.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;new-chw-supervisor/edit-facility.png&#34; alt=&#34;edit facility&#34; title=&#34;Edit facility&#34;&gt;&lt;/p&gt;
&lt;p&gt;You should see an edit form from which you can set the primary contact of the facility and submit to apply the changes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;new-chw-supervisor/set-primary-contact.png&#34; alt=&#34;set primary contact&#34; title=&#34;Set primary contact&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-create-the-chw-user&#34;&gt;2. Create the CHW user&lt;/h3&gt;
&lt;p&gt;With the CHW and CHW Supervisor contacts created, you may want to log in as a CHW and perform some actions. To do this, let&amp;rsquo;s create a CHW user that&amp;rsquo;s linked to the CHW contact we created earlier.&lt;/p&gt;
&lt;p&gt;Go to the hamburger menu and select &lt;code&gt;App Settings&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;new-chw-user/app-settings.png&#34; alt=&#34;app settings&#34; title=&#34;App settings&#34;&gt;&lt;/p&gt;
&lt;p&gt;When you are on the &lt;code&gt;App Settings&lt;/code&gt; page, select &lt;code&gt;Users&lt;/code&gt; on the right hand side and then select &lt;code&gt;Add user&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;new-chw-user/add-user.png&#34; alt=&#34;add user&#34; title=&#34;Add user&#34;&gt;&lt;/p&gt;
&lt;p&gt;You should now see an &lt;code&gt;Add user&lt;/code&gt; form. Fill in the user name, the select the role as &lt;code&gt;CHW&lt;/code&gt; or &lt;code&gt;Regional admin&lt;/code&gt;. In the &lt;code&gt;Place&lt;/code&gt; field, select the name of the CHW area whose CHW you want to create a user for (you can search by typing the first few letters of the CHW area name). Once that is done, under the &lt;code&gt;Associate contact&lt;/code&gt; field select the name of the CHW whose user you are creating. Finally, input a password and hit submit.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;new-chw-user/fill-user-details.png&#34; alt=&#34;user details&#34; title=&#34;Fill user details&#34;&gt;&lt;/p&gt;
&lt;p&gt;Once this is done, you can logout and log into the app using the username and password that you just created.&lt;/p&gt;
&lt;h2 id=&#34;frequently-asked-questions&#34;&gt;Frequently Asked Questions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://forum.communityhealthtoolkit.org/t/is-there-any-downside-of-creating-too-many-users/531&#34;&gt;Is there any downside of creating too many users?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forum.communityhealthtoolkit.org/t/for-offline-users-how-often-does-the-app-try-to-refresh-if-there-is-an-available-internet-connection/503&#34;&gt;For offline users, how often does the app try to refresh if there is an available internet connection?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forum.communityhealthtoolkit.org/t/can-one-person-belong-to-multiple-places-in-the-same-hierarchy/101&#34;&gt;Can one person belong to multiple places in the same hierarchy?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Navigating CHT Apps</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/concepts/navigation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/concepts/navigation/</guid>
      <description>
        
        
        &lt;h2 id=&#34;summary-of-page-tabs&#34;&gt;Summary of Page Tabs&lt;/h2&gt;
&lt;figure class=&#34;right col-6 col-lg-3&#34;&gt;&lt;a href=&#34;page-tabs.png&#34;&gt;
    &lt;img src=&#34;page-tabs.png&#34;/&gt; &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Page tabs are the primary way to navigate apps built with the Core Framework. The number of tabs is variable depending on the user’s role and place in the hierarchy. For example, non-admin users don’t have Messages. The Reports tab is accessible to CHWs but often located inside the secondary menu drawer.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;People​&lt;/strong&gt;: This is where profiles of districts, staff, CHWs and patients live&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tasks​&lt;/strong&gt;: This is a list of upcoming visits, follow-ups, or other required tasks&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Targets&lt;/strong&gt;: Displays real-time visualizations of key activity and impact indicators&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reports​&lt;/strong&gt;: A detailed history of all forms submitted by CHWs and other staff&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Messages​&lt;/strong&gt;: A place for community-based staff to send and exchange messages&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;the-menu-drawer&#34;&gt;The Menu Drawer&lt;/h2&gt;
&lt;figure class=&#34;right col-6 col-lg-3&#34;&gt;&lt;a href=&#34;menu-drawer.png&#34;&gt;
    &lt;img src=&#34;menu-drawer.png&#34;/&gt; &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Tap the menu icon in the upper right corner of the header to access other pages, edit personal settings, view sync status and more.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Admin Console&lt;/strong&gt;: Change advanced app settings (only admin users will see this)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Guided Tour&lt;/strong&gt;: Review new features and important tips&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;About&lt;/strong&gt;: View your app version and other detailed database information&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;User Settings&lt;/strong&gt;: Update basic user information like email, phone number, and password&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Report Bug&lt;/strong&gt;: Let us know if something isn’t working or you encounter errors&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Log Out&lt;/strong&gt;: Sign out of the app&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;sync-status&#34;&gt;Sync Status&lt;/h2&gt;
&lt;figure class=&#34;right col-6 col-lg-3&#34;&gt;&lt;a href=&#34;sync-status.png&#34;&gt;
    &lt;img src=&#34;sync-status.png&#34;/&gt; &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;At the bottom of the menu is a notification which provides important about sync status. It lets you know whether reports are being submitted.&lt;/p&gt;
&lt;p&gt;If the sync status is green and says “All reports synced,” your reports have been sent. This means you have successfully uploaded all of your data to the server. However, it doesn’t necessarily mean you have downloaded all of the most recent data from the server.&lt;/p&gt;
&lt;p&gt;If the indicator is red, it means there are still reports waiting to send. This means you have not successfully uploaded all of your  data to the server. You should check your internet and data connection.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: OpenMRS</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/features/integrations/openmrs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/features/integrations/openmrs/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Apps: RapidPro</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/features/integrations/rapidpro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/features/integrations/rapidpro/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Apps: Contact and User Management - Part 2</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/tutorials/contact-and-users-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/tutorials/contact-and-users-2/</guid>
      <description>
        
        
        &lt;h2 id=&#34;purpose-of-the-tutorial&#34;&gt;Purpose of the tutorial&lt;/h2&gt;
&lt;p&gt;In this tutorial you will learn how to create and edit contacts and their associated users in the CHT application using medic-conf. If you haven&amp;rsquo;t already, have a look at &lt;a href=&#34;creating-and-managing-users-and-contacts.md&#34;&gt;part 1&lt;/a&gt; of this tutorial for a useful overview of key concepts.&lt;/p&gt;
&lt;h2 id=&#34;brief-overview-of-key-concepts&#34;&gt;Brief overview of key concepts&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/medic/medic-conf&#34;&gt;&lt;strong&gt;medic-conf&lt;/strong&gt;&lt;/a&gt; is a command-line interface tool to manage and configure your apps built using the Core Framework of the Community Health Toolkit.&lt;/p&gt;
&lt;p&gt;See more &lt;a href=&#34;creating-and-managing-users-and-contacts.md#brief-overview-of-key-concepts&#34;&gt;key concepts&lt;/a&gt; in part 1 of this tutorial.&lt;/p&gt;
&lt;h2 id=&#34;required-resources&#34;&gt;Required resources&lt;/h2&gt;
&lt;p&gt;You should have a functioning CHT instance and have medic-conf installed locally. Read &lt;a href=&#34;setting_up_local_configuration_environment.md&#34;&gt;How to set up a CHT local configuration environment&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;implementation-steps&#34;&gt;Implementation steps&lt;/h2&gt;
&lt;p&gt;In these steps you are going to create a Health Facility, CHW areas, primary contacts for the CHW areas, and their associated users.&lt;/p&gt;
&lt;h3 id=&#34;1-create-health-facilities-using-medic-confs-csv-to-docs-and-upload-docs-features&#34;&gt;1. Create Health Facilities (using medic-conf&amp;rsquo;s csv-to-docs and upload-docs features)&lt;/h3&gt;
&lt;p&gt;To create contacts and their associated users with medic-conf, you will need to create a CSV file with the information of the contacts and the users that you would like to create. The name of the file determines the type of doc created for rows contained in the file.&lt;/p&gt;
&lt;p&gt;For example, file named &lt;code&gt;place.district_hospital.csv&lt;/code&gt; adds the property &lt;code&gt;&amp;quot;type&amp;quot;:&amp;quot;district_hospital&amp;quot;&lt;/code&gt; and a file named &lt;code&gt;person.clinic.csv&lt;/code&gt; add the property &lt;code&gt;&amp;quot;type&amp;quot;:&amp;quot;person&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Create a CSV file named &lt;code&gt;place.district_hospital.csv&lt;/code&gt; and add the details of the health facilities you would like to create.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Nairobi South Facility&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Nairobi West Facility&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Nairobi East Facility&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Save this file to a folder name &lt;code&gt;csv&lt;/code&gt; in your project&amp;rsquo;s base directory.&lt;/p&gt;
&lt;p&gt;Open terminal or command line. &lt;code&gt;cd&lt;/code&gt; to your project&amp;rsquo;s base directory and then run the command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;medic-conf csv-to-docs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will convert rows of the CSV files from the &lt;code&gt;csv&lt;/code&gt; folder to JSON docs that are stored in a &lt;code&gt;json-docs&lt;/code&gt; folder.&lt;/p&gt;
&lt;p&gt;To upload the JSON docs to your local test instance, run the command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;medic-conf --url&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;https://&amp;lt;username&amp;gt;:&amp;lt;password&amp;gt;@localhost --accept-self-signed-certs upload-docs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Be sure to replace the values &lt;code&gt;&amp;lt;username&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;password&amp;gt;&lt;/code&gt; with the actual username and password of your test instance.&lt;/p&gt;
&lt;h3 id=&#34;2-create-chw-areas-chw-contacts-and-users-using-medic-confs-create-users-feature&#34;&gt;2. Create CHW Areas, CHW Contacts and Users (using medic-conf&amp;rsquo;s create-users feature)&lt;/h3&gt;
&lt;p&gt;Next you are going to create CHW areas for the health facilities you created in the step above along with the CHW contacts and users for these CHW areas.&lt;/p&gt;
&lt;p&gt;Create a CSV file named &lt;code&gt;users.csv&lt;/code&gt; and add the details of the Users, CHW contacts, and CHW Areas you would like to create. Save this file in the base project directory.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;username&lt;/th&gt;
&lt;th&gt;password&lt;/th&gt;
&lt;th&gt;roles&lt;/th&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;phone&lt;/th&gt;
&lt;th&gt;contact.name&lt;/th&gt;
&lt;th&gt;contact.phone&lt;/th&gt;
&lt;th&gt;contact.sex&lt;/th&gt;
&lt;th&gt;contact.age&lt;/th&gt;
&lt;th&gt;place.type&lt;/th&gt;
&lt;th&gt;place.name&lt;/th&gt;
&lt;th&gt;place.parent&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;mmutiso&lt;/td&gt;
&lt;td&gt;q3Z5-vH5&lt;/td&gt;
&lt;td&gt;district_admin&lt;/td&gt;
&lt;td&gt;Mary Mutiso&lt;/td&gt;
&lt;td&gt;0712345678&lt;/td&gt;
&lt;td&gt;Mary Mutiso&lt;/td&gt;
&lt;td&gt;0712345678&lt;/td&gt;
&lt;td&gt;Female&lt;/td&gt;
&lt;td&gt;36&lt;/td&gt;
&lt;td&gt;health_center&lt;/td&gt;
&lt;td&gt;Mary Mutiso&amp;rsquo;s Area&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;facility uuid&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The value &lt;code&gt;place.parent&lt;/code&gt; is the uuid of the Facility to which the CHW Area belongs to. You can get this value by selecting the Facility in the webapp and copying the last portion of the url.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;facility-uuid.png&#34; alt=&#34;facility uuid&#34; title=&#34;Facility uuid&#34;&gt;&lt;/p&gt;
&lt;p&gt;Run the command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;medic-conf --url&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;https://&amp;lt;username&amp;gt;:&amp;lt;password&amp;gt;@localhost --accept-self-signed-certs create-users
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will create the CHW area, the CHW contact, and the user that the CHW will use to log into the application.&lt;/p&gt;
&lt;h2 id=&#34;frequently-asked-questions&#34;&gt;Frequently Asked Questions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://forum.communityhealthtoolkit.org/t/can-one-person-belong-to-multiple-places-in-the-same-hierarchy/101&#34;&gt;Can one person belong to multiple places in the same hierarchy?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Forms</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/concepts/forms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/concepts/forms/</guid>
      <description>
        
        
        &lt;p&gt;Forms are a building block of all CHT apps. They are used when creating or editing contacts, and when completing a care guide or survey within the app. Forms are also used to interpret SMS interactions with the CHT.&lt;/p&gt;
&lt;p&gt;There are different types of forms:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.communityhealthtoolkit.org/beta/apps/reference/contact-forms/&#34;&gt;&lt;strong&gt;Contact Forms&lt;/strong&gt;&lt;/a&gt;: used to create and edit contacts. Defined as CHT-enhanced XForms.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.communityhealthtoolkit.org/beta/apps/reference/app-forms/&#34;&gt;&lt;strong&gt;App Forms&lt;/strong&gt;&lt;/a&gt;: serve as actions within the app, such as a task or an action. Defined as CHT-enhanced XForms.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.communityhealthtoolkit.org/beta/apps/reference/collect-forms/&#34;&gt;&lt;strong&gt;Collect Forms&lt;/strong&gt;&lt;/a&gt;: used to render forms in Medic Collect. Defined as ODK XForms and need a corresponding JSON form to receive data in CHT.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.communityhealthtoolkit.org/beta/apps/reference/json-forms/&#34;&gt;&lt;strong&gt;JSON Forms&lt;/strong&gt;&lt;/a&gt;: used for data coming from external channels such as SMS, or via interoperability with other tools. Defined according to a JavaScript Object Notation schema.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Forms that can be completed in the app are built using a CHT-enhanced version of &lt;a href=&#34;https://opendatakit.github.io/xforms-spec/&#34;&gt;ODK XForms&lt;/a&gt; notation &amp;ndash; a XML definition of the structure and format for a set of questions. Since writing raw XML can be tedious, the &lt;a href=&#34;http://xlsform.org/&#34;&gt;XLSForm standard&lt;/a&gt; is commonly used to define forms. The &lt;a href=&#34;https://github.com/medic/medic-conf&#34;&gt;medic-conf&lt;/a&gt; command line tool can be used to convert to the XForm format and include the form in a CHT application. The instructions on this site assume some knowledge of XLSForm.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Care Guides</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/concepts/care-guides/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/concepts/care-guides/</guid>
      <description>
        
        
        &lt;h2 id=&#34;care-guides&#34;&gt;Care Guides&lt;/h2&gt;
&lt;figure class=&#34;right col-6 col-lg-3&#34;&gt;&lt;a href=&#34;care-guides.png&#34;&gt;
    &lt;img src=&#34;care-guides.png&#34;/&gt; &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Forms are used to build “Care Guides” that take health workers through care protocols and provide decision support for their interactions with patients. App designers can use the basic form building functionality in a variety of ways.&lt;/p&gt;
&lt;p&gt;Care Guides also allow CHWs to register new families and people, assess a sick child, and enroll a new pregnancy into an antenatal care schedule. Care Guides can be located in many parts of your app, including the Tasks, People, and Reports tabs.&lt;/p&gt;
&lt;p&gt;Care Guides provided in the CHT&amp;rsquo;s Reference Applications can be configured for your app, or a new Care Guide can be written from scratch. Some configuration is probably necessary due to different local requirements, and government protocols.&lt;/p&gt;
&lt;h3 id=&#34;functionality&#34;&gt;Functionality&lt;/h3&gt;
&lt;figure class=&#34;right col-6 col-lg-3&#34;&gt;&lt;a href=&#34;functionality.png&#34;&gt;
    &lt;img src=&#34;functionality.png&#34;/&gt; &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Care Guides consists of questions grouped into pages. They are capable of presenting many different types of questions, skip logic, images, and videos. Validation rules can require certain questions to be answered or restrict answers to a specified type or range.&lt;/p&gt;
&lt;p&gt;It’s possible to reference previous information that was submitted about the person or household from within the care guide. The interaction can also conclude with a summary that includes assessment results, treatment recommendations, and referral info.&lt;/p&gt;
&lt;p&gt;Care Guides can include images for instructional purposes and can access a user’s camera to take a photo if needed.&lt;/p&gt;
&lt;h3 id=&#34;summary&#34;&gt;Summary&lt;/h3&gt;
&lt;figure class=&#34;right col-6 col-lg-3&#34;&gt;&lt;a href=&#34;summary.png&#34;&gt;
    &lt;img src=&#34;summary.png&#34;/&gt; &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;After all of the required questions have been answered, a summary page can be displayed.&lt;/p&gt;
&lt;p&gt;Here, health workers can review the information they entered, receive instructions for treatment, care, and referrals, and relay detailed education to the patient.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Please Note:&lt;/strong&gt; The form is not submitted until the user scrolls to the very end of the summary and clicks the “Submit” button.&lt;/p&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;figure class=&#34;right col-6 col-lg-3&#34;&gt;&lt;a href=&#34;examples.png&#34;&gt;
    &lt;img src=&#34;examples.png&#34;/&gt; &lt;/a&gt;
&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;While a health worker is going through the form during the care visit, you can include a family planning question only if the person who the form is about is a woman and not pregnant.&lt;/li&gt;
&lt;li&gt;You can include on-the-spot conversational prompts and advice for the CHW based on how they answer questions in the form. For instance, if a CHW answers “yes” to the question about a woman’s interest in family planning, text can automatically appear to provide information on her options.&lt;/li&gt;
&lt;li&gt;An image showing how to read a rapid test can be displayed within a form, to help health workers to correctly interpret their test results.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: App Forms</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/app-forms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/app-forms/</guid>
      <description>
        
        
        &lt;p&gt;App forms are used for care guides within the web app, whether accessed in browser or via the Android app. When a user completes an app form, the contents are saved in the database with the type &lt;code&gt;data_record&lt;/code&gt;. These docs are known in the app as &lt;a href=&#34;https://docs.communityhealthtoolkit.org/beta/apps/features/reports/&#34;&gt;Reports&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;App forms are defined by the following files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A XML form definition using a CHT-enhanced ODK XForm format&lt;/li&gt;
&lt;li&gt;A XLSForm form definition, easier to write and converts to the XForm (optional)&lt;/li&gt;
&lt;li&gt;Meta information in the &lt;code&gt;{form_name}.properties.json&lt;/code&gt; file (optional)&lt;/li&gt;
&lt;li&gt;Media files in the &lt;code&gt;{form_name}-media&lt;/code&gt; directory (optional)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;xform&#34;&gt;XForm&lt;/h2&gt;
&lt;p&gt;A CHT-enhanced version of the ODK XForm standard is supported.&lt;/p&gt;
&lt;p&gt;Data needed during the completion of the form (eg patient&amp;rsquo;s name, prior information) is passed into the &lt;code&gt;inputs&lt;/code&gt; group. Reports that have at least one of &lt;code&gt;place_id&lt;/code&gt;, &lt;code&gt;patient_id&lt;/code&gt;, and &lt;code&gt;patient_uuid&lt;/code&gt; at the top level will be associated with that contact.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See Also:&lt;/em&gt; &lt;a href=https://docs.communityhealthtoolkit.org/beta/apps/reference/contact-forms/#care-guides&gt;Passing contact data to care guides&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A typical form ends with a summary group (eg &lt;code&gt;group_summary&lt;/code&gt;, or &lt;code&gt;group_review&lt;/code&gt;) where important information is shown to the user before they submit the form.&lt;/p&gt;
&lt;p&gt;In between the &lt;code&gt;inputs&lt;/code&gt; and the closing group is the form flow - a collection of questions that can be grouped into pages. All data fields submitted with a form are stored, but often important information that will need to be accessed from the form is brought to the top level. To make sure forms are properly associated to a contact, make sure at least one of &lt;code&gt;place_id&lt;/code&gt;, &lt;code&gt;patient_id&lt;/code&gt;, and &lt;code&gt;patient_uuid&lt;/code&gt; is stored at the top level of the form.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See Also:&lt;/em&gt; &lt;a href=https://docs.communityhealthtoolkit.org/beta/design/apps/#content-and-layout&gt;Content and Layout&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;xlsform&#34;&gt;XLSForm&lt;/h2&gt;
&lt;p&gt;Since writing raw XML can be tedious, we suggest creating the forms using the &lt;a href=&#34;http://xlsform.org/&#34;&gt;XLSForm standard&lt;/a&gt;, and using the &lt;a href=&#34;https://github.com/medic/medic-conf&#34;&gt;medic-conf&lt;/a&gt; command line configurer tool to &lt;a href=&#34;#build&#34;&gt;convert them to XForm format&lt;/a&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;label&lt;/th&gt;
&lt;th&gt;relevant&lt;/th&gt;
&lt;th&gt;appearance&lt;/th&gt;
&lt;th&gt;calculate&lt;/th&gt;
&lt;th&gt;&amp;hellip;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;begin group&lt;/td&gt;
&lt;td&gt;inputs&lt;/td&gt;
&lt;td&gt;Inputs&lt;/td&gt;
&lt;td&gt;./source = &amp;lsquo;user&amp;rsquo;&lt;/td&gt;
&lt;td&gt;field-list&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hidden&lt;/td&gt;
&lt;td&gt;source&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hidden&lt;/td&gt;
&lt;td&gt;source_id&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;begin group&lt;/td&gt;
&lt;td&gt;contact&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;db:person&lt;/td&gt;
&lt;td&gt;_id&lt;/td&gt;
&lt;td&gt;Patient ID&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;db-object&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;patient_id&lt;/td&gt;
&lt;td&gt;Medic ID&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;hidden&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;Patient Name&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;hidden&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;end group&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;end group&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;calculate&lt;/td&gt;
&lt;td&gt;_id&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;../inputs/contact/_id&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;calculate&lt;/td&gt;
&lt;td&gt;patient_id&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;../inputs/contact/patient_id&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;calculate&lt;/td&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;../inputs/contact/name&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;hellip;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;begin group&lt;/td&gt;
&lt;td&gt;group_summary&lt;/td&gt;
&lt;td&gt;Summary&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;field-list summary&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;note&lt;/td&gt;
&lt;td&gt;r_patient_info&lt;/td&gt;
&lt;td&gt;**${patient_name}** ID: ${r_patient_id}&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;note&lt;/td&gt;
&lt;td&gt;r_followup&lt;/td&gt;
&lt;td&gt;Follow Up &amp;lt;i class=&amp;quot;fa fa-flag&amp;rdquo;&amp;gt;&amp;lt;/i&amp;gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;note&lt;/td&gt;
&lt;td&gt;r_followup_note&lt;/td&gt;
&lt;td&gt;${r_followup_instructions}&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;end group&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;cht-xform-widgets&#34;&gt;CHT XForm Widgets&lt;/h2&gt;
&lt;p&gt;Some XForm widgets have been added or modified for use in the app:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Bikram Sambat Datepicker&lt;/strong&gt;: Calendar widget using Bikram Sambat calendar. Used by default for appropriate languages.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Countdown Timer&lt;/strong&gt;: A visual timer widget that starts when tapped/clicked, and has an audible alert when done. To use it create a &lt;code&gt;string&lt;/code&gt; field with an &lt;code&gt;appearance&lt;/code&gt; set to &lt;code&gt;countdown-timer&lt;/code&gt;. The duration of the timer is the field&amp;rsquo;s value, which can be set in the XLSForm&amp;rsquo;s &lt;code&gt;default&lt;/code&gt; column. If this value is not set, the timer will be set to 60 seconds.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Contact Selector&lt;/strong&gt;: Select a contact, such as a person or place, and save their UUID in the report. To use create a field of type &lt;code&gt;db:{{contact_type}}&lt;/code&gt; (eg &lt;code&gt;db:person&lt;/code&gt;, &lt;code&gt;db:clinic&lt;/code&gt;) with appearance &lt;code&gt;db-object&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rapid Diagnostic Test capture&lt;/strong&gt;: Take a picture of a Rapid Diagnotistic Test and save it with the report. Works with &lt;a href=&#34;https://github.com/medic/rdt-capture/&#34;&gt;rdt-capture Android application&lt;/a&gt;. To use create a string field with appearance &lt;code&gt;mrdt-verify&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Simprints registration&lt;/strong&gt;: Register a patient with the Simprints biometric tool. To include in a form create a &lt;code&gt;string&lt;/code&gt; field with &lt;code&gt;appearance&lt;/code&gt; of &lt;code&gt;simprints-reg&lt;/code&gt;. Requires the Simprints app connected with hardware, or &lt;a href=&#34;https://github.com/medic/mocksimprints&#34;&gt;mock app&lt;/a&gt;. Demo only, not ready for production since API key is hardcoded.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The code for these widgets can be found in the &lt;a href=&#34;https://github.com/medic/medic/tree/master/webapp/src/js/enketo/widgets&#34;&gt;Medic repo&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;contact-selector-detailed&#34;&gt;Contact Selector Detailed&lt;/h3&gt;
&lt;p&gt;Using a contact selector allows you to get data off the selected contact(person or place) or search for an existing contact.&lt;/p&gt;
&lt;p&gt;When using with the appearance column set to &lt;code&gt;db-object&lt;/code&gt;. The contact selector will display as a search box allowing you to search for the type of contact specified when building the report. EX: &lt;code&gt;db-person&lt;/code&gt; will only search for contacts with type of person.&lt;/p&gt;
&lt;p&gt;When used as a field you can pull the current contact. This is can be used to link reports to a person or place where you started the form from. Getting the data of &lt;code&gt;_id&lt;/code&gt; or &lt;code&gt;patient_id&lt;/code&gt; and setting those to &lt;code&gt;patient_id&lt;/code&gt; or &lt;code&gt;patient_uuid&lt;/code&gt; on the final report will link that report so it displays on their contact summary page.&lt;/p&gt;
&lt;p&gt;Example of getting the data from the contact and assigning it to the fields neccessary to link the report.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;label&lt;/th&gt;
&lt;th&gt;relevant&lt;/th&gt;
&lt;th&gt;appearance&lt;/th&gt;
&lt;th&gt;calculate&lt;/th&gt;
&lt;th&gt;&amp;hellip;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;begin group&lt;/td&gt;
&lt;td&gt;contact&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;db:person&lt;/td&gt;
&lt;td&gt;_id&lt;/td&gt;
&lt;td&gt;Patient ID&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;db-object&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;patient_id&lt;/td&gt;
&lt;td&gt;Medic ID&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;hidden&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;Patient Name&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;hidden&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;end group&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;calculate&lt;/td&gt;
&lt;td&gt;patient_uuid&lt;/td&gt;
&lt;td&gt;Patient UUID&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;../contact/_id&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;calculate&lt;/td&gt;
&lt;td&gt;patient_id&lt;/td&gt;
&lt;td&gt;Patient ID&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;../contact/patient_id&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;cht-xpath-functions&#34;&gt;CHT XPath Functions&lt;/h2&gt;
&lt;h3 id=&#34;difference-in-months&#34;&gt;&lt;code&gt;difference-in-months&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Calculates the number of whole calendar months between two dates. This is often used when determining a child&amp;rsquo;s age for immunizations or assessments.&lt;/p&gt;
&lt;h3 id=&#34;z-score&#34;&gt;&lt;code&gt;z-score&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;In Enketo forms you have access to an XPath function to calculate the z-score value for a patient.&lt;/p&gt;
&lt;h2 id=&#34;properties&#34;&gt;Properties&lt;/h2&gt;
&lt;p&gt;The meta information in the &lt;code&gt;{form_name}.properties.json&lt;/code&gt; file defines the form&amp;rsquo;s title and icon, as well as when and where the form should be available.&lt;/p&gt;
&lt;h3 id=&#34;formsappform_namepropertiesjson&#34;&gt;&lt;code&gt;forms/app/{form_name}.properties.json&lt;/code&gt;&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;property&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;th&gt;required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;title&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The form&amp;rsquo;s title seen in the app. Uses a localization array using the 2-letter code, not the translation keys discussed in the &lt;a href=&#34;#localization&#34;&gt;Localization section&lt;/a&gt;.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;icon&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Icon associated with the form. The value is the image&amp;rsquo;s key in the &lt;code&gt;resources.json&lt;/code&gt; file, as described in the &lt;a href=&#34;#icons&#34;&gt;Icons section&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;context&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The context defines when and where the form should be available in the app&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;context.person&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Boolean determining if the form can be seen in the Action list for a person&amp;rsquo;s profile. This is still subject to the &lt;code&gt;expression&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;context.place&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Boolean determining if the form can be seen in the Action list for a person&amp;rsquo;s profile. This is still subject to the &lt;code&gt;expression&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;context.expression&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A JavaScript expression which is evaluated when a contact profile or the reports tab is viewed. If the expression evaluates to true, the form will be listed as an available action. The inputs &lt;code&gt;contact&lt;/code&gt;, &lt;code&gt;user&lt;/code&gt;, and &lt;code&gt;summary&lt;/code&gt; are available. By default, forms are not shown on the reports tab, use &lt;code&gt;&amp;quot;expression&amp;quot;: &amp;quot;!contact&amp;quot;&lt;/code&gt; to show the form on the Reports tab since there is no contact for this scenario.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;code-sample&#34;&gt;Code sample&lt;/h3&gt;
&lt;p&gt;In this sample properties file, the associated form would only show on a person&amp;rsquo;s page, and only if their sex is unspecified or female and they are between 10 and 65 years old:&lt;/p&gt;
&lt;h4 id=&#34;formsapppregnancypropertiesjson&#34;&gt;&lt;code&gt;forms/app/pregnancy.properties.json&lt;/code&gt;&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;locale&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;content&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;New Pregnancy&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;locale&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;hi&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;content&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;नई गर्भावस्था&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;icon&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;pregnancy-1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;context&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;person&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;place&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;expression&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;contact.type === &amp;#39;person&amp;#39; &amp;amp;&amp;amp; (!contact.sex || contact.sex === &amp;#39;female&amp;#39;) &amp;amp;&amp;amp; (!contact.date_of_birth || (ageInYears(contact) &amp;gt;= 10 &amp;amp;&amp;amp; ageInYears(contact) &amp;lt; 65))&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;build&#34;&gt;Build&lt;/h2&gt;
&lt;p&gt;Convert and build the app forms into your application using the &lt;code&gt;convert-app-forms&lt;/code&gt; and &lt;code&gt;upload-app-forms&lt;/code&gt; actions in &lt;code&gt;medic-conf&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;medic-conf --local convert-app-forms upload-app-forms
&lt;/code&gt;&lt;/pre&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Collect Forms</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/collect-forms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/collect-forms/</guid>
      <description>
        
        
        &lt;p&gt;ODK XForms are used to render forms in the Medic Collect Android app. These forms cannot use any Medic-specific XForm notations. All Medic Collect forms are processed as SMS (even when submitted over a wifi) therefore a corresponding JSON form with matching fields is used to interpret the incoming report.&lt;/p&gt;
&lt;p&gt;Collect forms must be in the &lt;code&gt;forms/collect&lt;/code&gt; folder to be processed by &lt;a href=&#34;https://github.com/medic/medic-conf&#34;&gt;&lt;code&gt;medic-conf&lt;/code&gt;&lt;/a&gt;&amp;lsquo;s &lt;code&gt;convert-collect-forms&lt;/code&gt; and &lt;code&gt;upload-collect-forms&lt;/code&gt; actions. Once uploaded to the server, they can be downloaded by the Medic Collect app. These forms can also be included in Medic Collect builds for users without a data connection to get forms.&lt;/p&gt;
&lt;p&gt;XForms require a couple minor changes to be compatible with Medic Collect so that they can properly be received by a Medic instance. The changes can be done either manually in the XForm&amp;rsquo;s XML, or automatically with XLSForm forms using &lt;code&gt;medic-conf&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;automatic-changes-with-xlsforms&#34;&gt;Automatic changes with XLSForms&lt;/h3&gt;
&lt;p&gt;If using a &lt;a href=&#34;http://xlsform.org/&#34;&gt;XLSForm&lt;/a&gt; and using &lt;a href=&#34;https://github.com/medic/medic-conf&#34;&gt;&lt;code&gt;medic-conf&lt;/code&gt;&lt;/a&gt; to convert to XForm, the necessary fields will be automatically added to the resulting XForm. You can override the default prefix and separator by declaring &lt;code&gt;sms_keyword&lt;/code&gt; and &lt;code&gt;sms_seperator&lt;/code&gt; respectively in the Settings tab.&lt;/p&gt;
&lt;h3 id=&#34;manual-changes-in-xform&#34;&gt;Manual changes in XForm&lt;/h3&gt;
&lt;p&gt;Collect forms need &lt;code&gt;prefix&lt;/code&gt; and &lt;code&gt;delimiter&lt;/code&gt; values added to the XForm&amp;rsquo;s XML. This is done where the form ID is declared in the instance&amp;rsquo;s data model. For example, the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;instance&amp;gt;
   &amp;lt;data id=&amp;quot;myform&amp;quot; &amp;gt;
   ...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;becomes:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;instance&amp;gt;
   &amp;lt;data id=&amp;quot;myform&amp;quot; prefix=&amp;quot;J1!FORM_CODE!&amp;quot; delimiter=&amp;quot;#&amp;quot;&amp;gt;
   ...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note that &lt;code&gt;FORM_CODE&lt;/code&gt; should be replaced with the form code as defined in the JSON forms version of the form. If the form code is &lt;code&gt;ABCD&lt;/code&gt; the prefix value would be &lt;code&gt;J1!ABCD!&lt;/code&gt;, resulting in &lt;code&gt;prefix=&amp;quot;J1!ABCD!&amp;quot;&lt;/code&gt;. In case you are curious, the &lt;code&gt;J1&lt;/code&gt; lets the Medic Mobile server know that version 1 of the JavaRosa parser should be used on the incoming SMS.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Contact Forms</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/contact-forms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/contact-forms/</guid>
      <description>
        
        
        &lt;p&gt;Contact forms are used for the creation and editing of each contact. The type associated to people is &lt;code&gt;person&lt;/code&gt;, and there are three types of places corresponding to levels in the app: &lt;code&gt;district_hospital&lt;/code&gt; &amp;gt; &lt;code&gt;health_center&lt;/code&gt; &amp;gt; &lt;code&gt;clinic&lt;/code&gt;. The display names for the place levels can be changed via &lt;a href=&#34;https://docs.communityhealthtoolkit.org/beta/apps/reference/localization/&#34;&gt;custom translations&lt;/a&gt;, and wherever they are defined in the contact forms. Each contact type has its own XForm where it defines the fields that it wants to store/edit for the contact:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- /forms/contact/person-create.xml
- /forms/contact/person-edit.xml
- /forms/contact/clinic-create.xml
- /forms/contact/clinic-edit.xml
- /forms/contact/health_center-create.xml
- /forms/contact/health_center-edit.xml
- /forms/contact/district_hospital-create.xml
- /forms/contact/district_hospital-edit.xml
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To create the above XForm files it is recommended to use XLSForms. Also, if the contact forms will be similar for all places, you can use a &lt;code&gt;PLACE_TYPE-create.xlsx&lt;/code&gt; file for creation, a &lt;code&gt;PLACE_TYPE-edit.xlsx&lt;/code&gt; for editing, and have &lt;code&gt;medic-conf&lt;/code&gt; generate the individual forms. For this you would also need &lt;code&gt;forms/contact/places.json&lt;/code&gt;, where you would define the place names. From the XLSForm you can refer to the place type with &lt;code&gt;PLACE_TYPE&lt;/code&gt;, and the place name with &lt;code&gt;PLACE_NAME&lt;/code&gt;. You can even use the place type for conditional behaviour in the form. The base files needed would therefore be:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- /forms/contact/person-create.xlsx
- /forms/contact/person-edit.xlsx
- /forms/contact/PLACE_TYPE-create.xlsx
- /forms/contact/PLACE_TYPE-edit.xlsx
- /forms/contact/places.json
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here is an example of a &lt;code&gt;places.json&lt;/code&gt; files:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
  &amp;quot;clinic&amp;quot;: &amp;quot;Village Clinic&amp;quot;,
  &amp;quot;health_center&amp;quot;: &amp;quot;Health Center&amp;quot;,
  &amp;quot;district_hospital&amp;quot;: &amp;quot;District Hospital&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Convert and build the contact forms into your application using the &lt;code&gt;convert-contact-forms&lt;/code&gt; and &lt;code&gt;upload-contact-forms&lt;/code&gt; actions in &lt;code&gt;medic-conf&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;medic-conf --local convert-contact-forms upload-contact-form&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Contact Pages</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/contact-page/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/contact-page/</guid>
      <description>
        
        
        &lt;p&gt;Contact profile pages display basic information about the contact along with their history and upcoming tasks.
A contact&amp;rsquo;s profile page is defined by the &lt;a href=&#34;#contact-summary&#34;&gt;Fields&lt;/a&gt;, &lt;a href=&#34;#condition-cards&#34;&gt;Cards&lt;/a&gt;, and &lt;a href=&#34;#care-guides&#34;&gt;Care Guides&lt;/a&gt; available.&lt;/p&gt;
&lt;h2 id=&#34;contact-summary&#34;&gt;Contact Summary&lt;/h2&gt;
&lt;p&gt;Each field that can be shown on a contact&amp;rsquo;s profile is defined as an object in the &lt;code&gt;fields&lt;/code&gt; array of &lt;code&gt;contact-summary.templated.js&lt;/code&gt;. The properties for each object determine how and when the field is shown.&lt;/p&gt;
&lt;h3 id=&#34;contact-summarytemplatedjs-fields&#34;&gt;&lt;code&gt;contact-summary.templated.js .fields[]&lt;/code&gt;&lt;/h3&gt;
&lt;!-- If you change this table, update the duplicate descriptions in ### Cards --&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;property&lt;/th&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;th&gt;required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;label&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A translation key which is shown with the field.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;icon&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The name of the icon to display beside this field, as defined through the Configuration &amp;gt; Icons page.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;value&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The value shown for the field.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The display filter to apply to the value, eg: &lt;code&gt;{ value: &#39;2005-10-09&#39;, filter: &#39;age&#39; }&lt;/code&gt; will render as &amp;ldquo;11 years&amp;rdquo;. Common filters are: &lt;code&gt;age&lt;/code&gt;, &lt;code&gt;phone&lt;/code&gt;, &lt;code&gt;weeksPregnant&lt;/code&gt;, &lt;code&gt;relativeDate&lt;/code&gt;, &lt;code&gt;relativeDay&lt;/code&gt;, &lt;code&gt;fullDate&lt;/code&gt;, &lt;code&gt;simpleDate&lt;/code&gt;, &lt;code&gt;simpleDateTime&lt;/code&gt;, &lt;code&gt;lineage&lt;/code&gt;, &lt;code&gt;resourceIcon&lt;/code&gt;, &lt;code&gt;translate&lt;/code&gt;. For the complete list of filters, and more details on what each does, check out the code in &lt;a href=&#34;https://github.com/medic/medic/tree/master/webapp/src/js/filters&#34;&gt;&lt;code&gt;medic/webapp/src/js/filters&lt;/code&gt; dir&lt;/a&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;width&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;integer&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The horizontal space for the field. Common values are 12 for full width, 6 for half width, or 3 for quarter width. Default 12.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;translate&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Whether or not to translate the &lt;code&gt;value&lt;/code&gt;. Defaults to false.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;context&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;object&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;When &lt;code&gt;translate: true&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; uses &lt;a href=&#34;https://angular-translate.github.io/docs/#/guide/06_variable-replacement&#34;&gt;translation variables&lt;/a&gt;, this value should provide the translation variables.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;appliesIf&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;function()&lt;/code&gt; or &lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Return true if the field should be shown.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;appliesToType&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string[]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Filters the contacts for which &lt;code&gt;appliesIf&lt;/code&gt; will be evaluated. For example, &lt;code&gt;[&#39;person&#39;]&lt;/code&gt; or &lt;code&gt;[&#39;clinic&#39;, &#39;health_center&#39;]&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;!-- TODO: See [How to configure profile pages]() for an example.  --&gt;
&lt;h2 id=&#34;condition-cards&#34;&gt;Condition Cards&lt;/h2&gt;
&lt;p&gt;Each condition card is defined as a card object in the &lt;code&gt;cards&lt;/code&gt; array of &lt;code&gt;contact-summary.templated.js&lt;/code&gt;. The properties for each object determine how and when the card and its fields are shown.&lt;/p&gt;
&lt;h3 id=&#34;contact-summarytemplatedjs-cards&#34;&gt;&lt;code&gt;contact-summary.templated.js .cards[]&lt;/code&gt;&lt;/h3&gt;
&lt;!-- If you change the field data in this table, update the duplicate descriptions in ### Fields --&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;property&lt;/th&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;th&gt;required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;label&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;translation key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Label on top of card.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;appliesToType&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string[]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A filter, so &lt;code&gt;appliesIf&lt;/code&gt; is called only if the contact&amp;rsquo;s type matches one or more of the elements. For example, &lt;code&gt;[&#39;person&#39;]&lt;/code&gt;. Please, note that &lt;code&gt;[&#39;report&#39;]&lt;/code&gt; is also allowed to create a report card. But, you cannot use it in conjunction with a contact&amp;rsquo;s type.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;appliesIf&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;function()&lt;/code&gt; or &lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Return true if the field should be shown.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;modifyContext&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;function(context)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Used to modify or add data which is passed as input to forms filled from the contact page.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Array[]&lt;/code&gt; of &lt;a href=&#34;#fields&#34;&gt;fields&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;The content of the card.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields[n].appliesIf&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;boolean&lt;/code&gt; or &lt;code&gt;function(report)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Same as Fields.appliesIf above.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields[n].label&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt; or &lt;code&gt;function(report)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Label shown with the field.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields[n].icon&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt; or &lt;code&gt;function(report)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The name of the icon to display beside this field, as defined through the Configuration &amp;gt; Icons page.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields[n].value&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt; or &lt;code&gt;function(report)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The value shown for the field.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields[n].filter&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt; or &lt;code&gt;function(report)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The display filter to apply to the value, eg: &lt;code&gt;{ value: &#39;2005-10-09&#39;, filter: &#39;age&#39; }&lt;/code&gt; will render as &amp;ldquo;11 years&amp;rdquo;. Common filters are: &lt;code&gt;age&lt;/code&gt;, &lt;code&gt;phone&lt;/code&gt;, &lt;code&gt;weeksPregnant&lt;/code&gt;, &lt;code&gt;relativeDate&lt;/code&gt;, &lt;code&gt;relativeDay&lt;/code&gt;, &lt;code&gt;fullDate&lt;/code&gt;, &lt;code&gt;simpleDate&lt;/code&gt;, &lt;code&gt;simpleDateTime&lt;/code&gt;, &lt;code&gt;lineage&lt;/code&gt;, &lt;code&gt;resourceIcon&lt;/code&gt;, &lt;code&gt;translate&lt;/code&gt;. For the complete list of filters, and more details on what each does, check out the code in &lt;a href=&#34;https://github.com/medic/medic/tree/master/webapp/src/js/filters&#34;&gt;&lt;code&gt;medic/webapp/src/js/filters&lt;/code&gt; dir&lt;/a&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields[n].width&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;integer&lt;/code&gt; or &lt;code&gt;function(report)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The horizontal space for the field. Common values are 12 for full width, 6 for half width, or 3 for quarter width. Default 12.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields[n].translate&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;boolean&lt;/code&gt; or &lt;code&gt;function(report)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Whether or not to translate the &lt;code&gt;value&lt;/code&gt;. Defaults to false.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields[n].context&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;object&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;When &lt;code&gt;translate: true&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; uses &lt;a href=&#34;https://angular-translate.github.io/docs/#/guide/06_variable-replacement&#34;&gt;translation variables&lt;/a&gt;, this value should provide the translation variables. Only supports properties &lt;code&gt;count&lt;/code&gt; and &lt;code&gt;total&lt;/code&gt; on cards.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;!-- TODO: See [How to configure profile pages]() for an example. --&gt;
&lt;h2 id=&#34;care-guides&#34;&gt;Care Guides&lt;/h2&gt;
&lt;p&gt;Each care guide accessible from a contact profile is defined as an &lt;a href=&#34;https://docs.communityhealthtoolkit.org/beta/apps/reference/app-forms/&#34;&gt;App Form&lt;/a&gt;. Context information can be provided to forms via the &lt;code&gt;context&lt;/code&gt; object of &lt;code&gt;contact-summary.templated.js&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To show an App Form on a contact&amp;rsquo;s profile, the form&amp;rsquo;s &lt;code&gt;expression&lt;/code&gt; field in its properties file must evaluate to true for that contact. The context infomation from the profile is accessible as the variable &lt;code&gt;summary&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The context data is also available directly within the app forms&amp;rsquo; XForm calculations, as &lt;code&gt;instance(&#39;contact-summary&#39;)/context/${variable}&lt;/code&gt;. For instance if &lt;code&gt;context.is_pregnant&lt;/code&gt; is used in the contact summary, it can be accessed in an XForm field&amp;rsquo;s calculation as &lt;code&gt;instance(&#39;contact-summary&#39;)/context/is_pregnant&lt;/code&gt;. Note that these fields are not available when editing a previously completed form, or when accessing the form from outside of the profile page.&lt;/p&gt;
&lt;!-- TODO: See [How to configure profile pages]() and [How to build app forms]() for examples and more information. --&gt;
&lt;h2 id=&#34;code-samples&#34;&gt;Code samples&lt;/h2&gt;
&lt;p&gt;The following samples show how fields, cards, and care guide context comes together in the &lt;code&gt;contact-summary.templated.js&lt;/code&gt; file.&lt;/p&gt;
&lt;h3 id=&#34;contact-summarytemplatedjs&#34;&gt;&lt;code&gt;contact-summary.templated.js&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;module&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;use_cases&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;anc&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;isCoveredByUseCaseInLineage&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;lineage&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;anc&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;pnc&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;isCoveredByUseCaseInLineage&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;lineage&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;pnc&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;

  &lt;span style=&#34;color:#000&#34;&gt;fields&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;appliesToType&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;person&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;  &lt;span style=&#34;color:#000&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;patient_id&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;patient_id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;width&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;appliesToType&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;person&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;  &lt;span style=&#34;color:#000&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;contact.age&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;date_of_birth&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;width&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;filter&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;age&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;appliesToType&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;person&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;  &lt;span style=&#34;color:#000&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;contact.parent&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;lineage&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;filter&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;lineage&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;appliesToType&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;!person&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;appliesIf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;parent&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;lineage&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;];&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;contact.parent&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;lineage&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;filter&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;lineage&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;

  &lt;span style=&#34;color:#000&#34;&gt;cards&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;contact.profile.pregnancy&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;appliesToType&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;report&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;appliesIf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;extras&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;isActivePregnancy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;fields&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
          &lt;span style=&#34;color:#000&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;contact.profile.edd&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#000&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fields&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;edd_8601&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
          &lt;span style=&#34;color:#000&#34;&gt;filter&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;relativeDay&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#000&#34;&gt;width&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;12&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
          &lt;span style=&#34;color:#000&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;contact.profile.visit&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#000&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;contact.profile.visits.of&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#000&#34;&gt;translate&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#000&#34;&gt;count&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;extras&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;getSubsequentVisits&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;length&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
            &lt;span style=&#34;color:#000&#34;&gt;total&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
          &lt;span style=&#34;color:#000&#34;&gt;width&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
          &lt;span style=&#34;color:#000&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;contact.profile.risk.title&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#000&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;extras&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;isHighRiskPregnancy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;high&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;normal&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
          &lt;span style=&#34;color:#000&#34;&gt;translate&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#000&#34;&gt;width&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#000&#34;&gt;icon&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;extras&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;isHighRiskPregnancy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;risk&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;modifyContext&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ctx&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;ctx&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pregnant&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// don&amp;#39;t show Create Pregnancy Report button
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;contact-summary-extrasjs&#34;&gt;&lt;code&gt;contact-summary-extras.js&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;module&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;isActivePregnancy&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// ...
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;isCoveredByUseCaseInLineage&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;lineage&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;usecase&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// ...
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;isHighRiskPregnancy&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pregnancy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// ...
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;getSubsequentVisits&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// ...
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;build&#34;&gt;Build&lt;/h2&gt;
&lt;p&gt;To update the Contact profiles for an app, changes must be compiled into &lt;code&gt;app-settings&lt;/code&gt;, then uploaded.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;medic-conf --local compile-app-settings backup-app-settings upload-app-settings&lt;/code&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Aggregating Data for DHIS2</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/dhis2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/dhis2/</guid>
      <description>
        
        
        &lt;p&gt;&lt;em&gt;See Also:&lt;/em&gt; &lt;a href=https://docs.communityhealthtoolkit.org/beta/apps/features/integrations/dhis2/#&gt;DHIS2 Integration&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;app_settingsjs-dhisdatasets&#34;&gt;&lt;code&gt;app_settings.js .dhisDataSets[]&lt;/code&gt;&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;id&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The data set id from DHIS2 with which to integrate&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;translation_key&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The translation key of the DHIS2 data set name to be displayed&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;code-samples&#34;&gt;Code samples&lt;/h2&gt;
&lt;p&gt;Configure the &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;translation_key&lt;/code&gt; of the DHIS2 data set. The &lt;code&gt;id&lt;/code&gt; corresponds to the &lt;code&gt;id&lt;/code&gt; of the data set in the DHIS2 instance you want to integrate with. The &lt;code&gt;translation_key&lt;/code&gt; corresponds to the name of the DHIS2 data set as it appears in the dropdown in the App Management app.&lt;/p&gt;
&lt;h3 id=&#34;app_settingsjs&#34;&gt;&lt;code&gt;app_settings.js&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;dhisDataSets&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;VMuFODsyWaO&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;translation_key&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;dhis.dataset.moh515&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;,&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Apps: Functions</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/functions/</guid>
      <description>
        
        
        &lt;h2 id=&#34;utils&#34;&gt;Utils&lt;/h2&gt;
&lt;p&gt;Utility functions in the Core Framework can make common tasks much easier. These are available only for Tasks and Targets. To use the function call &lt;code&gt;Utils.&amp;lt;function-name&amp;gt;(&amp;lt;params&amp;gt;)&lt;/code&gt;, for example &lt;code&gt;Utils.addDate(report.reported_date, 10)&lt;/code&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;isTimely(date, event)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Returns true if the given date is after the start date and before the end date of the event.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;addDate(date, days)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Returns a new Date set to midnight the given number of days after the given date. If no date is given the date defaults to today.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;getLmpDate(doc)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Attempts to work out the LMP from the given doc. If no LMP is given it defaults to four weeks before the reported_date.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;getSchedule(name)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Returns the task schedule with the given name from the configuration.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;getMostRecentTimestamp(reports, form)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Returns the reported_date of the most recent of the reports with form ID matching the given form.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;getMostRecentReport(reports, form)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Like &lt;code&gt;getMostRecentTimestamp&lt;/code&gt; but returns the report, not just the reported_date.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;isFormSubmittedInWindow(reports, form, start, end)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Returns true if any of the given reports are for the given form and were reported after start and before end.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;isFirstReportNewer(firstReport, secondReport)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Returns true if the firstReport was reported before the secondReport.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;isDateValid(date)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Returns true if the given date is a validate JavaScript Date.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;now()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Returns the current Date.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;MS_IN_DAY&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A constant for the number of milliseconds in a day.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;
Please open &lt;a href=&#34;https://github.com/medic/cht-core/issues/new&#34;&gt;an issue&lt;/a&gt; if you&amp;rsquo;d like other functions included.
&lt;/div&gt;

&lt;h2 id=&#34;nools-extras&#34;&gt;Nools Extras&lt;/h2&gt;
&lt;p&gt;Helper variables and functions can be defined in &lt;code&gt;nools-extras.js&lt;/code&gt;, which is shared by both &lt;code&gt;tasks.js&lt;/code&gt; and &lt;code&gt;targets.js&lt;/code&gt;. The following are global variables that can be used:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Variable&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;c.contact&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The contact&amp;rsquo;s doc. All contacts have &lt;code&gt;type&lt;/code&gt; of either &lt;code&gt;person&lt;/code&gt; or &lt;code&gt;place&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;c.reports&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An array of all the reports submitted about the contact.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;console&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Useful for outputting &lt;em&gt;debugging&lt;/em&gt; statements. Should not be used in production code.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Utils&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Useful functions across projects are available, and describe in the Utils section.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;contact-summary-extras&#34;&gt;Contact Summary Extras&lt;/h2&gt;
&lt;p&gt;Helper variables and functions for the contact summary can be defined in &lt;code&gt;contact-summary-extras.js&lt;/code&gt;. There are several variables available to inspect to generate the summary information:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Variable&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;contact&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The currently selected contact. This has minimal stubs for the &lt;code&gt;contact.parent&lt;/code&gt;, so if you want to refer to a property on the parent use &lt;code&gt;lineage&lt;/code&gt; below.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;reports&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An array of reports for the contact.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;lineage&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An array of the contact&amp;rsquo;s parents (2.13+), eg &lt;code&gt;lineage[0]&lt;/code&gt; is the parent, &lt;code&gt;lineage[1]&lt;/code&gt; is the grandparent, etc. Each lineage entry has full information for the contact, so you can use &lt;code&gt;lineage[1].contact.phone&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Graphics</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/graphics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/graphics/</guid>
      <description>
        
        
        &lt;h2 id=&#34;icons&#34;&gt;Icons&lt;/h2&gt;
&lt;p&gt;Apps can be customized by defining the icons to use for tasks, targets, and contacts.&lt;/p&gt;
&lt;p&gt;Add icons to the &lt;code&gt;resources&lt;/code&gt; folder, and include them by name in the resources.json file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
    &amp;quot;icon-risk&amp;quot;: &amp;quot;icon-healthcare-warning@2x.png&amp;quot;,
    &amp;quot;icon-treatment&amp;quot;: &amp;quot;icon-healthcare-medicine@2x.png&amp;quot;,
    &amp;quot;medic-clinic&amp;quot;: &amp;quot;medic-family.svg&amp;quot;,
    &amp;quot;medic-district-hospital&amp;quot;: &amp;quot;medic-health-center.svg&amp;quot;,
    &amp;quot;medic-health-center&amp;quot;: &amp;quot;medic-chw-area.svg&amp;quot;,
    &amp;quot;medic-person&amp;quot;: &amp;quot;medic-person.svg&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;See Also:&lt;/em&gt; &lt;a href=https://docs.communityhealthtoolkit.org/beta/design/icons/#&gt;Icon Library&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;build&#34;&gt;Build&lt;/h3&gt;
&lt;p&gt;Build the icons into the application with the &lt;code&gt;upload-resources&lt;/code&gt; action in &lt;code&gt;medic-conf&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;medic-conf --local upload-resources&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;branding&#34;&gt;Branding&lt;/h2&gt;
&lt;p&gt;The site title, favicon, and header logo are configurable. The location to change these are in the Admin console on the images page under the branding tab.&lt;/p&gt;
&lt;h2 id=&#34;partner-logos&#34;&gt;Partner logos&lt;/h2&gt;
&lt;p&gt;Adding your partner logos can be done in the Admin console on the images page under the Partners tab. This will add partner logos on the about page.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Hierarchy</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/hierarchy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/hierarchy/</guid>
      <description>
        
        
        &lt;p&gt;From 3.7.0 it is possible to configure what types of places and people are available by modifying the &lt;code&gt;contact_types&lt;/code&gt; array in the app settings. Each type has the following properties.&lt;/p&gt;
&lt;h3 id=&#34;app_settingsjson-contact_types&#34;&gt;&lt;code&gt;app_settings.json .contact_types[]&lt;/code&gt;&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;id&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;String identifier for the type. At times this will be used to sort the contacts in the UI so it is recommended to using a number prefix with gaps between numbers, eg: &lt;code&gt;10-district&lt;/code&gt;, &lt;code&gt;20-region&lt;/code&gt;, etc.&lt;/td&gt;
&lt;td&gt;Yes.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;name_key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The translation key used for the title for the contact profile.&lt;/td&gt;
&lt;td&gt;No, defaults to &amp;lsquo;contact.profile&amp;rsquo;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;group_key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The translation key used for the title of a list of contacts of this type.&lt;/td&gt;
&lt;td&gt;Yes.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;create_key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The translation key used on the button for creating new contacts of this type.&lt;/td&gt;
&lt;td&gt;Yes.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;edit_key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The translation key used on the button for editing contacts of this type.&lt;/td&gt;
&lt;td&gt;Yes.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;primary_contact_key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The translation key used to identify a person as the primary contact of contacts of this type.&lt;/td&gt;
&lt;td&gt;No, defaults to &amp;lsquo;Primary contact&amp;rsquo;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;parents&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An array of strings of IDs of parent types. If more than one then this type can appear in different places in the hierarchy. If more than one type lists the same type as a parent then a user will get a dropdown of places to create. If no parents then contacts of this type will be at the top of the hierarchy and cannot be added as a child of any contact.&lt;/td&gt;
&lt;td&gt;No, defaults to no parents.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;icon&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The string ID for the icon to show beside contacts of this type.&lt;/td&gt;
&lt;td&gt;Yes.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;create_form&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The string ID for the xform used to create contacts of this type.&lt;/td&gt;
&lt;td&gt;Yes.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;edit_form&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The string ID for the xform used to edit contacts of this type.&lt;/td&gt;
&lt;td&gt;No, defaults to the create_form.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;count_visits&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Whether or not to show a count of visits for contacts of this type. Requires UHC to be enabled.&lt;/td&gt;
&lt;td&gt;No, defaults to &lt;code&gt;false&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;person&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Whether this is a person type or a place type.&lt;/td&gt;
&lt;td&gt;No, defaults to &lt;code&gt;false&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: JSON Forms</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/json-forms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/json-forms/</guid>
      <description>
        
        
        &lt;p&gt;JSON Forms are used for parsing reports from formatted SMS, SIM applications, and Medic Collect. JSON form definitions are also used for interoperability with third-party systems. Each form is defined as an JSON form object according to the following schema.&lt;/p&gt;
&lt;h3 id=&#34;app_settingsjson-forms&#34;&gt;&lt;code&gt;app_settings.json .forms[]&lt;/code&gt;&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;property&lt;/th&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;th&gt;required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;meta&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;Information about the report.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;meta.code&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;The unique form identifier, which will be sent with all reports of this form. Must be the same as the form&amp;rsquo;s key.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;meta.icon&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;Name of the icon resource shown in the app.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;meta.translation_key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;Name of the form shown in the app.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;Collection of field objects included in the form.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields.${field}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;Field that is part of the form.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields.${field}.type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;Data type of field:&lt;br&gt;  - &lt;code&gt;&amp;quot;integer&amp;quot;&lt;/code&gt;: a whole number&lt;br&gt; - &lt;code&gt;&amp;quot;string&amp;quot;&lt;/code&gt;: any collection of characters&lt;br&gt; - &lt;code&gt;&amp;quot;date&amp;quot;&lt;/code&gt;: a date in the format &lt;code&gt;YYYY-mm-dd&lt;/code&gt;, for example &amp;ldquo;2019-01-28&amp;quot;&lt;br&gt; - &lt;code&gt;&amp;quot;boolean&amp;quot;&lt;/code&gt;: true or false, represented by the digit &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; respectively (native JSON booleans are also supported if sending via JSON)&lt;br&gt; - &lt;code&gt;&amp;quot;custom&amp;quot;&lt;/code&gt;: Only possible for JSON forms that are passed as actual JSON (not an SMS that gets parsed into JSON). Effectively any non-specific data structure, which will be taken without validation.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields.${field}.labels&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields.${field}.labels.short&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string, object with &lt;code&gt;translation_key&lt;/code&gt; field, or translation object&lt;/td&gt;
&lt;td&gt;Label shown for field in the app, seen when report is viewed in Reports tab. If missing, label will default to a translation key of &lt;code&gt;report.${form_name}.${field_name}&lt;/code&gt; (eg &lt;code&gt;report.f.patient_id&lt;/code&gt;) which can be translated in the app languages.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields.${field}.labels.tiny&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;Unique identifier within the form for this field. Used in form submission to bind values to fields. Not required for all submission formats.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields.${field}.position&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Zero based order of this field for incoming reports.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields.${field}.flags&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;Additional instructions that could be used by form renderers. For instance &lt;code&gt;{ &amp;quot;input_digits_only&amp;quot;: true }&lt;/code&gt; indicated to SIM applications to show the number keyboard. Obsolete.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields.${field}.length&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;array with two integers&lt;/td&gt;
&lt;td&gt;Inclusive range accepted for length of the field.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields.${field}.required&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;Determines if a report without this field is considered valid.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;public_form&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;Determines if reports will be accepted from phone numbers not associated to a contact. Set to false if you want to reject reports from unknown senders. Default: true.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;facility_reference&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;The form field whose value is to be used to match the incoming report to a contact&amp;rsquo;s &lt;code&gt;rc_code&lt;/code&gt;. Useful when reports are sent on behalf of a facility by unknown or various phone numbers. Requires the &lt;a href=&#34;transitions.md#available-transitions&#34;&gt;&lt;code&gt;update_clinics&lt;/code&gt; transition&lt;/a&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Localization</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/localization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/localization/</guid>
      <description>
        
        
        &lt;p&gt;Given that CHT apps are used around the world, the Core Framework was designed with localization in mind. The Core Framework itself is available in English, French, Hindi, Nepali, Spanish, Swahili, and Indonesian. In the &lt;code&gt;app_settings.json&lt;/code&gt; file the default language for the application is set, along with a separate default language for outgoing messages that are sent via SMS.&lt;/p&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;
Please open &lt;a href=&#34;https://github.com/medic/cht-core/issues/new&#34;&gt;an issue&lt;/a&gt; if you are interested in translating the app into a different language, as we can work together to make that language available to the community.
&lt;/div&gt;

&lt;h2 id=&#34;translations&#34;&gt;Translations&lt;/h2&gt;
&lt;p&gt;To modify some labels in the app add the key and modified label in a custom translations file in the &lt;code&gt;translations&lt;/code&gt; folder. All the properties files use the format &lt;code&gt;messages-{language-code}.properties&lt;/code&gt;, where the language code is the same 2-letter code used to identify the language in the application. For instance, for English, we would have a &lt;code&gt;translations/messages-en.properties&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;New elements in CHT apps, such as tasks, targets, profiles, and forms should be localized as well. These labels should be included in the same custom translations properties file. If a translation is missing for the user&amp;rsquo;s language it will use that of the default language.&lt;/p&gt;
&lt;p&gt;Here is an example, including both a modified label, and a new one:&lt;/p&gt;
&lt;h3 id=&#34;translationsmessages-language-codeproperties&#34;&gt;&lt;code&gt;translations/messages-{language-code}.properties&lt;/code&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;    [Application Text]
    contact.type.district_hospital = Community
    targets.assessments.title = Assessments Completed
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;forms&#34;&gt;Forms&lt;/h2&gt;
&lt;p&gt;Translations for XForms are defined within the forms themselves. The XLSForm notation is &lt;a href=&#34;http://xlsform.org/en/#multiple-language-support&#34;&gt;documented here&lt;/a&gt;, and would use the corresponding 2-character language codes.&lt;/p&gt;
&lt;h2 id=&#34;build&#34;&gt;Build&lt;/h2&gt;
&lt;p&gt;Custom translations from the properties files are added to the app with the &lt;code&gt;upload-custom-translations&lt;/code&gt; action.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;medic-conf --local upload-custom-translations&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Updated translations from forms need to be added with the actions to upload forms.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;medic-conf --local upload-contact-forms upload-app-forms&lt;/code&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Outbound push [beta]</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/outbound/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/outbound/</guid>
      <description>
        
        
        &lt;p&gt;&lt;em&gt;Outbound is only available in Medic 3.5.0 and above&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Outbound push allows configurers to have the creation or editing of CouchDB documents trigger outbound REST requests using the data in that document. For example, upon receiving a referral report you could send that referral to an external facility system that will manage and process that event.&lt;/p&gt;
&lt;p&gt;These triggers can apply to all document types (not just common types such as reports or contacts) and as such care should be taken to only send the documents you intend (see configuration of &lt;code&gt;relevant_to&lt;/code&gt; below).&lt;/p&gt;
&lt;p&gt;This feature is experimental, and may be replaced by some third party technology over time as we discover the feature-set we&amp;rsquo;re looking for.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;For outbound pushes to occur, you must &lt;a href=&#34;./transitions.md#Configurations&#34;&gt;enable the &lt;code&gt;mark_for_outbound&lt;/code&gt; transition in config&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;transitions&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;mark_for_outbound&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The rest of the configuration is against the &lt;code&gt;outbound&lt;/code&gt; configuration property, which allows you to configure as many outbound pushes as you like, keyed off a unique name:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;outbound&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;first config&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;relevant_to&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;destination&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{},&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;mapping&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{}&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;second config&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Each outbound push configuration contains the following properties: &lt;code&gt;relevant_to&lt;/code&gt;, &lt;code&gt;destination&lt;/code&gt; and &lt;code&gt;mapping&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;relevant_to&#34;&gt;relevant_to&lt;/h3&gt;
&lt;p&gt;An &amp;ldquo;expression&amp;rdquo; (some JS code that resolves to a truthy or falsy value) that determines whether this configuration is relevant to a document. The document is passed to the expression as &lt;code&gt;doc&lt;/code&gt;, and if relevant is fully hydrated before being passed (i.e. the attached contact, its parents etc are fully attached instead of just being stubs).&lt;/p&gt;
&lt;p&gt;Example: you want to send a referral to a facility&amp;rsquo;s EMR system when a CHW refers a patient:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;relevant_to&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;doc.type === &amp;#39;data_record&amp;#39; &amp;amp;&amp;amp; doc.form === &amp;#39;referral&amp;#39;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; all documents that Sentinel processes can be picked up by your configuration, so it&amp;rsquo;s important to correctly configure &lt;code&gt;relevant_to&lt;/code&gt;. Checking the document type as shown above is probably a good start.&lt;/p&gt;
&lt;h3 id=&#34;destination&#34;&gt;destination&lt;/h3&gt;
&lt;p&gt;A complex property that defines the details of the connection to the external service. It currently supports several authentication types: basic authentication, HTTP authorization request header, and a custom authentication mode for Muso SIH.&lt;/p&gt;
&lt;p&gt;Basic auth example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;destination&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;base_url&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;https://example.com&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;auth&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;basic&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;username&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;admin&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;password_key&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;example.com&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/api/v1/referral&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here &lt;code&gt;password_key&lt;/code&gt; is a key used to find the password in CouchDB&amp;rsquo;s node-based configuration. See Credentials section below.&lt;/p&gt;
&lt;p&gt;If you don&amp;rsquo;t provide an authentication parameter then the request will be sent without authentication.&lt;/p&gt;
&lt;p&gt;As of 3.9, the &lt;code&gt;header&lt;/code&gt; type is also supported, which sends authentication credentials via a HTTP request header: &lt;code&gt;Authorization: &#39;&amp;lt;value&amp;gt;&#39;&lt;/code&gt;. The value is set in the CouchDB configuration, and referred to by the &lt;code&gt;value_key&lt;/code&gt;, similarly to the &lt;code&gt;password_key&lt;/code&gt;. The value must match the credentials needed for the third party tool, and is generally formatted as &lt;code&gt;&amp;lt;type&amp;gt; &amp;lt;credentials&amp;gt;&lt;/code&gt;. For instance, to send data to RapidPro, the value in the configuration would be set to the complete RapidPro API Token: eg &lt;code&gt;Token 123456789abcdef&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Header auth example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;destination&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;base_url&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;https://example.com&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;auth&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;header&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Authorization&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;value_key&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;example.com&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/api/v1/referral&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;mapping&#34;&gt;mapping&lt;/h3&gt;
&lt;p&gt;A complex property that declares how the payload to be sent to the &lt;code&gt;destination&lt;/code&gt; should be created.&lt;/p&gt;
&lt;p&gt;Each key is a string &lt;a href=&#34;https://github.com/mariocasciaro/object-path#usage&#34;&gt;object path&lt;/a&gt; to a location in the payload, and each value is either:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a string object path to the location of the source data in the report being processed, where the value is required to exist&lt;/li&gt;
&lt;li&gt;an object with either a &lt;code&gt;path&lt;/code&gt; property that represents a string object path as above, or an &lt;code&gt;expr&lt;/code&gt; property which is an expression similar to &lt;code&gt;relevant_to&lt;/code&gt; to determine the resulting value. If you wish for the value to be optional (that is to say it&amp;rsquo;s OK if &lt;code&gt;path&lt;/code&gt; or &lt;code&gt;expr&lt;/code&gt; evaluate to &lt;code&gt;undefined&lt;/code&gt;) you may also set &lt;code&gt;optional&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;a-mapping-example&#34;&gt;A mapping example&lt;/h4&gt;
&lt;p&gt;Given the following example (incomplete) report:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;abc-1234&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;data_record&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;form&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;referral&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;reported_date&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1555069530966&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;fields&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;patient_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;12345&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;patient_temp_deg_F&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;danger_signs&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;V&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;BL&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;D&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;IG&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;contact&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;def-5678&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Jane CHW&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;parent&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;hij-9012&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The following mapping configuration:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;mapping&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;patient_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;doc.fields.patient_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;chw_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;doc.contact._id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;event.temp_c&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;expr&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;((doc.fields.patient_temp_deg_F - 32) * (5.0/9.0)).toFixed(2)&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;event.in_danger&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;expr&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;doc.fields.danger_signs.length &amp;gt;= 3 ? true : undefined&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;event.additional_notes&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;doc.fields.notes&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Would create the following JSON payload to send:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;patient_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;12345&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;chw_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;def-5678&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;event&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;temp_c&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;37.78&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;in_danger&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This example makes a few points:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The report that is being used to generate the outbound push is referenced as &lt;code&gt;doc&lt;/code&gt; in both &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;expr&lt;/code&gt; properties&lt;/li&gt;
&lt;li&gt;To define a property that is itself an object, you can make the mapping key a JSON path.&lt;/li&gt;
&lt;li&gt;If you define a property as &lt;code&gt;optional&lt;/code&gt;, it won&amp;rsquo;t exist at all in the payload if the resulting value is &lt;code&gt;undefined&lt;/code&gt;, either because that is the result of executing the &lt;code&gt;expr&lt;/code&gt;, or the &lt;code&gt;path&lt;/code&gt; doesn&amp;rsquo;t exist. Note that if the &lt;code&gt;event.in_danger&lt;/code&gt; expression was instead &lt;code&gt;doc.fields.danger_signs.length &amp;gt;= 3&lt;/code&gt; the property &lt;code&gt;in_danger&lt;/code&gt; would always exist and would either be &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;other-notes&#34;&gt;Other Notes&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Your report will be hydrated before being passed to the mapper. This gives you access to the contact and its parents&lt;/li&gt;
&lt;li&gt;object paths that may have undefined properties need to be dealt with differently depending on if you are using a &lt;code&gt;path&lt;/code&gt; or an &lt;code&gt;expr&lt;/code&gt;. Given &lt;code&gt;doc.foo.bar.smang&lt;/code&gt; as a path where any of those properties may not exist in the doc:&lt;/li&gt;
&lt;li&gt;If you&amp;rsquo;re using &lt;code&gt;path&lt;/code&gt; just use the path as is, if any part of the path is &lt;code&gt;undefined&lt;/code&gt; the resulting value will safely be &lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;However, in &lt;code&gt;expr&lt;/code&gt; you &lt;strong&gt;do&lt;/strong&gt; need to handle this situation: &lt;code&gt;doc.foo &amp;amp;&amp;amp; doc.foo.bar &amp;amp;&amp;amp; doc.foo.bar.smang&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;If any of your &lt;code&gt;expr&lt;/code&gt; expressions throw an exception (for example because you didn&amp;rsquo;t handle potentially &lt;code&gt;undefined&lt;/code&gt; properties as noted above) your push will fail&lt;/li&gt;
&lt;li&gt;If any of your &lt;code&gt;path&lt;/code&gt; declarations result in an &lt;code&gt;undefined&lt;/code&gt; value and you have not also declared that property optional your push will fail&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;credentials&#34;&gt;Credentials&lt;/h2&gt;
&lt;p&gt;To securely store credentials, we&amp;rsquo;ll be using CouchDB&amp;rsquo;s &lt;a href=&#34;https://docs.couchdb.org/en/stable/api/server/configuration.html&#34;&gt;config storage&lt;/a&gt;, as this is a convenient location that only CouchDB administrators can access.&lt;/p&gt;
&lt;p&gt;Passwords are stored under the &lt;code&gt;medic-credentials&lt;/code&gt; section, under the key declared in config.&lt;/p&gt;
&lt;p&gt;In the following example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;destination&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;base_url&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;https://example.com&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;auth&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;basic&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;username&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;admin&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;password_key&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;example.com&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/api/v1/referral&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We have our key configured to &lt;code&gt;example.com&lt;/code&gt;. This means that in CouchDB&amp;rsquo;s admin config we would expect to find a password at &lt;code&gt;medic-credentials/example.com&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To add the credential to the admin config you need to either &lt;a href=&#34;https://docs.couchdb.org/en/stable/api/server/configuration.html#put--_node-node-name-_config-section-key&#34;&gt;PUT the value using curl&lt;/a&gt; or similar:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;curl -X PUT https://&amp;lt;user&amp;gt;:&amp;lt;pass&amp;gt;@&amp;lt;domain&amp;gt;/_node/couchdb@127.0.0.1/_config/medic-credentials/example.com -d &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;&amp;#34;the-real-password&amp;#34;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;(Note that &lt;code&gt;couchdb@127.0.0.1&lt;/code&gt; is the local node name, and may be different for you depending on your setup.)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;You can also add it via Fauxton:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Navigate to &lt;a href=&#34;http://localhost:5984/_utils/#/_config&#34;&gt;the Config screen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Add Option&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;Section&lt;/code&gt; should be &lt;code&gt;medic-credentials&lt;/code&gt;, the &lt;code&gt;Name&lt;/code&gt; should be (in this example) &lt;code&gt;example.com&lt;/code&gt; and the value should be the password&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Create&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;You should then be able to see your credential in the list of configuration shown\&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;flow&#34;&gt;Flow&lt;/h2&gt;
&lt;p&gt;Outbound pushes happen in two stages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sentinel picks up the report and runs transitions over it. Any outbound configuration that is relevant (via executing the &lt;code&gt;relevant_to&lt;/code&gt; expression) will be added to a task queue&lt;/li&gt;
&lt;li&gt;Every 5 minutes sentinel will check its task queue. For each outbound push that is queued, sentinel will perform the mapping and attempt to send the resulting payload (via POST) to the configured web address
&lt;ul&gt;
&lt;li&gt;If the push succeeds it will be taken out of the task queue&lt;/li&gt;
&lt;li&gt;If the push fails (i.e. the response is not 2xx) it remains in the task queue, to be tried again in 5 minutes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;inbound&#34;&gt;Inbound?&lt;/h2&gt;
&lt;p&gt;The outbound feature is used for sending data to an external service. If you are looking to &lt;strong&gt;receive&lt;/strong&gt; data from an external service, take a look at &lt;a href=&#34;https://github.com/medic/medic/tree/master/api#post-apiv2records&#34;&gt;the records api&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: SMS message states</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/sms-states/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/sms-states/</guid>
      <description>
        
        
        &lt;h2 id=&#34;interaction-with-sms-providers&#34;&gt;Interaction with SMS providers&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/medic/medic&#34;&gt;Medic&lt;/a&gt; can use &lt;a href=&#34;https://github.com/medic/medic-gateway&#34;&gt;medic-gateway&lt;/a&gt; and third party aggregators to send and receive SMS messages.&lt;/p&gt;
&lt;p&gt;When an SMS report comes in from a user, &lt;a href=&#34;https://github.com/medic/medic-sentinel&#34;&gt;medic-sentinel&lt;/a&gt; adds the appropriate list of scheduled messages (to be sent at a future date) to the report doc.&lt;/p&gt;
&lt;p&gt;Periodically, sentinel checks for messages that need to be sent, and &lt;a href=&#34;https://github.com/medic/medic-sentinel/blob/master/schedule/due_tasks.js&#34;&gt;sets their state to &lt;code&gt;pending&lt;/code&gt;&lt;/a&gt; if their scheduled sending time has been reached or passed.&lt;/p&gt;
&lt;p&gt;Periodically, the aggregator checks for messages that need to be sent (i.e. that are in &lt;code&gt;pending&lt;/code&gt; state).&lt;/p&gt;
&lt;p&gt;The aggregator also reports on the status of the messages it&amp;rsquo;s sending.&lt;/p&gt;
&lt;h2 id=&#34;message-statusesstates&#34;&gt;Message statuses/states&lt;/h2&gt;
&lt;p&gt;Both webapp and the aggregator store states/statuses of the messages to keep track of the exchange. They each have their set of statuses, which sometimes are called the same but do not mean the same thing. Watch out.&lt;/p&gt;
&lt;h3 id=&#34;message-statuses-in-medic-gateway&#34;&gt;Message statuses in medic-gateway&lt;/h3&gt;
&lt;p&gt;See &lt;a href=&#34;https://github.com/medic/medic-gateway#content&#34;&gt;https://github.com/medic/medic-gateway#content&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;message-states-in-medic&#34;&gt;Message states in medic&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;State&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;scheduled&lt;/td&gt;
&lt;td&gt;Not yet due. Messages as part of a configured schedule start in this state and are changed to &lt;code&gt;pending&lt;/code&gt; when due.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pending&lt;/td&gt;
&lt;td&gt;Due to be sent. The SMS gateway should pick this up for sending. Auto replies and instant messages start in this state.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;forwarded-to-gateway&lt;/td&gt;
&lt;td&gt;Message has been sent to gateway.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;received-by-gateway&lt;/td&gt;
&lt;td&gt;Has been received by the gateway.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;forwarded-by-gateway&lt;/td&gt;
&lt;td&gt;Gateway has tried sending the message.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sent&lt;/td&gt;
&lt;td&gt;Successfully delivered to the sms network.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;delivered&lt;/td&gt;
&lt;td&gt;Successfully received by the recipient&amp;rsquo;s device.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;failed&lt;/td&gt;
&lt;td&gt;The sending attempt failed. Sending will not be retried without user intervention.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;denied&lt;/td&gt;
&lt;td&gt;This will not be sent. The recipient phone number is configured to be denied via &lt;code&gt;outgoing_deny_list&lt;/code&gt;, &lt;code&gt;outgoing_deny_with_alphas&lt;/code&gt;, or &lt;code&gt;outgoing_deny_shorter_than&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cleared&lt;/td&gt;
&lt;td&gt;This will not be sent as a report has triggered an event to stop it. This can happen if a patient visit has occurred before the visit reminder is sent.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;muted&lt;/td&gt;
&lt;td&gt;This will not be sent as the task has been deliberately stopped. Messages in this state can be unmuted by user action.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;timeline-of-the-medic-gateway-protocol-for-webapp-originating-message&#34;&gt;Timeline of the medic-gateway protocol for webapp-originating message&lt;/h2&gt;
&lt;p&gt;Read the table below like a vertical timeline : each time an event happens, the states/statuses corresponding to the message get updated.&lt;/p&gt;
&lt;p&gt;Note 1 : Gateway only sends a status update for a message only if the &amp;ldquo;needs forwarding&amp;rdquo; flag for the message status is true, and then sets it back to false. So it only sends status updates once.&lt;/p&gt;
&lt;p&gt;Note 2 : If api sends the same WO message again, then gateway sets its needs forwarding flag to true, and so sends the status at the next poll.&lt;/p&gt;
&lt;p&gt;Note 3 : not all of the events below happen every time : this is assuming only one step of SMS-sending happens between each poll. If several steps happened, then some of the events below are skipped. If several status changes have happened between polls, Gateway will report the multiple new statuses at the next poll.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;number&lt;/th&gt;
&lt;th&gt;Event&lt;/th&gt;
&lt;th&gt;webapp state&lt;/th&gt;
&lt;th&gt;gateway status&lt;/th&gt;
&lt;th&gt;gateway &amp;ldquo;Needs forwarding&amp;rdquo; flag&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Due date to send the message passes&lt;/td&gt;
&lt;td&gt;pending&lt;/td&gt;
&lt;td&gt;&amp;mdash;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Gateway polls and gets a new WO message&lt;/td&gt;
&lt;td&gt;forwarded-to-gateway&lt;/td&gt;
&lt;td&gt;&amp;mdash;&lt;/td&gt;
&lt;td&gt;&amp;mdash;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;Gateway saves message in its DB&lt;/td&gt;
&lt;td&gt;forwarded-to-gateway&lt;/td&gt;
&lt;td&gt;UNSENT&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;Gateway reports UNSENT status for the message&lt;/td&gt;
&lt;td&gt;received-by-gateway&lt;/td&gt;
&lt;td&gt;UNSENT&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;Gateway sends the message&lt;/td&gt;
&lt;td&gt;received-by-gateway&lt;/td&gt;
&lt;td&gt;PENDING&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;Gateway reports PENDING status for the message&lt;/td&gt;
&lt;td&gt;forwarded-by-gateway&lt;/td&gt;
&lt;td&gt;PENDING&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;Gateway gets confirmation the message left&lt;/td&gt;
&lt;td&gt;forwarded-by-gateway&lt;/td&gt;
&lt;td&gt;SENT&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;Gateway reports SENT status for the message&lt;/td&gt;
&lt;td&gt;sent&lt;/td&gt;
&lt;td&gt;SENT&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;Gateway gets confirmation the message arrived&lt;/td&gt;
&lt;td&gt;sent&lt;/td&gt;
&lt;td&gt;DELIVERED&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;Gateway reports DELIVERED status for the message&lt;/td&gt;
&lt;td&gt;delivered&lt;/td&gt;
&lt;td&gt;DELIVERED&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: SMS Workflows</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/workflows-sms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/workflows-sms/</guid>
      <description>
        
        
        &lt;p&gt;The Medic platform can be set up to send automated messages at specificied times in the future. To set this up a form must be defined in &lt;code&gt;app_settings.json&lt;/code&gt; as a registration form, then trigger a particular set of scheduled messages. Forms can also be configured to clear the schedule, or silence it for a period of time.&lt;/p&gt;
&lt;h2 id=&#34;scheduled-messages&#34;&gt;Scheduled messages&lt;/h2&gt;
&lt;p&gt;Scheduled messages are defined under the &lt;code&gt;schedules&lt;/code&gt; key as an array of schedule objects. The definition takes the typical form below:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;  &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;schedules&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;ANC Visit Reminders&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;summary&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;start_from&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;lmp_date&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;start_mid_group&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;messages&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;translation_key&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;messages.schedule.registration.followup_anc_pnc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;group&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;offset&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;4 weeks&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;send_day&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;monday&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;send_time&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;09:00&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;recipient&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;reporting_unit&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;app_settingsjson-schedules&#34;&gt;&lt;code&gt;app_settings.json .schedules[]&lt;/code&gt;&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;property&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;th&gt;required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A unique string label that is used to identify the schedule. Spaces are allowed.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;summary&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Short description of the of the schedule.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;description&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A narrative for the schedule.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;start_from&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The base date from which the &lt;code&gt;messages[].offset&lt;/code&gt; is added to determine when to send individual messages. You could specify any property on the report that contains a date value. The default is &lt;code&gt;reported_date&lt;/code&gt;, which is when the report was submitted.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;start_mid_group&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Whether or not a schedule can start mid-group. If not present, the schedule will not start mid-group. In other terms, the default value is &lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Array of objects, each containing a message to send out and its properties.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages[].translation_key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The translation key of the message to send out. Available in 2.15+.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages[].messages&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Array of message objects, each with &lt;code&gt;content&lt;/code&gt; and &lt;code&gt;locale&lt;/code&gt; properties. From 2.15 on use &lt;code&gt;translation_key&lt;/code&gt; instead.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages[].group&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Integer identifier to group messages that belong together so that they can be cleared together as a group by future reports. For instance a series of messages announcing a visit, and following up for a missed visit could be grouped together and cleared by a single visit report.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages[].offset&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Time interval from the &lt;code&gt;start_from&lt;/code&gt; date for when the message should be sent. It is structured as a string with an integer value followed by a space and the time unit. For instance &lt;code&gt;8 weeks&lt;/code&gt; or &lt;code&gt;2 days&lt;/code&gt;. The units available are &lt;code&gt;seconds&lt;/code&gt;, &lt;code&gt;minutes&lt;/code&gt;, &lt;code&gt;hours&lt;/code&gt;, &lt;code&gt;days&lt;/code&gt;, &lt;code&gt;weeks&lt;/code&gt;, &lt;code&gt;months&lt;/code&gt;, &lt;code&gt;years&lt;/code&gt;, and their singular forms as well. Note that although you can specify &lt;code&gt;seconds&lt;/code&gt;, the accuracy of the sending time will be determined by delays in the processing the message on the server and on the gateway.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages[].send_day&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;String value of the day of the week on which the message should be sent. For instance, to send a message at the beginning of the week setting it to &lt;code&gt;&amp;quot;Monday&amp;quot;&lt;/code&gt; will make sure the message goes out on the closest Monday &lt;em&gt;after&lt;/em&gt; the &lt;code&gt;start_date&lt;/code&gt; + &lt;code&gt;offset&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages[].send_time&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Time of day that the message should be sent in 24 hour format.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages[].recipient&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Recipient of the message. It can be set to &lt;code&gt;reporting_unit&lt;/code&gt; (sender of the form), &lt;code&gt;clinic&lt;/code&gt; (clinic that the sender of the form is attached to), &lt;code&gt;parent&lt;/code&gt; (parent of the sender of the form), or a specific phone number.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;registrations&#34;&gt;Registrations&lt;/h2&gt;
&lt;p&gt;Under the &lt;code&gt;registrations&lt;/code&gt; key in app_settings, we can setup triggers for scheduled messages. A trigger for the schedule above can be defined as shown below:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;
&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;registrations&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;form&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;PR&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;events&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;on_create&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;trigger&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;assign_schedule&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;params&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;ANC Visit Reminders&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;bool_expr&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;doc.fields.last_menstrual_period&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;validations&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{},&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;messages&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[]&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;app_settingsjson-registrations&#34;&gt;&lt;code&gt;app_settings.json .registrations[]&lt;/code&gt;&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;property&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;th&gt;required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;form&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Form ID that should trigger the schedule.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;events&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An array of event object definitions of what should happen when this form is received.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;event[].name&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Name of the event that has happened. The only supported event is &lt;code&gt;on_create&lt;/code&gt; which happens when a form is received.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;event[].trigger&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;What should happen after the named event. &lt;code&gt;assign_schedule&lt;/code&gt; will assign the schedule named in &lt;code&gt;params&lt;/code&gt; to this report. Similarly &lt;code&gt;clear_schedule&lt;/code&gt; will permanently clear all messages for a patient that are part of schedules listed in the &lt;code&gt;params&lt;/code&gt; field. The full set of trigger configuration directives are described &lt;a href=&#34;https://github.com/medic/medic-docs/blob/master/configuration/transitions.md#triggers&#34;&gt;here&lt;/a&gt;.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;event[].params&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Any useful information for the event. In our case, it holds the name of the schedule to be triggered.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;event[].bool_expr&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A JavaScript expression that will be cast to boolean to qualify execution of the event. Leaving blank will default to always true. CouchDB document fields can be accessed using &lt;code&gt;doc.key.subkey&lt;/code&gt;. Regular expressions can be tested using &lt;code&gt;pattern.test(value)&lt;/code&gt; e.g. /^[0-9]+$/.test(doc.fields.last_menstrual_period). In our example above, we&amp;rsquo;re making sure the form has an LMP date.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;validations&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A set of validations to perform on incoming reports. More information about validation rules can be found &lt;a href=&#34;app-settings-validations.md&#34;&gt;here&lt;/a&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;validations.join_responses&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A boolean specifying whether validation messages should be combined into one message.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;validations.list[]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An array of validation rules a report should pass to be considered valid.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;validations.list[].property&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Report field for which this validation rule will be applied.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;validations.list[].rule&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Validation condition to be applied to the property field. More information about rules can be found &lt;a href=&#34;app-settings-validations.md#rules&#34;&gt;here&lt;/a&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;validations.list[].translation_key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Translation key for the message reply to be sent if a report fails this rule.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An array of automated responses to incoming reports.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages[].translation_key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Translation key for the message text associated with this event.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages[].event_type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An event that will trigger sending of this message. Typical values are: &lt;code&gt;report_accepted&lt;/code&gt; when the report has been successfully validated and &lt;code&gt;registration_not_found&lt;/code&gt; when the patient ID supplied in the report doesn&amp;rsquo;t match any patient ID issued by Medic.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages[].recipient&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Who the message should be sent to. Use &lt;code&gt;reporting_unit&lt;/code&gt; for the sender of the report, &lt;code&gt;clinic&lt;/code&gt; for clinic contact, and &lt;code&gt;parent&lt;/code&gt; for the parent contact.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;patient-reports&#34;&gt;Patient Reports&lt;/h2&gt;
&lt;p&gt;Under the &lt;code&gt;patient_reports&lt;/code&gt; key in app_settings, we can setup actions to take for other form submissions. A patient report can be defined as shown below:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;  &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;patient_reports&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;form&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;V&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Visit (SMS)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;format&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;V &amp;lt;patientid&amp;gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;silence_type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;ANC Reminders, ANC Reminders LMP, ANC Reminders LMP from App&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;silence_for&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;8 days&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;fields&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;field_name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;validations&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;join_responses&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;list&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;property&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;patient_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;rule&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;regex(&amp;#39;^[0-9]{5,13}$&amp;#39;)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;translation_key&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;messages.generic.validation.patient_id&amp;#34;&lt;/span&gt;
          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;messages&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;translation_key&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;messages.v.report_accepted&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;event_type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;report_accepted&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;recipient&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;reporting_unit&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;translation_key&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;messages.generic.registration_not_found&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;event_type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;registration_not_found&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;recipient&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;reporting_unit&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;app_settingsjson-patient_reports&#34;&gt;&lt;code&gt;app_settings.json .patient_reports[]&lt;/code&gt;&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;property&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;th&gt;required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;form&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Form ID of the patient form.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Descriptive name of the form. This is not currently used in the app, but can be a helpful annotation.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;format&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Guide of how the form can be used. This is not currently used in the app, but can be a helpful annotation.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;silence_type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A comma separated list of schedules to mute.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;silence_for&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Duration from when the report was submitted for which messages should be muted. It is structured as a string with an integer value followed by a space and the time unit. For instance &lt;code&gt;8 weeks&lt;/code&gt; or &lt;code&gt;2 days&lt;/code&gt;. The units available are &lt;code&gt;seconds&lt;/code&gt;, &lt;code&gt;minutes&lt;/code&gt;, &lt;code&gt;hours&lt;/code&gt;, &lt;code&gt;days&lt;/code&gt;, &lt;code&gt;weeks&lt;/code&gt;, &lt;code&gt;months&lt;/code&gt;, &lt;code&gt;years&lt;/code&gt;, and their singular forms as well. When a message is muted all messages belonging to the same group will be muted, even if it falls outside of this time period. See &lt;code&gt;messages[].group&lt;/code&gt; in &lt;em&gt;Schedules&lt;/em&gt; for related info.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fields&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Descriptive list of form fields. This is not currently used in the app, but can be a helpful annotation.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;validations&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A set of validations to perform on incoming reports. More information about validation rules can be found &lt;a href=&#34;app-settings-validations.md&#34;&gt;here&lt;/a&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;validations.join_responses&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A boolean specifying whether validation messages should be combined into one message.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;validations.list[]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An array of validation rules a report should pass to be considered valid.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;validations.list[].property&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Report field for which this validation rule will be applied.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;validations.list[].rule&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Validation condition to be applied to the property field. More information about rules can be found &lt;a href=&#34;app-settings-validations.md#rules&#34;&gt;here&lt;/a&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;validations.list[].translation_key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Translation key for the message reply to be sent if a report fails this rule.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An array of automated responses to incoming reports.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages[].translation_key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Translation key for the message text associated with this event&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages[].event_type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An event that will trigger sending of this message. Typical values are: &lt;code&gt;report_accepted&lt;/code&gt; when the report has been successfully validated, &lt;code&gt;registration_not_found&lt;/code&gt; when the patient ID supplied in the report doesn&amp;rsquo;t match any patient ID issued by Medic. &lt;code&gt;on_mute&lt;/code&gt; and &lt;code&gt;on_unmute&lt;/code&gt; are used in the context of muting as described &lt;a href=&#34;transitions.md#muting&#34;&gt;here&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages[].recipient&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Who the message should be sent to. Use &lt;code&gt;reporting_unit&lt;/code&gt; for the sender of the report, &lt;code&gt;clinic&lt;/code&gt; for clinic contact, and &lt;code&gt;parent&lt;/code&gt; for the parent contact.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;!-- TODO 
## Case Reports
### `app_settings.json .case_reports[]`
--&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Targets</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/targets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/targets/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;counts.png&#34; alt=&#34;Percentages&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;percentages.png&#34; alt=&#34;Percentages&#34;&gt;&lt;/p&gt;
&lt;p&gt;All targets are defined in the &lt;code&gt;targets.js&lt;/code&gt; file as an array of objects according to the Targets schema defined below. Each object corresponds to a target widget that shows in the app. The order of objects in the array defines the display order of widgets on the Targets tab. The properties of the object are used to define when the target should appear, what it should look like, and the values it will display.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See Also:&lt;/em&gt; &lt;a href=https://docs.communityhealthtoolkit.org/beta/apps/features/targets/#&gt;Tasks Overview&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;targetsjs&#34;&gt;&lt;code&gt;targets.js&lt;/code&gt;&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;property&lt;/th&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;th&gt;required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;id&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An identifier for the target. Used for querying task completeness.&lt;/td&gt;
&lt;td&gt;yes, unique&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;icon&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The icon to show alongside the task. Should correspond with a value defined in &lt;code&gt;resources.json&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;translation_key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;translation key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Translation key for the title of this target.&lt;/td&gt;
&lt;td&gt;no, but recommended&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;subtitle_translation_key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;translation key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Translation key for the subtitle of this target. If none supplied the subtitle will be blank.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;percentage_count_translation_key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;translation key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Translation key for the percentage value detail shown at the bottom of the target, eg &amp;ldquo;(5 of 6 deliveries)&amp;quot;. The translation context has &lt;code&gt;pass&lt;/code&gt; and &lt;code&gt;total&lt;/code&gt; variables available. If none supplied this defaults to &lt;code&gt;targets.count.default&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;context&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A string containing a JavaScript expression. This widget will only be shown if the expression evaluates to true. Details of the current user is available through the variable &lt;code&gt;user&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&#39;count&#39;&lt;/code&gt; or &lt;code&gt;&#39;percent&#39;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The type of the widget.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;goal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;integer&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;For targets with &lt;code&gt;type: &#39;percent&#39;&lt;/code&gt;, an integer from 0 to 100. For &lt;code&gt;type: &#39;count&#39;&lt;/code&gt;, any positive number. If there is no goal, put -1.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;appliesTo&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&#39;contacts&#39;&lt;/code&gt; or &lt;code&gt;&#39;reports&#39;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Do you want to count reports or contacts? This attribute controls the behavior of other attributes herein.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;appliesToType&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;If &lt;code&gt;appliesTo: &#39;reports&#39;&lt;/code&gt;, an array of form codes. If &lt;code&gt;appliesTo: &#39;contacts&#39;&lt;/code&gt;, an array of contact types.&lt;/td&gt;
&lt;td&gt;Filters the contacts or reports for which &lt;code&gt;appliesIf&lt;/code&gt; will be evaluated. For example, &lt;code&gt;[&#39;person&#39;]&lt;/code&gt; or &lt;code&gt;[&#39;clinic&#39;, &#39;health_center&#39;]&lt;/code&gt;. For example, &lt;code&gt;[&#39;pregnancy&#39;]&lt;/code&gt; or &lt;code&gt;[&#39;P&#39;, &#39;pregnancy&#39;]&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;appliesIf&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;function(contact, report)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;If &lt;code&gt;appliesTo: &#39;contacts&#39;&lt;/code&gt;, this function is invoked once per contact and &lt;code&gt;report&lt;/code&gt; is undefined. If &lt;code&gt;appliesTo: &#39;reports&#39;&lt;/code&gt;, this function is invoked once per report. Return true to count this document. For &lt;code&gt;type: &#39;percent&#39;&lt;/code&gt;, this controls the denominator.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;passesIf&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;function(contact, report)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;For &lt;code&gt;type: &#39;percent&#39;&lt;/code&gt;, return true to increment the numerator.&lt;/td&gt;
&lt;td&gt;yes, if &lt;code&gt;type: &#39;percent&#39;&lt;/code&gt;. Forbidden when &lt;code&gt;groupBy&lt;/code&gt; is defined.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;date&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&#39;reported&#39;&lt;/code&gt; or &lt;code&gt;&#39;now&#39;&lt;/code&gt; or &lt;code&gt;function(contact, report)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;When &lt;code&gt;&#39;reported&#39;&lt;/code&gt;, the target will count documents with a &lt;code&gt;reported_date&lt;/code&gt; within the current month. When &lt;code&gt;&#39;now&#39;&lt;/code&gt;, target includes all documents. A function can be used to indicate when the document should be counted. Default is &lt;code&gt;&#39;reported&#39;&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;idType&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&#39;report&#39;&lt;/code&gt; or &lt;code&gt;&#39;contact&#39;&lt;/code&gt; or &lt;code&gt;function(contact, report)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The target&amp;rsquo;s values are incremented once per unique ID. To count individual contacts that have one or more reports that apply, use &lt;code&gt;&#39;contact&#39;&lt;/code&gt;. Use &lt;code&gt;&#39;report&#39;&lt;/code&gt; to count all reports, even if there are multiple that apply for a single contact. If you need more than a single count for each applying contact or report then a custom function can be used returning an array with unique IDs — one element for each count.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;groupBy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;function(contact, report)&lt;/code&gt; returning string&lt;/td&gt;
&lt;td&gt;Allows for target ids to be aggregated and scored in groups. Not required for most targets. Use with passesIfGroupCount.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;passesIfGroupCount&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;object&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The criteria to determine if the target ids within a group should be counted as passing&lt;/td&gt;
&lt;td&gt;yes when &lt;code&gt;groupBy&lt;/code&gt; is defined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;passesIfGroupCount.gte&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The group should be counted as passing if the number of target ids in the group is greater-than-or-equal-to this value&lt;/td&gt;
&lt;td&gt;yes when &lt;code&gt;groupBy&lt;/code&gt; is defined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dhis&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;object&lt;/code&gt; or &lt;code&gt;object[]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Settings relevant to the &lt;a href=&#34;./dhis-integration.md&#34;&gt;DHIS2 Integration&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dhis[n].dataElement&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The hash id of a data element configured in the DHIS2 data set you&amp;rsquo;re integrating with&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dhis[n].dataSet&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The hash id of the data set that contains the data element you&amp;rsquo;re integrating with. If this is left undefined, the data element will appear in all data sets.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;visible&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Whether the target is visible in the targets page. &lt;strong&gt;Default: true&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;code-samples&#34;&gt;Code Samples&lt;/h2&gt;
&lt;p&gt;This sample &lt;code&gt;targets.js&lt;/code&gt; generates three widgets, and uses functions written in the &lt;code&gt;targets-extras.js&lt;/code&gt; file.&lt;/p&gt;
&lt;h3 id=&#34;targetsjs-1&#34;&gt;&lt;code&gt;targets.js&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;isHealthyDelivery&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;countReportsSubmittedInWindow&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;require&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;./targets-extras&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color:#000&#34;&gt;module&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// BIRTHS THIS MONTH
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;births-this-month&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;count&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;icon&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;infant&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;goal&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;translation_key&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;targets.births.title&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;subtitle_translation_key&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;targets.this_month.subtitle&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;

    &lt;span style=&#34;color:#000&#34;&gt;appliesTo&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;reports&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesIf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;isHealthyDelivery&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;date&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;reported&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;

  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// % DELIVERIES ALL TIME WITH 1+ VISITS
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;delivery-with-min-1-visit&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;percent&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;icon&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;nurse&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;goal&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;translation_key&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;targets.delivery_1_visit.title&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;subtitle_translation_key&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;targets.all_time.subtitle&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;

    &lt;span style=&#34;color:#000&#34;&gt;appliesTo&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;reports&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;idType&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;report&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesIf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;isHealthyDelivery&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;passesIf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;visits&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;countReportsSubmittedInWindow&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reports&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;antenatalForms&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reported_date&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;MAX_DAYS_IN_PREGNANCY&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;MS_IN_DAY&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reported_date&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;visits&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;date&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;now&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;

  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;2-home-visits-per-family&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;icon&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;home-visit&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;percent&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;goal&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;translation_key&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;`target.2-home-visits-per-family`&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;user.role === &amp;#34;chw&amp;#34;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;date&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;reported&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;

    &lt;span style=&#34;color:#000&#34;&gt;appliesTo&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;contacts&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesToType&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;person&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;idType&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Determines the target ids which will be in the group.
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// eg. &amp;#34;family1~2000-02-15&amp;#34; and &amp;#34;family1~2000-02-16&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;householdVisitDates&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Set&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reports&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;map&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;report&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;toDateString&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;report&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reported_date&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)));&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;familyId&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;parent&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;_id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;Array&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;from&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;householdVisitDates&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;map&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;date&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;familyId&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;~&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;date&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;groupBy&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;parent&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;_id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;passesIfGroupCount&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;gte&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;targets-extrasjs&#34;&gt;&lt;code&gt;targets-extras.js&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;module&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;isHealthyDelivery&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;form&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;D&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;||&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;form&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;delivery&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fields&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pregnancy_outcome&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;healthy&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;

  &lt;span style=&#34;color:#000&#34;&gt;countReportsSubmittedInWindow&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reports&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;form&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;reportsFound&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;reports&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;forEach&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;form&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;indexOf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;form&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reported_date&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reported_date&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
          &lt;span style=&#34;color:#000&#34;&gt;reportsFound&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;++&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;});&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;reportsFound&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;build&#34;&gt;Build&lt;/h2&gt;
&lt;p&gt;To build your targets into your app, you must compile them into app-settings, then upload them to your instance.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;medic-conf --local compile-app-settings backup-app-settings upload-app-settings&lt;/code&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Tasks</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/tasks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/tasks/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;task-with-description.png&#34; alt=&#34;task&#34;&gt;&lt;/p&gt;
&lt;p&gt;Tasks are configured in the &lt;code&gt;tasks.js&lt;/code&gt; file. This file is a JavaScript module which defines an array of objects conforming to the Task schema detailed below. When defining tasks, all the data about contacts on the device (both people and places) along with all their reports are available. Tasks are available only for users of type &amp;ldquo;restricted to their place&amp;rdquo;. Tasks can pull in fields from reports and pass data as inputs to the form that opens when the task is selected, enabling richer user experiences.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See Also:&lt;/em&gt; &lt;a href=https://docs.communityhealthtoolkit.org/beta/apps/features/tasks/#&gt;Tasks Overview&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;tasksjs&#34;&gt;&lt;code&gt;tasks.js&lt;/code&gt;&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;property&lt;/th&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;th&gt;required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A unique identifier for the task. Used for querying task completeness.&lt;/td&gt;
&lt;td&gt;yes, unique&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;icon&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The icon to show alongside the task. Should correspond with a value defined in &lt;code&gt;resources.json&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;title&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;translation key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The title of the task (labeled above).&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;appliesTo&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&#39;contacts&#39;&lt;/code&gt; or &lt;code&gt;&#39;reports&#39;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Do you want to emit one task per report, or one task per contact? This attribute controls the behavior of other properties herein.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;appliesIf&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;function(contact, report)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;If &lt;code&gt;appliesTo: &#39;contacts&#39;&lt;/code&gt;, this function is invoked once per contact and &lt;code&gt;report&lt;/code&gt; is undefined. If &lt;code&gt;appliesTo: &#39;reports&#39;&lt;/code&gt;, this function is invoked once per report. Return true if the task should appear for the given documents.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;appliesToType&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string[]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Filters the contacts or reports for which &lt;code&gt;appliesIf&lt;/code&gt; will be evaluated. If &lt;code&gt;appliesTo: &#39;reports&#39;&lt;/code&gt;, this is an array of form codes. If &lt;code&gt;appliesTo: &#39;contacts&#39;&lt;/code&gt;, this is an array of contact types. For example, &lt;code&gt;[&#39;person&#39;]&lt;/code&gt; or &lt;code&gt;[&#39;clinic&#39;, &#39;health_center&#39;]&lt;/code&gt;. For example, &lt;code&gt;[&#39;pregnancy&#39;]&lt;/code&gt; or &lt;code&gt;[&#39;P&#39;, &#39;pregnancy&#39;]&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;contactLabel&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt; or &lt;code&gt;function(contact, report)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Controls the label describing the subject of the task. Defaults to the name of the contact (&lt;code&gt;contact.contact.name&lt;/code&gt;).&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;resolvedIf&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;function(contact, report, event, dueDate)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Return true to mark the task as &amp;ldquo;resolved&amp;rdquo;. A resolved task uses memory on the phone, but is not displayed.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;events&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;object[]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An event is used to specify the timing of the task.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;events[n].id&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A descriptive identifier. Used for querying task completeness.&lt;/td&gt;
&lt;td&gt;yes, unique&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;events[n].days&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;integer&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Number of days after the doc&amp;rsquo;s &lt;code&gt;reported_date&lt;/code&gt; that the event is due&lt;/td&gt;
&lt;td&gt;yes, if &lt;code&gt;dueDate&lt;/code&gt; is not set&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;events[n].dueDate&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;function(event, contact, report)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Returns a &lt;code&gt;Date&lt;/code&gt; object for the day when this event is due.&lt;/td&gt;
&lt;td&gt;yes, if &lt;code&gt;days&lt;/code&gt; is not set&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;events[n].start&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;integer&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Number of days to show the task before it is due.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;events[n].end&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;integer&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Number of days to show the task after it is due.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;actions&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;object[]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The actions (forms) that a user can access after clicking on a task. If you put multiple forms here, the user will see a task summary screen where they can select which action they would like to complete.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;actions[n].type&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&#39;report&#39;&lt;/code&gt; or &lt;code&gt;&#39;contact&#39;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;When &lt;code&gt;&#39;report&#39;&lt;/code&gt;, the action opens the given form. When &lt;code&gt;&#39;contact&#39;&lt;/code&gt;, the action redirects to a contact&amp;rsquo;s profile page. Defaults to &amp;lsquo;report&amp;rsquo;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;actions[n].form&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The code of the form that should open when you select the action.&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;actions[n].label&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;translation key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The label that should appear on the task summary screen if multiple actions are present.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;actions[n].modifyContent&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;function (content, contact, report)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Set the values on the content object to control the data which will be passed as &lt;code&gt;inputs&lt;/code&gt; to the form which opens when the action is selected.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;priority&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;object&lt;/code&gt; or &lt;code&gt;function(contact, report)&lt;/code&gt; returning object of same schema&lt;/td&gt;
&lt;td&gt;Controls the &amp;ldquo;high risk&amp;rdquo; line seen above.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;priority.level&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;high&lt;/code&gt; or &lt;code&gt;medium&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Tasks that are &lt;code&gt;high&lt;/code&gt; will display a high risk icon with the task. Default: &lt;code&gt;medium&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;priority.label&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;translation key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Text shown with the task associated to the risk level.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;code-samples&#34;&gt;Code samples&lt;/h2&gt;
&lt;h3 id=&#34;basic-task&#34;&gt;Basic task&lt;/h3&gt;
&lt;p&gt;This sample &lt;code&gt;tasks.js&lt;/code&gt; generates two postnatal-visit tasks for each delivery form. The tasks are due 7 and 14 days after the delivery report was submitted. Each task is displayed for 2 days before the due date and 2 days after the due date.&lt;/p&gt;
&lt;h4 id=&#34;tasksjs-1&#34;&gt;tasks.js&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;module&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;icon&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;mother-child&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;task.postnatal_followup&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesTo&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;reports&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesToType&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;delivery&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;actions&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;form&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;postnatal_visit&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;events&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;days&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;days&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;tasks-with-functions&#34;&gt;Tasks with functions&lt;/h3&gt;
&lt;p&gt;These samples show more complex tasks which use functions kepts in a separate &lt;code&gt;nools-extras.js&lt;/code&gt; file&lt;/p&gt;
&lt;h4 id=&#34;tasksjs-2&#34;&gt;&lt;code&gt;tasks.js&lt;/code&gt;&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;extras&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;require&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;./nools-extras&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;isFormFromArraySubmittedInWindow&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;extras&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#000&#34;&gt;module&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// PNC TASK 1: If a home delivery, needs clinic tasks
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;icon&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;mother-child&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;locale&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;en&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;Postnatal visit needed&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesTo&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;reports&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesToType&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;D&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;delivery&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesIf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;isCoveredByUseCase&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;pnc&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
          &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fields&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
             &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fields&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;delivery_code&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
             &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fields&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;delivery_code&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;toUpperCase&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;!==&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;F&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;actions&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[{&lt;/span&gt; 
      &lt;span style=&#34;color:#000&#34;&gt;form&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;postnatal_visit&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Pass content that will be used within the task form
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#000&#34;&gt;modifyContent&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;delivery_place&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;home&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}],&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;events&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;days&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;priority&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;level&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;high&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;locale&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;en&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;Home Birth&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;resolvedIf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;event&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;dueDate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Resolved if there a visit report received in time window or a newer pregnancy
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reported_date&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;extras&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;getNewestDeliveryTimestamp&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;||&lt;/span&gt;
             &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reported_date&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;extras&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;getNewestPregnancyTimestamp&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;||&lt;/span&gt;
             &lt;span style=&#34;color:#000&#34;&gt;isFormFromArraySubmittedInWindow&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reports&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;extras&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;postnatalForms&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
                 &lt;span style=&#34;color:#000&#34;&gt;Utils&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;addDate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dueDate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;event&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;getTime&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(),&lt;/span&gt;
                 &lt;span style=&#34;color:#000&#34;&gt;Utils&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;addDate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dueDate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;  &lt;span style=&#34;color:#000&#34;&gt;event&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;getTime&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;());&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;

  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Option 1a: Place-based task: Family survey when place is created, then every 6 months
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;icon&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;family&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;task.family_survey.title&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesTo&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;contacts&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesToType&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;clinic&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;actions&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;form&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;family_survey&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;events&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;family-survey&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;days&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;resolvedIf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;event&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;dueDate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Resolved if there a family survey received in time window
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;isFormFromArraySubmittedInWindow&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reports&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;family_survey&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
                 &lt;span style=&#34;color:#000&#34;&gt;Utils&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;addDate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dueDate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;event&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;getTime&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(),&lt;/span&gt;
                 &lt;span style=&#34;color:#000&#34;&gt;Utils&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;addDate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dueDate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;  &lt;span style=&#34;color:#000&#34;&gt;event&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;getTime&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;());&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;

  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Regular check for infants
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;icon&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;infant&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;task.infant.title&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesTo&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;contacts&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesToType&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;person&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;actions&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;form&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;infant_assessment&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;events&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; 
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;infant_asssessment-q1&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;days&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;infant_asssessment-q2&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;days&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;182&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;infant_asssessment-q3&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;days&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;273&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;infant_asssessment-q4&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;days&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;365&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;

  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Option 2: Place-based task: Family survey every 6 months
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;icon&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;family&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;task.family_survey.title&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesTo&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;contacts&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesToType&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;clinic&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesIf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;extras&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;needsFamilySurvey&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// function returns true if family doesn&amp;#39;t have survey in previous 6 months
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#000&#34;&gt;actions&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;form&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;family_survey&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;events&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;family-survey&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;dueDate&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;extras&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;getNextFamilySurveyDate&lt;/span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// function gets expected date of next family survey 
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;resolvedIf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;event&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;dueDate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Resolved if there a family survey received in time window
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;isFormFromArraySubmittedInWindow&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reports&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;family_survey&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
                 &lt;span style=&#34;color:#000&#34;&gt;Utils&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;addDate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dueDate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;event&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;getTime&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(),&lt;/span&gt;
                 &lt;span style=&#34;color:#000&#34;&gt;Utils&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;addDate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dueDate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;  &lt;span style=&#34;color:#000&#34;&gt;event&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;getTime&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;());&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;

&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;nools-extrasjs&#34;&gt;&lt;code&gt;nools-extras.js&lt;/code&gt;&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;module&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;isCoveredByUseCase&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;usecase&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// ...
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;getNewestDeliveryTimestamp&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// ...
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;getNewestPregnancyTimestamp&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// ...
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;isFormFromArraySubmittedInWindow&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reports&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;formsArray&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;startTime&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;endTime&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// ...
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;build&#34;&gt;Build&lt;/h2&gt;
&lt;p&gt;To build your tasks into your app, you must compile them into app-settings, then upload them to your instance.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;medic-conf --local compile-app-settings backup-app-settings upload-app-settings&lt;/code&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Sentinel Transitions</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/transitions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/transitions/</guid>
      <description>
        
        
        &lt;p&gt;When sentinel detects a document has changed it runs transitions against the doc. These transitions can be used to generate a short form patient id or assign a report to a facility.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;By default all transitions are disabled. They can be enabled by configuring the &lt;code&gt;transitions&lt;/code&gt; property to have a key with the transitions name and a &lt;code&gt;truthy&lt;/code&gt; value, eg:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;transitions&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;b&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;c&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;disable&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;d&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;disable&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In this example the &lt;code&gt;d&lt;/code&gt; transition will not be applied, but the other three will be.&lt;/p&gt;
&lt;h2 id=&#34;available-transitions&#34;&gt;Available transitions&lt;/h2&gt;
&lt;p&gt;The following transitions are available and executed in order.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Key&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;maintain_info_document&lt;/td&gt;
&lt;td&gt;Records metadata about the document such as when it was replicated. Enabled by default.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;update_clinics&lt;/td&gt;
&lt;td&gt;Adds a contact&amp;rsquo;s info to a new data record. This is used to attribute an incoming SMS message or report to the appropriate contact. The &lt;code&gt;rc_code&lt;/code&gt; value on the contact is used to match to the value of the form field set as the &lt;code&gt;facility_reference&lt;/code&gt; in the &lt;a href=&#34;https://github.com/medic/medic-docs/blob/master/configuration/forms.md#json-forms&#34;&gt;JSON form definition&lt;/a&gt;. This matching is useful when reports are sent on behalf of a facility by unknown or various phone numbers. If &lt;code&gt;facility_reference&lt;/code&gt; is not set for a form, the contact match is attempted using the sender&amp;rsquo;s phone number.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#registration&#34;&gt;registration&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;For registering a patient to a schedule. Performs some validation and creates the patient document if the patient does not already exist. Can create places (as of 3.8.x).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;accept_patient_reports&lt;/td&gt;
&lt;td&gt;Validates reports about a patient and silences relevant reminders.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#generate-shortcode-on-contacts&#34;&gt;generate_shortcode_on_contacts&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Automatically generates the &lt;code&gt;patient_id&lt;/code&gt; on all person documents and the &lt;code&gt;place_id&lt;/code&gt; on all place documents. Available since 3.8.x.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#generate-patient-id-on-people&#34;&gt;generate_patient_id_on_people&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Deprecated in 3.8.x&lt;/strong&gt; Automatically generates the &lt;code&gt;patient_id&lt;/code&gt; on all person documents. As of 3.8.x, also generates the &lt;code&gt;place_id&lt;/code&gt; on all place documents and is an alias for &lt;code&gt;generate_shortcode_on_contacts&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;default_responses&lt;/td&gt;
&lt;td&gt;Responds to the message with a confirmation or validation error.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;update_sent_by&lt;/td&gt;
&lt;td&gt;Sets the sent_by field of the report based on the sender&amp;rsquo;s phone number.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;update_sent_forms&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Deprecated in 3.7.x&lt;/strong&gt; Update sent_forms property on facilities so we can setup reminders for specific forms. &lt;em&gt;As of 3.7.x, reminders no longer require this transition&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#death_reporting&#34;&gt;death_reporting&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Updates the deceased status of patients.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;conditional_alerts&lt;/td&gt;
&lt;td&gt;Executes the configured condition and sends an alert if the condition is met.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#multi_report_alerts&#34;&gt;multi_report_alerts&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Similar to conditional_alerts, with more flexible configuration, including using different form types for the same alert.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#update_notifications&#34;&gt;update_notifications&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Deprecated in 3.2.x&lt;/strong&gt; Mutes or unmutes scheduled messages based on configuration.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;update_scheduled_reports&lt;/td&gt;
&lt;td&gt;If a report has a month/week/week_number, year and clinic then look for duplicates and update those instead.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;resolve_pending&lt;/td&gt;
&lt;td&gt;Sets the state of pending messages to sent. It is useful during builds where we don&amp;rsquo;t want any outgoing messages queued for sending.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#muting&#34;&gt;muting&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Implements muting/unmuting actions of people and places. Available since 3.2.x.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;./outbound.md&#34;&gt;mark_for_outbound&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Enables outbound pushes. Available since 3.5.x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#self_report&#34;&gt;self_report&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Maps patient to sender. Available since 3.9.x&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;transition-configuration-guide&#34;&gt;Transition Configuration Guide&lt;/h2&gt;
&lt;p&gt;Guides for how to setup specific transitions.&lt;/p&gt;
&lt;h3 id=&#34;multi_report_alerts&#34;&gt;multi_report_alerts&lt;/h3&gt;
&lt;p&gt;Send alert messages by SMS when specific conditions are received through reports. More flexible than simple Alerts.&lt;/p&gt;
&lt;p&gt;Example: send SMS to the district manager when 2 CHWs within the same district report cholera or diarrhea symptoms within the last week.&lt;/p&gt;
&lt;p&gt;Understanding the different types of reports used in the configuration:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;             previous suspected_cholera alert was sent
             |
             |           latest_report comes in, suspected_cholera alert is sent
             |           |
             v           v
---[---*-o---*--*--o-o---*]-------&amp;gt;    time
                1        0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;[]&lt;/code&gt; : time window&lt;/p&gt;
&lt;p&gt;&lt;code&gt;*&lt;/code&gt; and &lt;code&gt;o&lt;/code&gt; : &lt;code&gt;reports&lt;/code&gt; : any report that came in to the server.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;*&lt;/code&gt; : &lt;code&gt;counted_reports&lt;/code&gt; : reports that came in that passed the &lt;code&gt;is_report_counted&lt;/code&gt; filter function.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;0&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt; : &lt;code&gt;new_reports&lt;/code&gt; : &lt;code&gt;counted_reports&lt;/code&gt; that came in since the previous alert was sent. They haven&amp;rsquo;t been messaged about yet.&lt;/p&gt;
&lt;h4 id=&#34;configuration-1&#34;&gt;Configuration&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;multi_report_alerts&amp;quot; : [
  {
    &amp;quot;name&amp;quot;: &amp;quot;suspected_cholera&amp;quot;,
    &amp;quot;is_report_counted&amp;quot;: &amp;quot;function(report, latest_report) {  return latest_report.contact.parent.parent._id === report.contact.parent.parent._id; }&amp;quot;,
    &amp;quot;num_reports_threshold&amp;quot;: 2,
    &amp;quot;message&amp;quot;: &amp;quot;{{num_counted_reports}} patients with {{alert_name}} in {{time_window_in_days}} days reported at {{new_reports.0.contact.parent.name}}. New reports from: {{new_reports.0.contact.name}}, {{new_reports.1.contact.name}}, {{new_reports.2.contact.name}}.&amp;quot;,
    &amp;quot;recipients&amp;quot;: [
      &amp;quot;+123456&amp;quot;,
      &amp;quot;new_report.contact.phone&amp;quot;, // sender of each report in new_reports
      &amp;quot;new_report.contact.parent.parent.contact.phone&amp;quot;, // contact person for the parent place of the sender of each report in new_reports.
      // If it&#39;s the same for several reports, only one message will be sent (recipient phone numbers are deduplicated before generating messages).
    ],
    &amp;quot;time_window_in_days&amp;quot;: 7,
    &amp;quot;forms&amp;quot;: [&amp;quot;C&amp;quot;, &amp;quot;D&amp;quot;] // Only Cholera and Diarrhea forms.
  }
]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note that we are using Mustache templates for our message templates (anything with &lt;code&gt;{{}}&lt;/code&gt;), and they use a &lt;code&gt;.&lt;/code&gt; notation to access items in an array (e.g. &lt;code&gt;new_reports.1&lt;/code&gt;) rather than a &lt;code&gt;[]&lt;/code&gt; notation as in conventional javascript (&lt;code&gt;new_reports[1]&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;For performance reasons the &lt;code&gt;num_reports_threshold&lt;/code&gt; cannot exceed 100.&lt;/p&gt;
&lt;h3 id=&#34;death_reporting&#34;&gt;death_reporting&lt;/h3&gt;
&lt;p&gt;Updates patient documents with a &lt;code&gt;date_of_death&lt;/code&gt; field which updates how the patient is displayed in the UI.&lt;/p&gt;
&lt;h4 id=&#34;configuration-2&#34;&gt;Configuration&lt;/h4&gt;
&lt;p&gt;Configuration is stored in the &lt;code&gt;death_reporting&lt;/code&gt; field of the settings.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mark_deceased_forms&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An array of form codes which will cause patients to be recorded as deceased.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;undo_deceased_forms&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An array of form codes which will remove the deceased date from the patient. Optional.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;date_field&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The path to the field in the report document which has the date the patient died. Optional: if not configured it defaults to the reported_date of the report.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&#34;example&#34;&gt;Example&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;death_reporting&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;mark_deceased_forms&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;death&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;undo_deceased_forms&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;undo-death&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;date_field&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;fields.death_date&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;registration&#34;&gt;Registration&lt;/h3&gt;
&lt;p&gt;Configuration is held at &lt;code&gt;app_settings.registrations&lt;/code&gt;, as a list of objects connecting forms to validations, events and messages.&lt;/p&gt;
&lt;h4 id=&#34;events&#34;&gt;Events&lt;/h4&gt;
&lt;p&gt;Lists different events.&lt;/p&gt;
&lt;h5 id=&#34;on_create&#34;&gt;&lt;code&gt;on_create&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;This is the only supported event.&lt;/p&gt;
&lt;h4 id=&#34;triggers&#34;&gt;Triggers&lt;/h4&gt;
&lt;h5 id=&#34;add_patient&#34;&gt;&lt;code&gt;add_patient&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;Sets the &lt;code&gt;patient_id&lt;/code&gt; on the root of the registration document and creates the person doc if required. Can be configured to either use a provided ID or generate a new unique one.&lt;/p&gt;
&lt;h6 id=&#34;external-patient-id&#34;&gt;External Patient ID&lt;/h6&gt;
&lt;p&gt;If you are providing the patient id instead of having Sentinel generate you one, name the field in a &lt;code&gt;patient_id_field&lt;/code&gt; key in &lt;code&gt;&amp;quot;params&amp;quot;&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;on_create&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;trigger&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;add_patient&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;params&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;{\&amp;#34;patient_id_field\&amp;#34;: \&amp;#34;external_id\&amp;#34;}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;bool_expr&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In this example the provided id would be in &lt;code&gt;fields.external_id&lt;/code&gt; on the registration document.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NB:&lt;/strong&gt; this field must not be called &lt;code&gt;patient_id&lt;/code&gt;.
&lt;strong&gt;NB:&lt;/strong&gt; the JSON passed in &lt;code&gt;&amp;quot;params&amp;quot;&lt;/code&gt; should still be a string. Support for raw JSON as shown below exists, but is in beta and may not always work correctly in all situations, because kanso.json does not support it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;params&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;patient_id_field&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;external_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h6 id=&#34;alternative-name-location&#34;&gt;Alternative Name Location&lt;/h6&gt;
&lt;p&gt;To provide an alternative location for the patient name, either provide a &lt;code&gt;patient_name_field&lt;/code&gt; in &lt;code&gt;&amp;quot;params&amp;quot;&lt;/code&gt; or provide it directly into the &lt;code&gt;&amp;quot;params&amp;quot;&lt;/code&gt; field as a String:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;params&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;{\&amp;#34;patient_name_field\&amp;#34;: \&amp;#34;full_name\&amp;#34;}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;params&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;full_name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The first format is required if you wish to also provide other params:&lt;/p&gt;
&lt;h6 id=&#34;contact-type&#34;&gt;Contact Type&lt;/h6&gt;
&lt;p&gt;If you have changed from the default contact hierarchy you will need to specify which type of contact the registration should create.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;params&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;{ \&amp;#34;contact_type\&amp;#34;: \&amp;#34;patient\&amp;#34; }&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h6 id=&#34;specific-parent-as-of-380&#34;&gt;Specific Parent &lt;em&gt;as of 3.8.0&lt;/em&gt;&lt;/h6&gt;
&lt;p&gt;By default, the newly created person will have the same parent as the report submitter.
A different parent may be selected by providing a location for the parent id. This field should
contain the &lt;code&gt;place_id&lt;/code&gt; of the place in question.
If the selected parent is invalid - does not exist or does not respect the configured hierarchy&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the report is rejected as invalid and the person document is not created. As such
, &lt;code&gt;report_accepted&lt;/code&gt; event should check if the report has a &lt;code&gt;patient&lt;/code&gt; property (or similar).&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
     &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;params&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;{ \&amp;#34;parent_id\&amp;#34;: \&amp;#34;parent_id\&amp;#34; }&amp;#34;&lt;/span&gt;
 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h6 id=&#34;events-1&#34;&gt;Events&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;parent_field_not_provided&lt;/code&gt; - triggered when the report does not have the required parent_id field&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parent_invalid&lt;/code&gt; - triggered when selected parent is invalid (parent document is found and
either does not have a configured type or its type is not configured to be a parent to the
person type to be created)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parent_not_found&lt;/code&gt; - triggered when selected parent is not found&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The selected parent (if found) can be accessed by using the &lt;code&gt;parent&lt;/code&gt; path in error messages:
&lt;code&gt;Cannot create a person type &amp;quot;patient&amp;quot; under parent {{parent.place_id}}({{parent.contact_type}})&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&#34;add_patient_id&#34;&gt;&lt;code&gt;add_patient_id&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;&lt;strong&gt;Deprecated in favour of &lt;code&gt;add_patient&lt;/code&gt;.&lt;/strong&gt; Previously this only added a &lt;code&gt;patient_id&lt;/code&gt; to the root of the registration form. This functionality has been merged into &lt;code&gt;add_patient&lt;/code&gt;. Now, using this event will result in the same functionality as described in &lt;code&gt;add_patient&lt;/code&gt; above.&lt;/p&gt;
&lt;h5 id=&#34;add_expected_date&#34;&gt;&lt;code&gt;add_expected_date&lt;/code&gt;&lt;/h5&gt;
&lt;h5 id=&#34;add_birth_date&#34;&gt;&lt;code&gt;add_birth_date&lt;/code&gt;&lt;/h5&gt;
&lt;h5 id=&#34;assign_schedule&#34;&gt;&lt;code&gt;assign_schedule&lt;/code&gt;&lt;/h5&gt;
&lt;h5 id=&#34;clear_schedule&#34;&gt;&lt;code&gt;clear_schedule&lt;/code&gt;&lt;/h5&gt;
&lt;h5 id=&#34;add_place-as-of-380&#34;&gt;&lt;code&gt;add_place&lt;/code&gt; &lt;em&gt;as of 3.8.0&lt;/em&gt;&lt;/h5&gt;
&lt;p&gt;Sets the &lt;code&gt;place_id&lt;/code&gt; on the root of the registration document and creates the place doc with the
provided type.&lt;/p&gt;
&lt;p&gt;By default, the created place would have the same parent as the submitter. If such a combination is
invalid - for example a contact under a &amp;ldquo;clinic&amp;rdquo; attempts to create a new &amp;ldquo;health_center&amp;rdquo; - the
report will be rejected as errored and the place document will not be created. As such,
&lt;code&gt;report_accepted&lt;/code&gt; event should check if the report has a &lt;code&gt;place&lt;/code&gt; property (or similar).&lt;/p&gt;
&lt;p&gt;The created place does not have a primary contact.
The created place can be accessed by the &lt;code&gt;place&lt;/code&gt; path in messages:
&lt;code&gt;Place {{place.name}}({{place.place_id}}) added to {{place.parent.name}}({{place.parent.place_id}})&lt;/code&gt;&lt;/p&gt;
&lt;h6 id=&#34;contact-type-1&#34;&gt;Contact Type&lt;/h6&gt;
&lt;p&gt;Specifying the contact type is required, even if not using configurable hierarchies.
The selected contact type must be a configured place type.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;params&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;{ \&amp;#34;contact_type\&amp;#34;: \&amp;#34;clinic\&amp;#34; }&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h6 id=&#34;specific-parent&#34;&gt;Specific Parent&lt;/h6&gt;
&lt;p&gt;By default, the newly created place will have the same parent as the report submitter.
A different parent may be selected by providing a location for the parent id. This field should
contain the &lt;code&gt;place_id&lt;/code&gt; of the place in question.
If the selected parent is invalid - does not exist or is not an acceptable parent to the
selected type in the configured hierarchy - the report will be rejected as errored.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
     &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;params&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;{ \&amp;#34;parent_id\&amp;#34;: \&amp;#34;parent_id\&amp;#34; }&amp;#34;&lt;/span&gt;
 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h6 id=&#34;events-2&#34;&gt;Events&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;parent_field_not_provided&lt;/code&gt; - triggered when the report does not have the required parent_id field&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parent_invalid&lt;/code&gt; - triggered when selected parent is invalid (parent document is found and
either does not have a configured type or its type is not configured to be a parent to the
place type to be created)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parent_not_found&lt;/code&gt; - triggered when selected parent is not found&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The selected parent (if found) can be accessed by using the &lt;code&gt;parent&lt;/code&gt; path in error messages:
&lt;code&gt;&#39;Cannot create a place type &amp;quot;health_center&amp;quot; under parent {{parent.place_id}}({{parent.contact_type}})&#39;&lt;/code&gt;&lt;/p&gt;
&lt;h6 id=&#34;alternative-name-location-1&#34;&gt;Alternative Name Location&lt;/h6&gt;
&lt;p&gt;The created place&amp;rsquo;s name is provided in the &lt;code&gt;place_name&lt;/code&gt; field by default.
To provide an alternative location for the place name, provide a &lt;code&gt;place_name_field&lt;/code&gt; in
&lt;code&gt;&amp;quot;params&amp;quot;&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;params&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;{\&amp;#34;place_name_field\&amp;#34;: \&amp;#34;clinic_name\&amp;#34;}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;generate-shortcode-on-contacts&#34;&gt;Generate Shortcode on Contacts&lt;/h3&gt;
&lt;p&gt;No custom configuration for &lt;code&gt;generate_shortcode_on_contacts&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;generate-patient-id-on-people&#34;&gt;Generate Patient ID On People&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Deprecated since 3.8.x&lt;/strong&gt; in favor of &lt;code&gt;generate_shortcode_on_contacts&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;No custom configuration for &lt;code&gt;generate_patient_id_on_people&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;update_notifications&#34;&gt;update_notifications&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Deprecated in favor of &lt;a href=&#34;#muting&#34;&gt;Muting&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;configuration-3&#34;&gt;Configuration&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;notifications&amp;quot;: {
    &amp;quot;off_form&amp;quot;: &amp;quot;OFF&amp;quot;,
    &amp;quot;on_form&amp;quot;: &amp;quot;ON&amp;quot;,
    &amp;quot;validations&amp;quot;: {
      &amp;quot;join_responses&amp;quot;: true,
      &amp;quot;list&amp;quot;: []
    },
    &amp;quot;messages&amp;quot;: [
      {
        &amp;quot;translation_key&amp;quot;: &amp;quot;&amp;quot;,
        &amp;quot;event_type&amp;quot;: &amp;quot;on_mute&amp;quot;,
        &amp;quot;recipient&amp;quot;: &amp;quot;reporting_unit&amp;quot;
      },
      {
       &amp;quot;translation_key&amp;quot;: &amp;quot;&amp;quot;,
        &amp;quot;event_type&amp;quot;: &amp;quot;on_unmute&amp;quot;,
        &amp;quot;recipient&amp;quot;: &amp;quot;reporting_unit&amp;quot;
      },
      {
        &amp;quot;translation_key&amp;quot;: &amp;quot;&amp;quot;,
        &amp;quot;event_type&amp;quot;: &amp;quot;patient_not_found&amp;quot;,
        &amp;quot;recipient&amp;quot;: &amp;quot;reporting_unit&amp;quot;
      }
    ]
  }
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;muting&#34;&gt;Muting&lt;/h3&gt;
&lt;p&gt;Implements muting/unmuting of persons and places. Supports multiple forms for each action, for webapp and sms workflows.&lt;/p&gt;
&lt;p&gt;Muting action:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;updates target contact and all its descendants&lt;sup&gt;[1]&lt;/sup&gt;, setting the &lt;code&gt;muted&lt;/code&gt; property equal to the current &lt;code&gt;date&lt;/code&gt; in ISO format&lt;sup&gt;[2]&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;adds a &lt;code&gt;muting_history&lt;/code&gt; entry to Sentinel &lt;code&gt;info&lt;/code&gt; docs for every updated contact&lt;sup&gt;[7]&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;updates all connected registrations&lt;sup&gt;[3]&lt;/sup&gt;, changing the state of all unsent&lt;sup&gt;[4]&lt;/sup&gt; &lt;code&gt;scheduled_tasks&lt;/code&gt; to &lt;code&gt;muted&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Unmuting action:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;updates target contact&amp;rsquo;s topmost muted ancestor&lt;sup&gt;[1][5]&lt;/sup&gt; and all its descendants, removing the &lt;code&gt;muted&lt;/code&gt; property&lt;/li&gt;
&lt;li&gt;adds a &lt;code&gt;muting_history&lt;/code&gt; entry to Sentinel &lt;code&gt;info&lt;/code&gt; docs for every updated contact&lt;sup&gt;[7]&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;updates all connected registrations&lt;sup&gt;[3]&lt;/sup&gt;, changing the state of all present/future&lt;sup&gt;[6]&lt;/sup&gt; &lt;code&gt;muted&lt;/code&gt; &lt;code&gt;scheduled_tasks&lt;/code&gt; to &lt;code&gt;scheduled&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[1] Contacts that are already in the correct state are skipped. This applies to updates to the contact itself, updates to the Sentinel &lt;code&gt;muting_history&lt;/code&gt; and to the connected registrations (registrations of a contact that is already in the correct state will not be updated).
[2] The date represents the moment Sentinel has processed the muting action
[3] target contact and descendants&amp;rsquo; registrations
[4] &lt;code&gt;scheduled_tasks&lt;/code&gt; being in either &lt;code&gt;scheduled&lt;/code&gt; or &lt;code&gt;pending&lt;/code&gt; state
[5] Because the muted state is inherited, unmuting cascades upwards to the highest level muted ancestor. If none of the ancestors is muted, unmuting cascades downwards only.
[6] &lt;code&gt;scheduled_tasks&lt;/code&gt; which are due today or in the future. All &lt;code&gt;scheduled_tasks&lt;/code&gt; with a due date in the past will remain unchanged.&lt;/p&gt;
&lt;h5 id=&#34;7-muting-history&#34;&gt;[7] Muting history&lt;/h5&gt;
&lt;p&gt;Each time the &lt;code&gt;muted&lt;/code&gt; state of a contact changes, an entry is added to a &lt;code&gt;muting_history&lt;/code&gt; list saved in Sentinel &lt;code&gt;info&lt;/code&gt; docs (stored as an array property with the same name).
Entries in &lt;code&gt;muting_history&lt;/code&gt; contain the following information:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;muted&lt;/td&gt;
&lt;td&gt;Boolean representing the muted state&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;date&lt;/td&gt;
&lt;td&gt;Date in ISO Format&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;report_id&lt;/td&gt;
&lt;td&gt;An &lt;code&gt;_id&lt;/code&gt; reference to the report that triggered the action&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;configuration-4&#34;&gt;Configuration&lt;/h4&gt;
&lt;p&gt;Configuration is stored in the &lt;code&gt;muting&lt;/code&gt; field of &lt;code&gt;app_settings.json&lt;/code&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mute_forms&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An array of form codes which will trigger muting. &lt;strong&gt;Required&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;unmute_forms&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;An array of form codes which will trigger unmuting. Optional.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;validations&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;List of form fields validations. All mute &amp;amp; unmute forms will be subjected to these validation rules. Invalid forms will not trigger muting/unmuting actions. Optional.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;List of tasks/errors that will be created, determined by &lt;code&gt;event_type&lt;/code&gt;. Optional.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Supported &lt;code&gt;events_types&lt;/code&gt; are:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Event Type&lt;/th&gt;
&lt;th&gt;Trigger&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mute&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;On successful &lt;code&gt;mute&lt;/code&gt; action&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;unmute&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;On successful &lt;code&gt;unmute&lt;/code&gt; action&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;already_muted&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;On &lt;code&gt;mute&lt;/code&gt; action, when target contact is already muted&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;already_unmuted&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;On &lt;code&gt;unmute&lt;/code&gt; action, when target contact is already unmuted&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;contact_not_found&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Either mute or unmute actions when target contact is not found&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&#34;example-1&#34;&gt;Example&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;muting&amp;quot;: {
    &amp;quot;mute_forms&amp;quot;: [&amp;quot;mute_person&amp;quot;, &amp;quot;mute_clinic&amp;quot;],
    &amp;quot;unmute_forms&amp;quot;: [&amp;quot;unmute_person&amp;quot;, &amp;quot;unmute_clinic&amp;quot;],
    &amp;quot;validations&amp;quot;: {
      &amp;quot;join_responses&amp;quot;: true,
      &amp;quot;list&amp;quot;: []
    },
    &amp;quot;messages&amp;quot;: [
      {
        &amp;quot;translation_key&amp;quot;: &amp;quot;&amp;quot;,
        &amp;quot;event_type&amp;quot;: &amp;quot;mute&amp;quot;,
        &amp;quot;recipient&amp;quot;: &amp;quot;reporting_unit&amp;quot;
      },
      {
        &amp;quot;translation_key&amp;quot;: &amp;quot;&amp;quot;,
        &amp;quot;event_type&amp;quot;: &amp;quot;unmute&amp;quot;,
        &amp;quot;recipient&amp;quot;: &amp;quot;reporting_unit&amp;quot;
      },
      {
        &amp;quot;translation_key&amp;quot;: &amp;quot;&amp;quot;,
        &amp;quot;event_type&amp;quot;: &amp;quot;already_muted&amp;quot;,
        &amp;quot;recipient&amp;quot;: &amp;quot;reporting_unit&amp;quot;
      },
      {
        &amp;quot;translation_key&amp;quot;: &amp;quot;&amp;quot;,
        &amp;quot;event_type&amp;quot;: &amp;quot;already_unmuted&amp;quot;,
        &amp;quot;recipient&amp;quot;: &amp;quot;reporting_unit&amp;quot;
      },
      {
        &amp;quot;translation_key&amp;quot;: &amp;quot;&amp;quot;,
        &amp;quot;event_type&amp;quot;: &amp;quot;contact_not_found&amp;quot;,
        &amp;quot;recipient&amp;quot;: &amp;quot;reporting_unit&amp;quot;
      }
    ]
  }
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;self_report&#34;&gt;self_report&lt;/h3&gt;
&lt;p&gt;Updates a &lt;code&gt;data_record&lt;/code&gt; to set its patient to its sender. The resulting doc will have &lt;code&gt;fields.patient_uuid&lt;/code&gt; and &lt;code&gt;fields.patient_id&lt;/code&gt; filled with the sender&amp;rsquo;s information. Provides hydrated patient information to subsequent transitions.
The &lt;code&gt;sender&lt;/code&gt; is the contact associated with the phone number that sent the original SMS.&lt;br&gt;
If a doc already contains a &lt;code&gt;patient&lt;/code&gt; field, does not have a sender or its &lt;code&gt;form&lt;/code&gt; is not configured to be enabled for this transition, it will be ignored.&lt;/p&gt;
&lt;h4 id=&#34;configuration-5&#34;&gt;Configuration&lt;/h4&gt;
&lt;p&gt;Configuration is stored in the &lt;code&gt;self_report&lt;/code&gt; field of &lt;code&gt;app_settings.json&lt;/code&gt; as a list of objects connecting forms to messages.
Every object should have this structure:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;form&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Form code. &lt;strong&gt;Required&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;messages&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;List of tasks/errors that will be created, determined by &lt;code&gt;event_type&lt;/code&gt;. Optional.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Supported &lt;code&gt;events_types&lt;/code&gt; are:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Event Type&lt;/th&gt;
&lt;th&gt;Trigger&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;report_accepted&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;On successful sender updating&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;sender_not_found&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Sender not found&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&#34;example-2&#34;&gt;Example&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;self_report&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;form&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;FORM&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;messages&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;event_type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;report_accepted&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;recipient&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;reporting_unit&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;translation_key&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;messages.form.report_accepted&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;event_type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;sender_not_found&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;recipient&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;reporting_unit&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;translation_key&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;messages.form.sender_not_found&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;form&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;OTHER&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;messages&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;event_type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;report_accepted&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;recipient&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;reporting_unit&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;translation_key&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;messages.other.report_accepted&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;event_type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;sender_not_found&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;recipient&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;reporting_unit&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;translation_key&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;messages.other.sender_not_found&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Apps: User Permissions</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/user-permissions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/user-permissions/</guid>
      <description>
        
        
        &lt;h3 id=&#34;app_settingsjson-permissions&#34;&gt;&lt;code&gt;app_settings.json .permissions{}&lt;/code&gt;&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;placeholder&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: User Roles</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/reference/user-roles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/reference/user-roles/</guid>
      <description>
        
        
        &lt;p&gt;Each user is assigned one of the defined roles. Roles can be defined using the App Management app, which is represented by the &lt;code&gt;roles&lt;/code&gt; object of the &lt;code&gt;app-settings.json&lt;/code&gt; file. Each role is defined by an identifier as the key, and an object with the following properties:&lt;/p&gt;
&lt;h3 id=&#34;app_settingsjson-roles&#34;&gt;&lt;code&gt;app_settings.json .roles{}&lt;/code&gt;&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The translation key for this role&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;offline&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Determines if user will be an online or offline user. Set to &lt;code&gt;false&lt;/code&gt; for users to be &amp;ldquo;online&amp;rdquo; users.&lt;/td&gt;
&lt;td&gt;No, default &lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Building Workflows</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/concepts/workflows/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/concepts/workflows/</guid>
      <description>
        
        
        &lt;p&gt;Workflows can be defined within apps built with the Core Framework to connect actions and data with people. Forms are the main building block of tasks and messaging workflows, and are useful in creating reminders for follow-up visits or referrals.&lt;/p&gt;
&lt;h2 id=&#34;tasks&#34;&gt;Tasks&lt;/h2&gt;
&lt;figure class=&#34;right col-6 col-lg-3&#34;&gt;&lt;a href=&#34;tasks.png&#34;&gt;
    &lt;img src=&#34;tasks.png&#34;/&gt; &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Tasks within the app can drive a workflow, ensuring that the right actions are taken for people at the right time. Tasks indicate a recommended action to the user. They indicate who the user should perform the action with, and the recommended timeframe of that action. When the user taps the task, they are directed to a form where the details of the action are captured.&lt;/p&gt;
&lt;p&gt;Tasks can be triggered by a set of conditions, such as contact details or submitted reports. Tasks are accessible in the Tasks tab and the profile in the Contact tab, and initiate a follow up action to complete a form. More information on building app workflows is available in the &lt;a href=&#34;&#34;&gt;Tasks section&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Data submitted in one form can generate several tasks at once, for example, multiple ANC visits following one pregnancy registration. Some workflows involve a series of sequential forms and tasks, such as a child health assessment form, a follow up task scheduled 48 hours later, a referral form (only if the child’s condition hasn’t improved), and then a referral follow up task. Tasks are accessible on the Tasks tab, as well as the Tasks section of profiles.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See Also:&lt;/em&gt; &lt;a href=https://docs.communityhealthtoolkit.org/beta/apps/reference/tasks/#&gt;Defining Tasks&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;sms-messaging&#34;&gt;SMS Messaging&lt;/h2&gt;
&lt;figure class=&#34;right col-6 col-lg-3&#34;&gt;&lt;a href=&#34;messaging.png&#34;&gt;
    &lt;img src=&#34;messaging.png&#34;/&gt; &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Workflows can include notifications and interactions with CHWs, nurses, supervisors, and patients via SMS. A report can trigger SMS messages to be sent immediately or upon a set schedule. Responses via SMS or the app can update the workflows.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See Also:&lt;/em&gt; &lt;a href=https://docs.communityhealthtoolkit.org/beta/apps/reference/workflows-sms/#&gt;Defining SMS Workflows&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;interoperability&#34;&gt;Interoperability&lt;/h2&gt;
&lt;p&gt;Workflows can incorporate other digital tools, such as a facility-based electronic medical record system for referral workflows. New contacts or reports can trigger an interoperabilty workflow using the &lt;a href=&#34;&#34;&gt;outbound push&lt;/a&gt; feature. Data can be received as reports using the &lt;a href=&#34;https://github.com/medic/cht-core/tree/master/api&#34;&gt;CHT API&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See Also:&lt;/em&gt; &lt;a href=https://docs.communityhealthtoolkit.org/beta/apps/reference/outbound/#&gt;Outbound Push&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Configurable Hierarchies</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/concepts/hierarchy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/concepts/hierarchy/</guid>
      <description>
        
        
        &lt;p&gt;The Core Framework requires a hierarchy to organize the information in the app. It is often based on the hierarchy of a health system within a particular geographic region.&lt;/p&gt;
&lt;p&gt;Large deployment sites often need three or more levels of place hierarchy, while some small sites need fewer than three levels. For this reason, the Core Framework’s information hierarchies are configurable to meet a users needs.&lt;/p&gt;
&lt;p&gt;A user logging into their app will see a custom set of people, tasks, reports, and analytics based on the hierarchy level that they belong to. This allows appropriate data sharing based on the role of the user in the health system.&lt;/p&gt;
&lt;p&gt;The information hierarchy is configured in the administration console. The hierarchy levels can be given different titles depending on a particular health system’s program or reporting structures.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See Also:&lt;/em&gt; &lt;a href=https://docs.communityhealthtoolkit.org/beta/apps/reference/hierarchy/#&gt;Defining Hierarchy&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;places&#34;&gt;Places&lt;/h3&gt;
&lt;p&gt;This is an example of a simple hierarchy that includes a CHW Supervisor area, CHW area, and families as levels which serve as “places” or units of organizing people.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;hierarchy-with-places.png&#34; alt=&#34;hierarchy-with-places.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;User roles can be assigned to log in at any of these levels. For example, it would be customary for a CHW to log in at the CHW Area level and view the families, and below that the people, i.e. patients or family members, who belong there.&lt;/p&gt;
&lt;h3 id=&#34;people&#34;&gt;People&lt;/h3&gt;
&lt;p&gt;The hierarchy can be modeled after the health system, health program and/or the community.  All people are associated with a place and these places can be associated to each other.&lt;/p&gt;
&lt;p&gt;For example, a Family Member is part of a Family. A Family and CHWs are part of a CHW Area. A Family Member, a Family, and CHWs are part of a CHW Supervisor Area.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;hierarchy-with-people.png&#34; alt=&#34;hierarchy-with-people.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Additional hierarchy levels may be added as needed and each section of the hierarchy is configurable. For instance, many large projects have unbalanced hierarchies, which is to say, some parts of the hierarchy have more or different layers than others.
The Admin level operates outside of the hierarchy structure and enables access to all levels and people within the hierarchy.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Users</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/concepts/users/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/concepts/users/</guid>
      <description>
        
        
        &lt;p&gt;Apps built with the Core Framework use roles and permissions to determine who has access to what data. User roles are general categories you can use to assign a collection of broad permissions to users. There are two classes of roles: online and offline. Generally speaking, CHWs are usually offline users, while managers and nurses are usually online users. SMS users do not use the app, and thus do not have a user role.&lt;/p&gt;
&lt;h2 id=&#34;roles&#34;&gt;Roles&lt;/h2&gt;
&lt;p&gt;Differing levels of access and permissions are assigned to each persona. A user role is created to provide them with access to the information they need. Offline and online access, storage limitations, and data privacy are taken into account.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Persona&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Hierarchy&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Device&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Permissions&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Program Officer&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Logs in as Admin&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Computer&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Admin users, usually Program Officers, are online-only admin users not associated to a particular level. They have access to all people, places, and records in the app, but since they are online-only users, they cannot view any tasks or targets.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;CHW Supervisors&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Logs in at Health Facility level&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Tablet&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;User at this level have online and offline access to view CHWs, fill out reports about them, and view tasks and targets related to them. Due to storage limitations, they aren’t able to view households or submit reports and review tasks and targets about them.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;CHWs&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Logs in at CHW Area level&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Phone&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Users at this level have online and offline access to view households and family members, submit reports about them, and view tasks and targets about them.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Family members&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Registered at Household level, does not log in&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Messaging&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Family members might include fathers, mothers, children, and other adults. The program model determines which family members should be registered in the app. However, they are not users of the app, and do not log in themselves.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;em&gt;See Also:&lt;/em&gt; &lt;a href=https://docs.communityhealthtoolkit.org/beta/apps/reference/user-roles/#&gt;Defining User Roles&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;online-users&#34;&gt;Online Users&lt;/h3&gt;
&lt;p&gt;Online roles are for users who need access to a lot of data and need to maintain the system or update system settings. An internet connection is required.&lt;/p&gt;
&lt;h3 id=&#34;offline-users&#34;&gt;Offline Users&lt;/h3&gt;
&lt;p&gt;Offline roles are for users who need to be able to access data on the go in the field, don’t need to maintain the system, and don’t have a reliable internet connection. All the data they have access to will be synced to their device.&lt;/p&gt;
&lt;h2 id=&#34;permissions&#34;&gt;Permissions&lt;/h2&gt;
&lt;figure class=&#34;right col-6 col-lg-3&#34;&gt;&lt;a href=&#34;user-permissions.png&#34;&gt;
    &lt;img src=&#34;user-permissions.png&#34;/&gt; &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;User Permissions are settings that can be individually toggled on or off to allow users with a particular Role to do a certain action or see a certain thing. CHT app developers and administrators can add as many User Roles as needed to grant permissions to different groups of users.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See Also:&lt;/em&gt; &lt;a href=https://docs.communityhealthtoolkit.org/beta/apps/reference/user-permissions/#&gt;Defining User Permissions&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Viewing permissions determine which page tabs a user sees in the app and which types of data they do and don’t have access to. User action permissions include who can create (e.g., create new users), who can delete (e.g., delete reports), who can edit (e.g., edit profiles), and who can export (e.g., export server logs).&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Interoperability</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/concepts/interoperability/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/concepts/interoperability/</guid>
      <description>
        
        
        &lt;p&gt;&lt;em&gt;Interoperability&lt;/em&gt; and &lt;em&gt;Integration&lt;/em&gt; are often used interchangeably but mean different things. &lt;a href=&#34;https://www.linkedin.com/pulse/lets-talk-interoperability-vs-integration-mike-fleck&#34;&gt;This&lt;/a&gt; article offers a useful delineation between the two.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;With &lt;strong&gt;interoperability&lt;/strong&gt;, systems work together, even if they weren’t designed specifically to work together, because standard communication protocol techniques are applied. Two (or more) systems that weren&amp;rsquo;t designed to be interoperable require &lt;strong&gt;integration&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://ohie.org/&#34;&gt;OpenHIE&lt;/a&gt;, &lt;a href=&#34;https://www.hl7.org/fhir/index.html&#34;&gt;HL7 FHIR&lt;/a&gt;, &lt;a href=&#34;https://www.who.int/classifications/icd/factsheet/en/&#34;&gt;ICD-10&lt;/a&gt;, &lt;a href=&#34;https://loinc.org/&#34;&gt;LOINC&lt;/a&gt;, etc&amp;hellip; are examples of healthcare related protocols and standards used to achieve interoperability. CHT Core can be configured to support many of these standards and also exchange data with other systems through &lt;em&gt;integrations&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See Also:&lt;/em&gt; &lt;a href=https://docs.communityhealthtoolkit.org/beta/apps/features/integrations/#&gt;Integrations&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Africa&#39;s Talking SMS Aggregator</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/africas-talking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/africas-talking/</guid>
      <description>
        
        
        &lt;p&gt;As of v3.6.0, SMS messages can be sent and received using the &lt;a href=&#34;https://africastalking.com&#34;&gt;Africa&amp;rsquo;s Talking&lt;/a&gt; service.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;sms-aggregator-workflow.svg&#34; alt=&#34;SMS Aggregator Workflow&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;africas-talking-configuration&#34;&gt;Africa&amp;rsquo;s Talking configuration&lt;/h2&gt;
&lt;p&gt;First generate a long unique key to use as the &lt;code&gt;medic-api-key&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Log on to the &lt;a href=&#34;https://account.africastalking.com&#34;&gt;Africa&amp;rsquo;s Talking Dashboard&lt;/a&gt; and configure your callback URLs as follows.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Delivery Reports: &lt;code&gt;https://&amp;lt;hostname&amp;gt;/api/v1/sms/africastalking/delivery-reports?key=&amp;lt;medic-api-key&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Incoming Messages: &lt;code&gt;https://&amp;lt;hostname&amp;gt;/api/v1/sms/africastalking/incoming-messages?key=&amp;lt;medic-api-key&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then generate an &amp;ldquo;API Key&amp;rdquo; (we&amp;rsquo;ll refer to this as the &lt;code&gt;at-api-key&lt;/code&gt;) and save this in your Medic configuration covered below.&lt;/p&gt;
&lt;h2 id=&#34;medic-configuration&#34;&gt;Medic configuration&lt;/h2&gt;
&lt;h3 id=&#34;api-keys&#34;&gt;API keys&lt;/h3&gt;
&lt;p&gt;The API keys should be treated as securely as a password as anyone with access to them will be able to send messages using your account. Therefore we store them in the CouchDB configuration.&lt;/p&gt;
&lt;p&gt;To add the credentials to the admin config you need to either &lt;a href=&#34;https://docs.couchdb.org/en/stable/api/server/configuration.html#put--_node-node-name-_config-section-key&#34;&gt;PUT the value using curl&lt;/a&gt; or similar:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;curl -X PUT https://&amp;lt;user&amp;gt;:&amp;lt;pass&amp;gt;@&amp;lt;domain&amp;gt;/_node/couchdb@127.0.0.1/_config/medic-credentials/africastalking.com:incoming -d &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;&amp;#34;&amp;lt;medic-api-key&amp;gt;&amp;#34;&amp;#39;&lt;/span&gt;
curl -X PUT https://&amp;lt;user&amp;gt;:&amp;lt;pass&amp;gt;@&amp;lt;domain&amp;gt;/_node/couchdb@127.0.0.1/_config/medic-credentials/africastalking.com:outgoing -d &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;&amp;#34;&amp;lt;at-api-key&amp;gt;&amp;#34;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;(Note that &lt;code&gt;couchdb@127.0.0.1&lt;/code&gt; is the local node name, and may be different for you depending on your setup.)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;You can also add it via Fauxton:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Navigate to &lt;a href=&#34;http://localhost:5984/_utils/#/_config&#34;&gt;the Config screen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Add Option&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;Section&lt;/code&gt; should be &lt;code&gt;medic-credentials&lt;/code&gt;, the &lt;code&gt;Name&lt;/code&gt; should be &lt;code&gt;africastalking.com:incoming&lt;/code&gt; or &lt;code&gt;africastalking.com:outgoing&lt;/code&gt;, and the value should be the relevant API key.&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Create&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;You should then be able to see your credential in the list of configuration shown&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;app-settings&#34;&gt;App settings&lt;/h3&gt;
&lt;p&gt;Update your app settings as follows.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;sms&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;outgoing_service&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;africas-talking&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;reply_to&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;lt;africa&amp;#39;s talking shortcode&amp;gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;africas_talking&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;username&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;lt;africa&amp;#39;s talking username&amp;gt;&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;testing&#34;&gt;Testing&lt;/h2&gt;
&lt;p&gt;To test your integration, set your &amp;ldquo;username&amp;rdquo; to &amp;ldquo;sandbox&amp;rdquo;, log in to &lt;a href=&#34;https://account.africastalking.com&#34;&gt;Africa&amp;rsquo;s Talking&lt;/a&gt;, and go to the Sandbox app.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: DHIS2 Aggregate</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/dhis2-aggregate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/dhis2-aggregate/</guid>
      <description>
        
        
        &lt;p&gt;One of the first things you’ll need to do is identify the specific &lt;a href=&#34;https://docs.dhis2.org/2.34/en/dhis2_implementation_guide/data-sets-and-forms.html#what-is-a-data-set&#34;&gt;DHIS2 data set&lt;/a&gt; that you plan to implement. You’ll need a list of all the &lt;a href=&#34;https://docs.dhis2.org/2.34/en/dhis2_implementation_guide/data-elements-and-custom-dimensions.html#data-elements&#34;&gt;data elements&lt;/a&gt; on that data set, a detailed understanding of how each is calculated, the frequency in which the data set is submitted (weekly, monthly, etc…), and for which &lt;a href=&#34;https://docs.dhis2.org/2.34/en/dhis2_implementation_guide/organisation-units.html&#34;&gt;organisation units&lt;/a&gt; the data set applies. You’ll also want to identify and engage the appropriate DHIS2 stakeholders to get access to DHIS2 metadata, test environments, and discuss workflows. The DHIS2 documentation site provides additional background and advice &lt;a href=&#34;https://docs.dhis2.org/2.34/en/dhis2_implementation_guide/integration-concepts.html#integration-concepts&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;design-considerations&#34;&gt;Design Considerations&lt;/h2&gt;
&lt;p&gt;There are a few very important considerations related to how you design workflows and set up your CHT application to make sure you will be able to integrate with DHIS2. The main areas are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Hierarchies&lt;/li&gt;
&lt;li&gt;Fields and calculations&lt;/li&gt;
&lt;li&gt;Workflows and user access.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;These considerations are summarized below.&lt;/p&gt;
&lt;h3 id=&#34;hierarchies&#34;&gt;Hierarchies&lt;/h3&gt;
&lt;p&gt;The CHT relies on your Place hierarchy to determine how data should be aggregated for DHIS2. As such, it’s important that you consider how organization units are configured in the DHIS2 instance that you need to integrate data into. If your CHT Place hierarchy does not align with the DHIS2 organisation unit structure, the CHT will not be able to aggregate data in the way DHIS2 needs it.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;TIP: There should be a one-to-one relationship between DHIS2 organistion units and CHT places.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See Also:&lt;/em&gt; &lt;a href=https://docs.communityhealthtoolkit.org/beta/apps/concepts/hierarchy/#&gt;Hierarchies&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;fields-and-calculations&#34;&gt;Fields and calculations&lt;/h3&gt;
&lt;p&gt;It’s important to understand each data element on the DHIS2 data set you want to integrate data into and how each data element is calculated. When you are designing your forms in the CHT, you will need to make sure you are capturing information in your forms so that every data element on the chosen DHIS2 data set can be calculated within the CHT.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;TIP: Once you obtain the list of data elements on the data set, be sure to go through them one by one and figure out how to calculate each one using information available in your CHT forms.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;workflows-and-user-access&#34;&gt;Workflows and User Access&lt;/h3&gt;
&lt;p&gt;The aggregate data workflow is really designed around 3 key user personas. You’ll need to make sure that your context can support those assumptions and will be able to have access to the appropriate features in the CHT and DHIS2.&lt;/p&gt;
&lt;p&gt;Moving data from the CHT to DHIS2 can be done in three main ways.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Manually downloading from the CHT&lt;/li&gt;
&lt;li&gt;Building an app in DHIS2 and calling an API in the CHT&lt;/li&gt;
&lt;li&gt;Orchestrating the steps using an interoperability layer such as &lt;a href=&#34;http://openhim.org/&#34;&gt;OpenHIM&lt;/a&gt;, &lt;a href=&#34;https://www.openfn.org/&#34;&gt;OpenFn&lt;/a&gt;, etc&amp;hellip;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;Once you have designed your hierarchies, forms, calculations, and workflows, there are a few key configurations that need to be made.&lt;/p&gt;
&lt;h3 id=&#34;data-sets&#34;&gt;Data sets&lt;/h3&gt;
&lt;p&gt;For the CHT to be able to export the file for DHIS2, it needs to know the specific name and ID of the data set in DHIS2. You will need to obtain the ID from the test or production DHIS2 environment.&lt;/p&gt;
&lt;p&gt;Configure the data set in &lt;code&gt;app_settings.json&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See Also:&lt;/em&gt; &lt;a href=https://docs.communityhealthtoolkit.org/beta/apps/reference/dhis2/#&gt;DHIS2 Reference&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;organisation-units&#34;&gt;Organisation units&lt;/h3&gt;
&lt;p&gt;Aggregation in the CHT is based on your Place hierarchy. As mentioned in the Hierarchies Design Considerations above, your Places must align with DHIS2 organisation units. You will need to specify the DHIS2 organisation unit&amp;rsquo;s ID on the Place document in the CHT.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Update the contact document of each place you wish to map to an organisation unit. Add a &lt;code&gt;dhis.orgUnit&lt;/code&gt; attribute.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;my_place&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;health_center&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;dhis&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;orgUnit&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;HJiPOcmziQA&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;data-elements&#34;&gt;Data elements&lt;/h3&gt;
&lt;p&gt;Calculations for DHIS2 indicators are done using CHT Target functionality. For each DHIS2 data element, you will need to configure a corresponding CHT Target and specify the ID of the DHIS2 data element.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;In &lt;code&gt;targets.js&lt;/code&gt;, configure one or more data elements by setting the &lt;code&gt;dhis.dataElement&lt;/code&gt; attribute in the target schema.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;module&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;births-this-month&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;count&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;icon&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;icon-infant&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;translation_key&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;targets.births.title&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;subtitle_translation_key&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;targets.this_month.subtitle&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;goal&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesTo&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;contacts&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesToType&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;person&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesIf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;!!&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;date&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;date_of_birth&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;dhis&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;dataElement&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;kB0ZBFisE0e&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;users&#34;&gt;Users&lt;/h3&gt;
&lt;p&gt;For the HRIO role, create a new user role and a new user with that role; or update an existing user role. To export DHIS2 metrics, users need to have the following permissions: &lt;code&gt;can_configure&lt;/code&gt;, &lt;code&gt;can_export_all&lt;/code&gt;, and &lt;code&gt;can_export_dhis&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;user-experience&#34;&gt;User experience&lt;/h2&gt;
&lt;p&gt;Once your CHT project is configured to integrate with DHIS2, follow these steps to export the data from CHT and import it into DHIS:&lt;/p&gt;
&lt;h3 id=&#34;export-data&#34;&gt;Export data&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Login to the CHT instance using a user account with the required permissions. You should be automatically navigated to the Admin Console.&lt;/li&gt;
&lt;li&gt;Select &amp;ldquo;Import &amp;amp; export data&amp;rdquo; from the side&lt;/li&gt;
&lt;li&gt;Select &amp;ldquo;DHIS2&amp;rdquo; from the header along the top&lt;/li&gt;
&lt;li&gt;Select the data set, org unit, and time period that you&amp;rsquo;d like to send to DHIS2. Click &amp;ldquo;Export&amp;rdquo;&lt;/li&gt;
&lt;li&gt;A file should download in your browser. This file contains a &lt;a href=&#34;https://docs.dhis2.org/master/en/developer/html/webapi_data_values.html&#34;&gt;dataValueSet&lt;/a&gt; with aggregated user&amp;rsquo;s data.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;import-data&#34;&gt;Import data&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Login to DHIS2 using a user account with permission to manage the relevant dataset and organisation units.&lt;/li&gt;
&lt;li&gt;Select the &amp;ldquo;import/export&amp;rdquo; application inside DHIS2. Select &amp;ldquo;import data&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;Upload the file you downloaded in Step 5.&lt;/li&gt;
&lt;li&gt;Click &amp;ldquo;Import&amp;rdquo;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Check the UI for any errors. If you get errors you don&amp;rsquo;t understand or are unable to resolve an error, you can always ask for assistance on the &lt;a href=&#34;https://forum.communityhealthtoolkit.org/c/support/18&#34;&gt;CHT Forum&lt;/a&gt;. If there are no errors, you can review the numbers that resulted by reviewing the data set in DHIS2.&lt;/p&gt;
&lt;h2 id=&#34;known-limitations&#34;&gt;Known limitations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Data for each user is aggregated based on the contents of the user&amp;rsquo;s target document. Note that if your users don&amp;rsquo;t login and synchronize, their data won&amp;rsquo;t be represented in the exported data.&lt;/li&gt;
&lt;li&gt;Integrations are limited to &lt;em&gt;monthly&lt;/em&gt; DHIS2 data sets.&lt;/li&gt;
&lt;li&gt;Integrations are limited to numeric data-types. To support other data types, consider making a &lt;a href=&#34;https://docs.dhis2.org/master/en/developer/html/apps_creating_apps.html&#34;&gt;DHIS2 App&lt;/a&gt; for your project.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Moving Contacts within the Hierarchy</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/moving-contacts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/moving-contacts/</guid>
      <description>
        
        
        &lt;p&gt;Contacts are organized into a hierarchy. It is not straight-forward to move contacts from one position in the hierarchy to another because many copies of this hierarchy exist. Use the &lt;code&gt;move-contacts&lt;/code&gt; action in &lt;a href=&#34;https://github.com/medic/medic-conf&#34;&gt;&lt;code&gt;medic-conf&lt;/code&gt;&lt;/a&gt; to assign a new parent to contacts. This command will move the specified contact, all the contacts under that contact, and all reports created by any of those contacts. This action will download all documents that need to be updated, update the lineages within those documents, and then save the updated documents on your local disk. To commit those changes to the database, run the &lt;code&gt;upload-docs&lt;/code&gt; action.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Offline users who have contacts removed from their visible hierarchy will not automatically see those contacts disappear. The contact remains on the user&amp;rsquo;s device. Any updates made to the contact (or any reports created for that contact) will silently fail to sync (medic/medic/#5701). These users must be encouraged to clear cache and resync!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Also impactful, but less serious - this script can cause significant amounts of changes to the database and offline users who have contacts moved into their visible hierarchy may experience lengthy and bandwidth-intensive synchronizations.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;contacts&lt;/td&gt;
&lt;td&gt;Comma delimited list of contact IDs which will be moved&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;parent&lt;/td&gt;
&lt;td&gt;ID of the new parent which will be assigned to the provided contacts&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;docDirectoryPath&lt;/td&gt;
&lt;td&gt;This action outputs files to local disk at this destination&lt;/td&gt;
&lt;td&gt;No. Default &lt;code&gt;json-docs&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Some constraints when moving contacts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Allowed Parents&lt;/strong&gt; - When moving contacts on WebApp &amp;gt;v3.7, your chosen parent must be listed as a valid parent for the contact as defined in the &lt;a href=&#34;https://github.com/medic/medic-docs/blob/master/configuration/app-settings.md#configuring-place-hierarchy&#34;&gt;configuration for place hierarchy&lt;/a&gt;. For WebApp &amp;lt;v3.7, the default hierarchy is enforced.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Circular Hierarchy&lt;/strong&gt; - Nobody&amp;rsquo;s parent can ever be themself or their child.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Primary Contacts&lt;/strong&gt; - Primary contacts must be a descendant of the place for which they are the primary contact. You may need to select a new primary contact for a place through the WebApp if you&amp;rsquo;d like to move a primary contact to a new place in the hierarchy.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Minification&lt;/strong&gt; - Due to contact &amp;ldquo;minification&amp;rdquo; (#2635) which was implemented in v2.13, this script should not be used for versions prior to v2.13.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;p&gt;Move the contacts with the id &lt;code&gt;contact_1&lt;/code&gt; and &lt;code&gt;contact_2&lt;/code&gt; to have the parent &lt;code&gt;parent_id&lt;/code&gt;. The changes will be in the local folder &lt;code&gt;my_folder&lt;/code&gt; only for review. Run the second command to upload the changes after review.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;medic-conf --instance= move-contacts -- --contacts=contact_1,contact_2 --parent=parent_id --docDirectoryPath=my_folder
medic-conf --local upload-docs -- --docDirectoryPath=my_folder
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Move the contact with the id &lt;code&gt;contact_1&lt;/code&gt; to the top of the hierarchy (no parent).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;medic-conf --local move-contacts upload-docs -- --contacts=contact_1 --parent=root
&lt;/code&gt;&lt;/pre&gt;

      </description>
    </item>
    
  </channel>
</rss>
