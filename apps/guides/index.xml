<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Community Health Toolkit – Quick Guides for Implementers</title>
    <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/</link>
    <description>Recent content in Quick Guides for Implementers on Community Health Toolkit</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://docs.communityhealthtoolkit.org/beta/apps/guides/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Apps: Creating Additional Docs from App Forms</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/additional-docs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/additional-docs/</guid>
      <description>
        
        
        &lt;p&gt;In version 2.13.0 and higher, you can configure app forms to generate additional docs upon submission. You can create one or more docs using variations on the configuration described below. One case where this can be used is to register a newborn from a delivery report, as shown below. First, here is an overview of what you can do and how the configuration should look in XML:&lt;/p&gt;
&lt;h2 id=&#34;extra-docs&#34;&gt;Extra Docs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Extra docs can be added by defining structures in the model with the attribute db-doc=&amp;quot;true&amp;rdquo;. &lt;strong&gt;Note that you must have lower-case &lt;code&gt;true&lt;/code&gt; in your XLSform, even though Excel will default to &lt;code&gt;TRUE&lt;/code&gt;.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;example-form-model&#34;&gt;Example Form Model&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;data&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;root_prop_1&amp;gt;&lt;/span&gt;val A&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/root_prop_1&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;other_doc&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;db-doc=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;whatever&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;other_prop&amp;gt;&lt;/span&gt;val B&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/other_prop&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/other_doc&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/data&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;resulting-docs&#34;&gt;Resulting Docs&lt;/h3&gt;
&lt;p&gt;Report (as before):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
  _id: &#39;...&#39;,
  _rev: &#39;...&#39;,
  type: &#39;report&#39;,
  _attachments: { xml: ... ],
  fields: {
    root_prop_1: &#39;val A&#39;,
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Other doc:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_rev&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;whatever&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;other_prop&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;val B&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;linked-docs&#34;&gt;Linked Docs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Linked docs can be referred to using the doc-ref attribute, with an xpath. This can be done at any point in the model, e.g.:&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;example-form-model-1&#34;&gt;Example Form Model&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;sickness&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;sufferer&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;db-doc-ref=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/sickness/new&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;new&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;db-doc=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;person&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Gómez&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;original_report&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;db-doc-ref=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/sickness&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/new&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/sickness&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;resulting-docs-1&#34;&gt;Resulting Docs&lt;/h3&gt;
&lt;p&gt;Report:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;abc-123&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_rev&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;report&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;fields&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;sufferer&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;def-456&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Other doc:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
  &amp;quot;_id&amp;quot;: &amp;quot;def-456&amp;quot;,
  &amp;quot;_rev&amp;quot;: &amp;quot;...&amp;quot;,
  &amp;quot;type&amp;quot;: &amp;quot;person&amp;quot;,
  &amp;quot;name&amp;quot;: &amp;quot;Gómez&amp;quot;,
  &amp;quot;original_report&amp;quot;: &amp;quot;abc-123&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;repeated-docs&#34;&gt;Repeated Docs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Can have references to other docs, including the parent&lt;/li&gt;
&lt;li&gt;These currently cannot be linked from other docs, as no provision is made for indexing these docs&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;example-form&#34;&gt;Example Form&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;thing&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Ab&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;related&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;db-doc=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;relative&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Bo&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;parent&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;db-doc-ref=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/thing&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/related&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;related&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;db-doc=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;relative&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Ca&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;parent&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;db-doc-ref=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/thing&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/related&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/artist&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;resulting-docs-2&#34;&gt;Resulting Docs&lt;/h3&gt;
&lt;p&gt;Report:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;abc-123&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_rev&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;report&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;fields&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Ab&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Other docs:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_rev&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;relative&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Bo&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;parent&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;abc-123&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_rev&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;relative&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Ch&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;parent&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;abc-123&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;linked-docs-example&#34;&gt;Linked Docs Example&lt;/h2&gt;
&lt;p&gt;This example shows how you would register a single newborn from a delivery report.&lt;/p&gt;
&lt;p&gt;First, the relevant section of the delivery report XLSForm file:
&lt;img src=&#34;linked_docs_xlsform.png&#34; alt=&#34;Delivery report&#34;&gt;&lt;/p&gt;
&lt;p&gt;Here is the corresponding portion of XML generated after converting the form:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;repeat&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;child_repeat&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;db-doc=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;jr:template=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;child_name/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;child_gender/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;child_doc&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;db-doc-ref=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34; /delivery/repeat/child_repeat &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;created_by_doc&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;db-doc-ref=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/delivery&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;name/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;sex/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;date_of_birth/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;parent&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;_id/&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;parent&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;_id/&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;parent&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;_id/&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/parent&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/parent&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/parent&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;person&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/child_repeat&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/repeat&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you&amp;rsquo;ve done your configuration correctly, all you should see when you click on the submitted report from the Reports tab is the &lt;code&gt;child_doc&lt;/code&gt; field with an &lt;code&gt;_id&lt;/code&gt; that corresponds to the linked doc. In this case, you could look for that &lt;code&gt;_id&lt;/code&gt; on the People tab or in the DB itself to confirm that the resulting doc looks correct.&lt;/p&gt;
&lt;h2 id=&#34;repeated-docs-example&#34;&gt;Repeated Docs Example&lt;/h2&gt;
&lt;p&gt;This example extends the above example to show how you would register one or multiple newborns from a delivery report. This allows you to handle multiple births.&lt;/p&gt;
&lt;p&gt;First, the relevant section of the delivery report XLSForm file:
&lt;img src=&#34;repeated_docs_xlsform.png&#34; alt=&#34;Delivery report&#34;&gt;&lt;/p&gt;
&lt;p&gt;Here is the corresponding portion of XML generated after converting the form:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;repeat&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;child_repeat&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;db-doc=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;jr:template=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;child_name/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;child_gender/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;created_by_doc&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;db-docs-ref=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/delivery&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;name/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;sex/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;date_of_birth/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;parent&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;_id/&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;parent&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;_id/&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;parent&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;_id/&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/parent&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/parent&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/parent&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;person&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/child_repeat&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/repeat&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you&amp;rsquo;ve done your configuration correctly, all you should see when you click on the submitted report from the Reports tab is that there will be no information on the children created. You will find the created docs as siblings to the subject of the previously submitted report. Each of these child docs will have a field &lt;code&gt;created_by_doc&lt;/code&gt; whose value is the &lt;code&gt;_id&lt;/code&gt; of the report that created them. You can also look in the DB itself to confirm that the resulting docs look correct.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Africa&#39;s Talking SMS Aggregator</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/africas-talking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/africas-talking/</guid>
      <description>
        
        
        &lt;p&gt;As of v3.6.0, SMS messages can be sent and received using the &lt;a href=&#34;https://africastalking.com&#34;&gt;Africa&amp;rsquo;s Talking&lt;/a&gt; service.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;sms-aggregator-workflow.svg&#34; alt=&#34;SMS Aggregator Workflow&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;africas-talking-configuration&#34;&gt;Africa&amp;rsquo;s Talking configuration&lt;/h2&gt;
&lt;p&gt;First generate a long unique key to use as the &lt;code&gt;medic-api-key&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Log on to the &lt;a href=&#34;https://account.africastalking.com&#34;&gt;Africa&amp;rsquo;s Talking Dashboard&lt;/a&gt; and configure your callback URLs as follows.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Delivery Reports: &lt;code&gt;https://&amp;lt;hostname&amp;gt;/api/v1/sms/africastalking/delivery-reports?key=&amp;lt;medic-api-key&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Incoming Messages: &lt;code&gt;https://&amp;lt;hostname&amp;gt;/api/v1/sms/africastalking/incoming-messages?key=&amp;lt;medic-api-key&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then generate an &amp;ldquo;API Key&amp;rdquo; (we&amp;rsquo;ll refer to this as the &lt;code&gt;at-api-key&lt;/code&gt;) and save this in your Medic configuration covered below.&lt;/p&gt;
&lt;h2 id=&#34;medic-configuration&#34;&gt;Medic configuration&lt;/h2&gt;
&lt;h3 id=&#34;api-keys&#34;&gt;API keys&lt;/h3&gt;
&lt;p&gt;The API keys should be treated as securely as a password as anyone with access to them will be able to send messages using your account. Therefore we store them in the CouchDB configuration.&lt;/p&gt;
&lt;p&gt;To add the credentials to the admin config you need to either &lt;a href=&#34;https://docs.couchdb.org/en/stable/api/server/configuration.html#put--_node-node-name-_config-section-key&#34;&gt;PUT the value using curl&lt;/a&gt; or similar:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;curl -X PUT https://&amp;lt;user&amp;gt;:&amp;lt;pass&amp;gt;@&amp;lt;domain&amp;gt;/_node/couchdb@127.0.0.1/_config/medic-credentials/africastalking.com:incoming -d &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;&amp;#34;&amp;lt;medic-api-key&amp;gt;&amp;#34;&amp;#39;&lt;/span&gt;
curl -X PUT https://&amp;lt;user&amp;gt;:&amp;lt;pass&amp;gt;@&amp;lt;domain&amp;gt;/_node/couchdb@127.0.0.1/_config/medic-credentials/africastalking.com:outgoing -d &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;&amp;#34;&amp;lt;at-api-key&amp;gt;&amp;#34;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;(Note that &lt;code&gt;couchdb@127.0.0.1&lt;/code&gt; is the local node name, and may be different for you depending on your setup.)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;You can also add it via Fauxton:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Navigate to &lt;a href=&#34;http://localhost:5984/_utils/#/_config&#34;&gt;the Config screen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Add Option&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;Section&lt;/code&gt; should be &lt;code&gt;medic-credentials&lt;/code&gt;, the &lt;code&gt;Name&lt;/code&gt; should be &lt;code&gt;africastalking.com:incoming&lt;/code&gt; or &lt;code&gt;africastalking.com:outgoing&lt;/code&gt;, and the value should be the relevant API key.&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Create&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;You should then be able to see your credential in the list of configuration shown&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;app-settings&#34;&gt;App settings&lt;/h3&gt;
&lt;p&gt;Update your app settings as follows.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;sms&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;outgoing_service&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;africas-talking&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;reply_to&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;lt;africa&amp;#39;s talking shortcode&amp;gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;africas_talking&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;username&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;lt;africa&amp;#39;s talking username&amp;gt;&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;testing&#34;&gt;Testing&lt;/h2&gt;
&lt;p&gt;To test your integration, set your &amp;ldquo;username&amp;rdquo; to &amp;ldquo;sandbox&amp;rdquo;, log in to &lt;a href=&#34;https://account.africastalking.com&#34;&gt;Africa&amp;rsquo;s Talking&lt;/a&gt;, and go to the Sandbox app.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Making Calls and Sending SMS from App Forms</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/app-form-sms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/app-form-sms/</guid>
      <description>
        
        
        &lt;h2 id=&#34;triggering-calls-and-sms&#34;&gt;Triggering Calls and SMS&lt;/h2&gt;
&lt;p&gt;When a XForm is loaded on a phone you can start a phone call or trigger the sending of an SMS within the form itself. This can be useful if within a task or assessment you want to tell the user to contact a patient, or perhaps a health worker at a facility.&lt;/p&gt;
&lt;p&gt;To set up the call or SMS you&amp;rsquo;ll need to create a link with &lt;code&gt;tel:&lt;/code&gt; or &lt;code&gt;sms:&lt;/code&gt; within a &lt;code&gt;note&lt;/code&gt; field. To create the link, use the markdown link format, eg &lt;code&gt;[Call Patient](tel:+2547009875000)&lt;/code&gt;. You can specify the content of the SMS by using the body parameter, eg &lt;code&gt;[Send SMS](sms://+25470098765000?body=Hello World!)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The phone number and message can be generated from fields within the XForm. For instance, if you have &lt;code&gt;patient_name&lt;/code&gt;, &lt;code&gt;patient_phone&lt;/code&gt; and &lt;code&gt;message&lt;/code&gt; fields, you can generate the SMS as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;XLSForm&lt;/strong&gt;
&lt;code&gt;[Send SMS to ${patient_name}](sms://${patient_phone}?body=${message})&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;XForm&lt;/strong&gt;
&lt;code&gt;[Send SMS to &amp;lt;output value=&amp;quot; /data/patient_name &amp;quot;/&amp;gt;](sms://&amp;lt;output value=&amp;quot; /data/patient_phone &amp;quot;/&amp;gt;?body=&amp;lt;output value=&amp;quot; /data/message &amp;quot;/&amp;gt;)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you want to use a button to make the action more obvious, this can be done using HTML and CSS within the note:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[&amp;lt;span style=&#39;background-color: #CC0000; color:white; padding: 1em; text-decoration: none; &#39;&amp;gt;Call the patient&amp;lt;/span&amp;gt;](tel:${patient_phone})
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note that the SMS link notation can be interpreted differently from one phone to another. Some devices work well with &lt;code&gt;sms:${phone}?body=${message}&lt;/code&gt;, others with &lt;code&gt;sms://${phone}?body=${message}&lt;/code&gt;. You may find &lt;a href=&#34;https://bradorego.com/test/sms.html&#34;&gt;these SMS link tests&lt;/a&gt; helpful in determining what works on devices for your deployment.&lt;/p&gt;
&lt;h2 id=&#34;sending-reports-as-sms&#34;&gt;Sending reports as SMS&lt;/h2&gt;
&lt;p&gt;To define that an XForm should be converted to an SMS, add the field &lt;code&gt;xml2sms&lt;/code&gt; to the form&amp;rsquo;s CouchDB doc and assign it a truthy value (either a boolean or a string).&lt;br&gt;
When submitting such a form, along with creating the report document, the app will try to compact the report&amp;rsquo;s content into an SMS that would be sent to the configured Gateway phone number.&lt;/p&gt;
&lt;p&gt;There are two formats available - either using the &lt;a href=&#34;https://opendatakit.github.io/xforms-spec/#compact-record-representation-(for-sms)&#34;&gt;ODK&amp;rsquo;s compact record representation for SMS&lt;/a&gt;, or Medic&amp;rsquo;s custom format.
When the form compaction fails or returns no content, no SMS will be sent.&lt;/p&gt;
&lt;h3 id=&#34;odk-compact-record-representation-for-sms&#34;&gt;ODK compact record representation for SMS&lt;/h3&gt;
&lt;p&gt;When &lt;code&gt;xml2sms&lt;/code&gt; field value is Boolean &lt;code&gt;true&lt;/code&gt;, the app will try to compact the form using this format.
To get forms sent in this format, follow the &lt;a href=&#34;https://opendatakit.github.io/xforms-spec/#compact-record-representation-(for-sms)&#34;&gt;ODK documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;medic-custom-sms-representation&#34;&gt;Medic Custom SMS representation&lt;/h3&gt;
&lt;p&gt;To configure a form to send using Medic&amp;rsquo;s custom SMS definition, the value of &lt;code&gt;xml2sms&lt;/code&gt; from the form&amp;rsquo;s CouchDB doc should be an string containing an &lt;a href=&#34;https://docs.angularjs.org/guide/expression&#34;&gt;Angular expression&lt;/a&gt;.
This allows access to the &lt;code&gt;fields&lt;/code&gt; property of the &lt;code&gt;data_record&lt;/code&gt; doc created when saving the form submission to the database.  Extra functions are also provided to make compiling a form submission more simple.&lt;/p&gt;
&lt;h4 id=&#34;special-functions&#34;&gt;Special Functions&lt;/h4&gt;
&lt;h5 id=&#34;concatargs&#34;&gt;&lt;code&gt;concat(...args)&lt;/code&gt;&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;...args&lt;/code&gt;: 0 or more values to be concatenated.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  concat(&#39;A&#39;, &#39;bee&#39;, &#39;Sea&#39;) =&amp;gt; &#39;AbeeSea&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;spacedargs&#34;&gt;&lt;code&gt;spaced(...args)&lt;/code&gt;&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;...args&lt;/code&gt;: 0 or more values to be concatenated with spaces between them.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  spaced(&#39;A&#39;, &#39;bee&#39;, &#39;Sea&#39;) =&amp;gt; &#39;A bee Sea&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;matchval-matchers&#34;&gt;&lt;code&gt;match(val, matchers)&lt;/code&gt;&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;val&lt;/code&gt;: the value to run matches against&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;matchers&lt;/code&gt;: a string representing values to match and their corresponding outputs&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  match(&#39;a&#39;, &#39;a:Hay,b:bzz,c:see&#39;) =&amp;gt; &#39;Hay&#39;
  match(&#39;b&#39;, &#39;a:Hay,b:bzz,c:see&#39;) =&amp;gt; &#39;bzz&#39;
  match(&#39;c&#39;, &#39;a:Hay,b:bzz,c:see&#39;) =&amp;gt; &#39;c&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;examples&#34;&gt;Examples&lt;/h4&gt;
&lt;h5 id=&#34;form-submission-json&#34;&gt;Form Submission JSON&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;doc.fields = {
  s_acc_danger_signs: {
    s_acc_danger_sign_seizure: &#39;no&#39;,
    s_acc_danger_sign_loss_consiousness: &#39;yes&#39;,
    s_acc_danger_sign_unable_drink: &#39;no&#39;,
    s_acc_danger_sign_confusion: &#39;yes&#39;,
    s_acc_danger_sign_vomit: &#39;no&#39;,
    s_acc_danger_sign_chest_indrawing: &#39;yes&#39;,
    s_acc_danger_sign_wheezing: &#39;no&#39;,
    s_acc_danger_sign_bleeding: &#39;yes&#39;,
    s_acc_danger_sign_lathargy: &#39;no&#39;,
    has_danger_sign: &#39;true&#39;,
  },
};
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;formdocreport2sms&#34;&gt;&lt;code&gt;formDoc.report2sms&lt;/code&gt;&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;concat(
    &amp;quot;U5 &amp;quot;,
    match(doc.s_acc_danger_signs.has_danger_sign, &amp;quot;true:DANGER, false:NO_DANGER&amp;quot;),
    &amp;quot; &amp;quot;,
    match(doc.s_acc_danger_signs.s_acc_danger_sign_seizure, &amp;quot;yes:S&amp;quot;),
    match(doc.s_acc_danger_signs.s_acc_danger_sign_loss_consiousness, &amp;quot;yes:L&amp;quot;),
    match(doc.s_acc_danger_signs.s_acc_danger_sign_unable_drink, &amp;quot;yes:D&amp;quot;),
    match(doc.s_acc_danger_signs.s_acc_danger_sign_confusion, &amp;quot;yes:C&amp;quot;),
    match(doc.s_acc_danger_signs.s_acc_danger_sign_vomit, &amp;quot;yes:V&amp;quot;),
    match(doc.s_acc_danger_signs.s_acc_danger_sign_chest_indrawing, &amp;quot;yes:I&amp;quot;),
    match(doc.s_acc_danger_signs.s_acc_danger_sign_wheezing, &amp;quot;yes:W&amp;quot;),
    match(doc.s_acc_danger_signs.s_acc_danger_sign_bleeding, &amp;quot;yes:B&amp;quot;),
    match(doc.s_acc_danger_signs.s_acc_danger_sign_lathargy, &amp;quot;yes:Y&amp;quot;)
)
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;sms-content&#34;&gt;SMS content&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;U5 DANGER LCIB&lt;/code&gt;&lt;/pre&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Contact Forms</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/contact-forms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/contact-forms/</guid>
      <description>
        
        
        &lt;p&gt;Contact forms are used to create person or place types. Prior to version 3.7, CHT Core supported 4 contact types - 3 place types (clinic, health_center, district_hospital) and one person type (person). From version 3.7, an unlimited number of place and person types are supported. Each contact-type should ideally have two forms; one for creation, and another for editing.&lt;/p&gt;
&lt;p&gt;These forms are stored in the &lt;code&gt;forms/contact&lt;/code&gt; subfolder of the project config directory. The naming convention used sould be &lt;code&gt;&amp;lt;contact_type_id-{create|edit}&amp;gt;.xlsx&lt;/code&gt;. The &lt;code&gt;contact_type_id&lt;/code&gt; prefix should match what&amp;rsquo;s specified in the contact form settings page.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See Also:&lt;/em&gt; &lt;a href=https://docs.communityhealthtoolkit.org/beta/apps/reference/contact-forms/#&gt;Reference Documentation for Contact Forms&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;person-type-forms&#34;&gt;Person-type forms&lt;/h2&gt;
&lt;p&gt;These have the simplest structure since we are only creating one thing - the actual contact. Below, we&amp;rsquo;ll look at the structure of the survey and settings sheets since these are critical to ensuring the contact is created correctly at the appropriate part of the hierarchy.&lt;/p&gt;
&lt;h3 id=&#34;survey-sheet&#34;&gt;Survey sheet&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;person-contact-form-survey.png&#34; alt=&#34;Person forms survey sheet&#34;&gt;&lt;/p&gt;
&lt;p&gt;Section 1 and 3 are optional. We can pull in details of the logged in user as shown in section 1 and use that to log some metadata on the created documents as shown in section 3.&lt;/p&gt;
&lt;p&gt;Section 2 contains the core components of what will be saved in couchdb. The group name needs to match the contact type id specified in app_settings.json (if using the configurable hierarchy) or &lt;code&gt;person&lt;/code&gt; if using the old-style hierarchy. To learn more about setting up configurable hieararchy, review the &lt;a href=&#34;https://docs.communityhealthtoolkit.org/beta/apps/reference/hierarchy/&#34;&gt;Hierarchy&lt;/a&gt; page. &lt;code&gt;parent&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;contact_type&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; attributes are mandatory for things to work correctly.&lt;/p&gt;
&lt;h2 id=&#34;settings-sheet&#34;&gt;Settings sheet&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;person-contact-form-settings.png&#34; alt=&#34;Person forms settings sheet&#34;&gt;&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ll need to replace &lt;code&gt;PLACE_NAME&lt;/code&gt; with a name that corresponds to the created contact type. We&amp;rsquo;ll also need to replace &lt;code&gt;PLACE_TYPE&lt;/code&gt; with the contact-type id specified in app_settings.json (for configurable ones) or &lt;code&gt;person&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;place-type-forms&#34;&gt;Place-type forms&lt;/h2&gt;
&lt;p&gt;The main difference between place type and person type forms is that we can optionally create one or more person-type documents one of which can be linked to the created place as a contact.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ll look at a simple structure of a place forms showing all the necessary components&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;place-contact-form-survey.png&#34; alt=&#34;Place forms survey sheet&#34;&gt;&lt;/p&gt;
&lt;p&gt;Section 1 is similar to what has been described earlier for person forms.&lt;/p&gt;
&lt;p&gt;Section 2 specifies the contact that will be linked to the place being created. &lt;code&gt;parent&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;contact_type&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; are mandatory. This also applies to the place-type definition in section 4. &lt;code&gt;contact&lt;/code&gt; on the other hand is not mandatory for the successful creation of a place. It usually more conventient to create a place and it&amp;rsquo;s primary contact at the same time.&lt;/p&gt;
&lt;p&gt;You can also create additional contacts linked to the place being created when you have a structure similar to that shown in section 3.&lt;/p&gt;
&lt;h2 id=&#34;contact-edit-forms&#34;&gt;Contact-edit forms&lt;/h2&gt;
&lt;p&gt;The edit forms are much simpler in structure and one can specify only the relevant fields that need editing. The name of the group should match the contact-type being edited and the field names should correspond to what is saved in Couchdb.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;contact-edit-form.png&#34; alt=&#34;Contact edit form survey sheet&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;generic-contact-forms&#34;&gt;Generic contact forms&lt;/h2&gt;
&lt;p&gt;If your place forms are similar across all levels of your specified project hiearachy, you can templatise the form creation process. You&amp;rsquo;ll need to create the following files: &lt;code&gt;place-type.json&lt;/code&gt;, &lt;code&gt;PLACE_TYPE-create.xlsx&lt;/code&gt; and &lt;code&gt;PLACE_TYPE-edit.xlsx&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;place-type.json&lt;/code&gt; maps the place contact-type to a human readable description that will be shown on the app&amp;rsquo;s user interface.&lt;/p&gt;
&lt;p&gt;Both &lt;code&gt;PLACE_TYPE-create.xlsx&lt;/code&gt; and &lt;code&gt;PLACE_TYPE-edit.xlsx&lt;/code&gt; will contain two placeholder values &lt;code&gt;PLACE_TYPE&lt;/code&gt; and &lt;code&gt;PLACE_NAME&lt;/code&gt; which will be replaced by the keys and values specified in &lt;code&gt;place-type.json&lt;/code&gt; respectively during form conversion. Also, copies of the different place-type forms will be created (if they don&amp;rsquo;t exist) during the form conversion process with &lt;code&gt;PLACE_TYPE&lt;/code&gt; being replaced with the keys specified in &lt;code&gt;place-type.json&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For examples on how to structure the above files you can have a look at the sample configurations in CHT-core: &lt;a href=&#34;https://github.com/medic/cht-core/tree/master/config/default/forms/contact&#34;&gt;default&lt;/a&gt; and &lt;a href=&#34;https://github.com/medic/cht-core/tree/master/config/standard/forms/contact&#34;&gt;standard&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Fixing couch2pg Memory Errors</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/couch2pg-oom-errors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/couch2pg-oom-errors/</guid>
      <description>
        
        
        &lt;p&gt;Some times when couch2pg is replicating documents to postgres, it encounters very large info docs that are larger than the memory allocation of the document sync array and causes out-of-memory errors.
To fix this, we need to delete this document so that couch2pg can proceed.  Below are steps to follow to achieve this.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Reduce the size of the replicated docs to a value of say 4 in the couch2pg.conf file so that you can get within the range of the failing document.&lt;/li&gt;
&lt;li&gt;Clone the existing &lt;a href=&#34;https://github.com/medic/couch2pg&#34;&gt;couch2pg&lt;/a&gt; repo so that you can run couch2pg locally&lt;/li&gt;
&lt;li&gt;Edit the file &lt;code&gt;lib/importer.js&lt;/code&gt; in the couch2pg source code to be able to log the doc-id of the problem doc&lt;/li&gt;
&lt;li&gt;Edit just logs doc_ids to the console, around line 100 of importer.js &lt;code&gt;console.log(row.doc._id);&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Get the remote couch2pg environment variable settings and export them into your profile terminal&lt;/li&gt;
&lt;li&gt;Create an ssh reverse tunnel from the postgres server to your laptop&lt;/li&gt;
&lt;li&gt;Run couch2pg locally so that you can see the doc-ids on console till it fails&lt;/li&gt;
&lt;li&gt;From the ids printed on console try loading the docs in the couchdb web access(Futon or Fauxton), the problem doc is usually big and won&amp;rsquo;t load&lt;/li&gt;
&lt;li&gt;This will help you identify the problem doc&lt;/li&gt;
&lt;li&gt;Curl the document to your pc and back it up&lt;/li&gt;
&lt;li&gt;Back up the document for further analysis&lt;/li&gt;
&lt;li&gt;Delete the document using curl
&lt;code&gt;curl --head &amp;quot;&amp;lt;HOST&amp;gt;/&amp;lt;DB&amp;gt;/&amp;lt;DOC_ID&amp;gt;&amp;quot;&lt;/code&gt;
This returns something like&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;HTTP/1.1 200 OK
Cache-Control: must-revalidate
Content-Length: 307
Content-Type: application/json
Date: Tue, 25 Jun 2019 11:58:29 GMT
ETag: &amp;quot;2-6beeb38da9b096bacfe2fa769e5171be&amp;quot;
Server: CouchDB/2.3.1 (Erlang OTP/21)
X-Couch-Request-ID: e4aa7a8696
X-CouchDB-Body-Time: 0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The ETag is the rev. Delete document with curl: &lt;code&gt;curl -X DELETE &amp;quot;&amp;lt;HOST&amp;gt;/&amp;lt;DB&amp;gt;/&amp;lt;DOC_ID&amp;gt;?rev=&amp;lt;THE_REV&amp;gt;&amp;quot;&lt;/code&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: CouchDB Authentication</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/couchdb-authentication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/couchdb-authentication/</guid>
      <description>
        
        
        &lt;h3 id=&#34;to-invalidate-a-session-in-couchdb-there-are-two-options&#34;&gt;To invalidate a session in couchdb, there are two options:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Change the session signing certificate on the server&lt;/li&gt;
&lt;li&gt;Change the password and/or salt for the user whose session should be invalidated&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;There are drawbacks to note with each.  Option &lt;strong&gt;1&lt;/strong&gt; will invalidate &lt;em&gt;all&lt;/em&gt; sessions; option &lt;strong&gt;2&lt;/strong&gt; will invalidate all sessions &lt;em&gt;for that user&lt;/em&gt;, and also their password.&lt;/p&gt;
&lt;p&gt;Because of the nature of couch&amp;rsquo;s session management, there is no way to see a list of active/open sessions.  Invalidating a specific session key could be achieved by blacklisting a cookie value in e.g. nginx or API, but this is unlikely to be of practical value.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: CSV to Docs</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/csv-to-docs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/csv-to-docs/</guid>
      <description>
        
        
        &lt;h2 id=&#34;seeding-data-with-medic-conf&#34;&gt;Seeding data with medic-conf&lt;/h2&gt;
&lt;p&gt;Users, contacts, and report data can be specified in comma-separated value (CSV) files, then converted to JavaScript Object Notation (JSON) files and uploaded into your instance using &lt;a href=&#34;https://github.com/medic/medic-conf&#34;&gt;medic-conf&lt;/a&gt;. This documentation will cover the CSV notation used, fetching CSV files from Google Sheets, converting the CSV files into JSON docs, and then uploading the data from the JSON files to your instance.&lt;/p&gt;
&lt;h3 id=&#34;converting-csvs&#34;&gt;Converting CSVs&lt;/h3&gt;
&lt;p&gt;Running &lt;code&gt;medic-conf&lt;/code&gt; with the &lt;code&gt;csv-to-docs&lt;/code&gt; action converts CSV files from the &lt;code&gt;csv&lt;/code&gt; folder into JSON docs to be uploaded to your instance. The JSON files are stored in the &lt;code&gt;json_docs&lt;/code&gt; folder. Instructions for creating the CSV files are in sections below.&lt;/p&gt;
&lt;h3 id=&#34;uploading-csvs&#34;&gt;Uploading CSVs&lt;/h3&gt;
&lt;p&gt;Running &lt;code&gt;medic-conf&lt;/code&gt; with the &lt;code&gt;upload-docs&lt;/code&gt; action will upload the JSON docs that were generated from the CSV files to your instance. For example, running &lt;code&gt;medic-conf --local upload-docs&lt;/code&gt; will upload the converted docs into your local instance. The target location &lt;code&gt;--local&lt;/code&gt; can be replaced with an instance or URL. See &lt;a href=&#34;https://github.com/medic/medic-conf&#34;&gt;medic-conf&lt;/a&gt; for detailed instructions.&lt;/p&gt;
&lt;h3 id=&#34;creating-csv-files-for-contacts-reports&#34;&gt;Creating CSV files for Contacts, Reports&lt;/h3&gt;
&lt;p&gt;A separate CSV file is needed for each type of place, person, or report in your project&amp;rsquo;s local &lt;code&gt;csv&lt;/code&gt; folder. The name of the file determines the type of doc created for rows contained in the file. The possible types are: &lt;code&gt;report&lt;/code&gt;, &lt;code&gt;person&lt;/code&gt;, and &lt;code&gt;place&lt;/code&gt;. Each of these has a further specifier provided in the filename:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;place.{place_type}.csv&lt;/code&gt;:  where &lt;code&gt;{place_type}&lt;/code&gt; is the type of place specified in the file. By default, the place types are one of &lt;code&gt;clinic&lt;/code&gt;, &lt;code&gt;health_center&lt;/code&gt;, or &lt;code&gt;district_hospital&lt;/code&gt;. As of 3.7 of the &lt;a href=&#34;https://github.com/medic/cht-core&#34;&gt;Core Framework&lt;/a&gt;, the number of place types and their names can be configured — the &lt;code&gt;{place_type}&lt;/code&gt; should match with the hierarchy names used.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;person.{parent_place_type}.csv&lt;/code&gt;:  where &lt;code&gt;{parent_place_type}&lt;/code&gt; is the type of place to which the people in the file will belong.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;report.{form_id}.csv&lt;/code&gt;:  where &lt;code&gt;{form_id}&lt;/code&gt; is the form ID for all the reports in the file. You will need one file per form ID&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here are some examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;File named &lt;code&gt;place.district_hospital.csv&lt;/code&gt; adds the property &lt;code&gt;&amp;quot;type&amp;quot;:&amp;quot;district_hospital&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;File named &lt;code&gt;person.clinic.csv&lt;/code&gt; add the property &lt;code&gt;&amp;quot;type&amp;quot;:&amp;quot;person&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;File named &lt;code&gt;report.immunization_visit.csv&lt;/code&gt; add the property &lt;code&gt;&amp;quot;type&amp;quot;:&amp;quot;report&amp;quot;, &amp;quot;form&amp;quot;:&amp;quot;immunization_visit&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In each of these files a header row is used to specify the JSON field names, and each subsequent row specifies the corresponding values for a doc. A &lt;code&gt;_id&lt;/code&gt; field is automatically generated with a universally unique identifier.&lt;/p&gt;
&lt;p&gt;Here is an example of a &lt;code&gt;csv/person.clinic.csv&lt;/code&gt; file for people belonging to clinics:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-csv&#34; data-lang=&#34;csv&#34;&gt;name,sex,date_of_birth
Adriana Akiyama,female,1985-12-31
Becky Backlund,female,1987-10-17
Carson Crane,male,2015-01-23
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Here is the table representation of the CSV:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;sex&lt;/th&gt;
&lt;th&gt;date_of_birth&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Adriana Akiyama&lt;/td&gt;
&lt;td&gt;female&lt;/td&gt;
&lt;td&gt;1985-12-31&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Becky Backlund&lt;/td&gt;
&lt;td&gt;female&lt;/td&gt;
&lt;td&gt;1987-10-17&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Carson Crane&lt;/td&gt;
&lt;td&gt;male&lt;/td&gt;
&lt;td&gt;2015-01-23&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Converting that CSV file to JSON docs with the &lt;code&gt;csv-to-docs&lt;/code&gt; action would generate three files, one for each person. Here is one of the corresponding JSON files, &lt;code&gt;json_docs/dbfbc0f0-117a-59ec-9542-3313fb10ef25.doc.json&lt;/code&gt;, which was created from the CSV data above:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;person&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Adriana Akiyama&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;sex&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;female&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;date_of_birth&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;1985-12-31&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;dbfbc0f0-117a-59ec-9542-3313fb10ef25&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;special-notations&#34;&gt;Special notations&lt;/h4&gt;
&lt;h5 id=&#34;specifying-property-type&#34;&gt;Specifying property type&lt;/h5&gt;
&lt;p&gt;By default, values are parsed as strings. To parse a CSV column as a different JSON type, append the JSON type name to the column definition, e.g.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;column_one,column_two:bool,column_three:int,column_four:float,column_five:date,column_six:timestamp
some string,true,1,2.3,2017-12-31,1513255007072
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This would create a structure such as:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;09efb53f-9cd8-524c-9dfd-f62c242f1817&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;column_one&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;some string&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;column_two&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;column_three&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;column_four&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2.3&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;column_five&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;2017-12-31T00:00:00.000Z&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;column_six&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1513255007072&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;excluding-column&#34;&gt;Excluding column&lt;/h5&gt;
&lt;p&gt;A special column type, &lt;code&gt;excluded&lt;/code&gt;, is used for excluding a column from the final JSON data:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;my_column_that_will_not_be_a_property:excluded
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This can be useful if using a column for doc references.&lt;/p&gt;
&lt;h4 id=&#34;including-another-doc&#34;&gt;Including another doc&lt;/h4&gt;
&lt;p&gt;Often times database documents need to include or refer to other documents in the database. This can be achieved with queries across CSV files, which is done by specifying a query in the column header. The query specifies the doc type (&lt;code&gt;person&lt;/code&gt; or &lt;code&gt;place&lt;/code&gt;) and matching condition.&lt;/p&gt;
&lt;p&gt;For instance, to include the parent district&amp;rsquo;s doc in a health center&amp;rsquo;s doc, the &lt;code&gt;parent:place WHERE reference_id=COL_VAL&lt;/code&gt; column header is used. The &lt;code&gt;COL_VAL&lt;/code&gt; is a special notation for that column&amp;rsquo;s value for the row, and it will be used to match against the &lt;code&gt;reference_id&lt;/code&gt; field in all other places. Given these example CSVs, you can see the corresponding JSON structure:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;place.district.csv&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;reference_id:excluded&lt;/th&gt;
&lt;th&gt;is_name_generated&lt;/th&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;reported_date:timestamp&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;district_1&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;D1&lt;/td&gt;
&lt;td&gt;1544031155715&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;district_2&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;D2&lt;/td&gt;
&lt;td&gt;1544031155715&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;district_3&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;D3&lt;/td&gt;
&lt;td&gt;1544031155715&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;place.health_center.csv&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;reference_id:excluded&lt;/th&gt;
&lt;th&gt;parent:place WHERE reference_id=COL_VAL&lt;/th&gt;
&lt;th&gt;is_name_generated&lt;/th&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;reported_date:timestamp&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;health_center_1&lt;/td&gt;
&lt;td&gt;district_1&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;HC1&lt;/td&gt;
&lt;td&gt;1544031155715&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;health_center_2&lt;/td&gt;
&lt;td&gt;district_2&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;HC2&lt;/td&gt;
&lt;td&gt;1544031155715&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;health_center_3&lt;/td&gt;
&lt;td&gt;district_3&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;HC3&lt;/td&gt;
&lt;td&gt;1544031155715&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;480d0cd0-c021-5d55-8c63-d86576d592fc.doc.json&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;health_center&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;parent&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;district_hospital&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;parent&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;is_name_generated&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;false&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;D2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;external_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;notes&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;geolocation&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;reported_date&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1544031155715&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;f223f240-5d6a-5a7a-91d4-46d3c59de73e&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;is_name_generated&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;false&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;HC7&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;external_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;notes&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;geolocation&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;reported_date&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1544031155715&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;480d0cd0-c021-5d55-8c63-d86576d592fc&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;including-value-from-another-doc&#34;&gt;Including value from another doc&lt;/h5&gt;
&lt;p&gt;Similar to including another doc, it is also possible to get the value of a specific field in another doc. For instance, if &lt;code&gt;parent:GET _id OF place WHERE reference_id=COL_VAL&lt;/code&gt; were used in the example above, the &lt;code&gt;parent&lt;/code&gt; field&amp;rsquo;s value would have been set to the &lt;code&gt;_id&lt;/code&gt; of the refered to doc instead of including the whole doc. Note that &lt;code&gt;_id&lt;/code&gt; is a generated value included in all generated docs.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;reference_id:excluded&lt;/th&gt;
&lt;th&gt;parent:GET _id OF place WHERE reference_id=COL_VAL&lt;/th&gt;
&lt;th&gt;is_name_generated&lt;/th&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;reported_date:timestamp&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;health_center_1&lt;/td&gt;
&lt;td&gt;district_1&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;HC1&lt;/td&gt;
&lt;td&gt;1544031155715&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;health_center_2&lt;/td&gt;
&lt;td&gt;district_2&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;HC2&lt;/td&gt;
&lt;td&gt;1544031155715&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;health_center_3&lt;/td&gt;
&lt;td&gt;district_3&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;HC3&lt;/td&gt;
&lt;td&gt;1544031155715&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The resulting doc would be as follows, with the &lt;code&gt;_id&lt;/code&gt; from &lt;code&gt;district_1&lt;/code&gt; as the &lt;code&gt;parent&lt;/code&gt; value:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;health_center&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;parent&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;0c31056a-3a80-54dd-b136-46145d451a66&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;is_name_generated&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;false&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;HC3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;external_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;notes&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;geolocation&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;reported_date&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1544031155715&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;45293356-353c-5eb1-9a41-baa3427b4f69&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;creating-csv-files-for-users&#34;&gt;Creating CSV files for users&lt;/h3&gt;
&lt;p&gt;To create user accounts from CSV files, a &lt;code&gt;users.csv&lt;/code&gt; file will be needed in the &lt;code&gt;csv&lt;/code&gt; folder. The &lt;code&gt;users.csv&lt;/code&gt; file requires columns for &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt;. Additional columns can be used for any additional fields needed on the user&amp;rsquo;s doc, for example &lt;code&gt;roles&lt;/code&gt;, &lt;code&gt;phone&lt;/code&gt;. Running the &lt;code&gt;csv-to-docs&lt;/code&gt; &lt;code&gt;upload-docs&lt;/code&gt; &lt;code&gt;create-users&lt;/code&gt; actions in that order will generate the necessary JSON docs with a &lt;code&gt;users.csv&lt;/code&gt; file in your working directory, and then create the people, places, and users.&lt;/p&gt;
&lt;p&gt;The following sections describe the different ways to associate the new users to contacts.&lt;/p&gt;
&lt;h4 id=&#34;creating-new-users-with-existing-contacts&#34;&gt;Creating new users with existing contacts&lt;/h4&gt;
&lt;p&gt;When creating users that are associated to existing contacts, &lt;code&gt;contact&lt;/code&gt; and &lt;code&gt;place&lt;/code&gt; columns should be created. Each row should have the UUID of an existing person for &lt;code&gt;contact&lt;/code&gt;, and an existing place for &lt;code&gt;place&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;creating-new-users-with-new-contacts&#34;&gt;Creating new users with new contacts&lt;/h3&gt;
&lt;p&gt;To create new contacts for each new user provide values for &lt;code&gt;contact.name&lt;/code&gt;, &lt;code&gt;place.name&lt;/code&gt;, and &lt;code&gt;place.parent&lt;/code&gt; (can be existing place), as seen in this example CSV:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-csv&#34; data-lang=&#34;csv&#34;&gt;username,password,roles,name,phone,contact.name,place.c_prop,place.type,place.name,place.parent
alice,Secret_1,district-admin,Alice Example,+123456789,Alice,p_val_a,health_center,alice area, district_uuid
bob,Secret_1,district-admin,bob Example,+123456789,bob,p_val_a,health_center,bob area,disctrict_uuid
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The &lt;code&gt;username&lt;/code&gt;, &lt;code&gt;password&lt;/code&gt;, &lt;code&gt;contact.name&lt;/code&gt;, &lt;code&gt;place.type&lt;/code&gt;, &lt;code&gt;place.name&lt;/code&gt; columns are required to have functional users with new places.&lt;/p&gt;
&lt;h3 id=&#34;creating-new-users-linked-to-contacts-in-csv-files&#34;&gt;Creating new users linked to contacts in CSV files&lt;/h3&gt;
&lt;p&gt;To associate the new users to contacts that will also be created with the &lt;code&gt;csv-to-docs&lt;/code&gt; action, use reference queries to the contacts.
For instance, the column header for the person would be &lt;code&gt;contact:person WHERE reference_id=COL_VAL&lt;/code&gt;, and for the place would be &lt;code&gt;place:GET _id OF place WHERE reference_id=COL_VAL&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Here is a example of how the three CSV files need to be configured to setup a user linked to existing place and contact.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;csv/place.health_center.csv&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-csv&#34; data-lang=&#34;csv&#34;&gt;reference_id:excluded,parent:place WHERE reference_id=COL_VAL,is_name_generated,name,reported_date:timestamp
health_center_1,district_1,FALSE,HC1,1544031155715
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Generated JSON doc for the health center:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;health_center&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;parent&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;district_hospital&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;parent&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;is_name_generated&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;false&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;District1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;external_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;notes&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;geolocation&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;reported_date&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1544031155715&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;e8f9739a-5d37-5b1e-be3c-a571b2c2409b&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;is_name_generated&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;FALSE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;HC1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;reported_date&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1544031155715&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;8606a91a-f454-56e3-a089-0b686af3c6b7&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;csv/person.csv&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-csv&#34; data-lang=&#34;csv&#34;&gt;reference_id:excluded,parent:place WHERE reference_id=COL_VAL,name,phone,sex,role,reported_date,patient_id
p_hc1,health_center_1,Bob Johnson 1,+16143291527,male,manager,1552494835669,60951
p_hc2,health_center_1,Bob Johnson 2,+16143291528,male,manager,1552494835669,60951

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Generated JSON doc for the person:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;person&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;parent&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;health_center&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;parent&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;district_hospital&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;parent&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;is_name_generated&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;false&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;District1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;external_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;notes&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;geolocation&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;reported_date&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1544031155715&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;e8f9739a-5d37-5b1e-be3c-a571b2c2409b&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;is_name_generated&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;FALSE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;HC1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;reported_date&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1544031155715&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;8606a91a-f454-56e3-a089-0b686af3c6b7&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Bob Johnson 1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;phone&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;+16143291527&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;sex&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;male&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;role&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;manager&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;reported_date&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;1552494835669&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;patient_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;60951&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;65c52076-84c5-53a2-baca-88e6ec6e0875&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;csv/users.csv&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-csv&#34; data-lang=&#34;csv&#34;&gt;username,password,roles,phone,contact:person WHERE reference_id=COL_VAL,place:GET _id OF place WHERE reference_id=COL_VAL
ac1,Secret_1,district_admin:red1,+123456789,p_hc1,health_center_1
ac2,Secret_1,district_admin:supervisor,+123456789,p_hc2,health_center_1
ac3,Secret_1,district_admin,+123456789,p_hc3,health_center_1
ac4,Secret_1,district_admin,+123456789,p_hc4,health_center_1

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This will generate the &lt;code&gt;users.csv&lt;/code&gt; file in the working directory which is used by the &lt;code&gt;create-users&lt;/code&gt; action. The contact and place fields should be resolved to the actual UUIDs.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-csv&#34; data-lang=&#34;csv&#34;&gt;p_hc1&amp;quot;username&amp;quot;,&amp;quot;password&amp;quot;,&amp;quot;roles&amp;quot;,&amp;quot;contact&amp;quot;,&amp;quot;phone&amp;quot;,&amp;quot;place&amp;quot;
&amp;quot;ac1&amp;quot;,&amp;quot;Secret_1&amp;quot;,&amp;quot;district_admin:red1&amp;quot;,&amp;quot;65c52076-84c5-53a2-baca-88e6ec6e0875&amp;quot;,&amp;quot;+123456789&amp;quot;,&amp;quot;8606a91a-f454-56e3-a089-0b686af3c6b7&amp;quot;
&amp;quot;ac2&amp;quot;,&amp;quot;Secret_1&amp;quot;,&amp;quot;district_admin:supervisor&amp;quot;,&amp;quot;b7d0dbd5-beeb-52a8-8e4c-513d0baece8e&amp;quot;,&amp;quot;+123456789&amp;quot;,&amp;quot;8606a91a-f454-56e3-a089-0b686af3c6b7&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;using-csv-files-on-google-drive&#34;&gt;Using CSV files on Google Drive&lt;/h3&gt;
&lt;p&gt;Individual Google Sheets can be used for each CSV file, which can be exported manually to CSV file format, or linked to your project to be downloaded by medic-conf.&lt;/p&gt;
&lt;p&gt;To fetch the files from Google Drive run the &lt;code&gt;fetch-csvs-from-google-drive&lt;/code&gt; action in medic-conf. This will download the CSV files specified in the &lt;code&gt;csvs-on-google-drive.json&lt;/code&gt; file, and place them into the &lt;code&gt;csv&lt;/code&gt; folder.&lt;/p&gt;
&lt;h4 id=&#34;linking-to-google-drive&#34;&gt;Linking to Google Drive&lt;/h4&gt;
&lt;p&gt;The file &lt;code&gt;csvs-on-google-drive.json&lt;/code&gt; in your project&amp;rsquo;s home directory will consist of a key value pair for each CSV file. The keys must be the filename where the CSV will be stored locally — see the CSV &lt;a href=&#34;https://github.com/medic/medic-conf#csv-file-name&#34;&gt;file documentation&lt;/a&gt; for the notation. The value of each key must be the ID of the corresponding file in Google Drive — the ID can be obtained from the URL eg &lt;code&gt;https://docs.google.com/spreadsheets/d/{FILE_ID}/edit&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;person.clinic.csv&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;google_drive_ID&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;google-drive-authentication&#34;&gt;Google Drive authentication&lt;/h3&gt;
&lt;p&gt;Medic-conf leverages Google authentication to access Google Drive. You will need to create a client_secrets file named &lt;code&gt;.gdrive.secrets.json&lt;/code&gt; and place it in your working directory, and &lt;a href=&#34;https://developers.google.com/identity/protocols/OAuth2InstalledApp&#34;&gt;create a token&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Create the &lt;code&gt;.gdrive.secrets.json&lt;/code&gt; file by downloading the &lt;code&gt;client_secrets.json&lt;/code&gt; from Google. You will need a &lt;code&gt;CLIENT_ID&lt;/code&gt;, &lt;code&gt;CLIENT_SECRET&lt;/code&gt; and &lt;code&gt;REDIRECT_URL&lt;/code&gt;. You can find these pieces of information by going to the Developer Console, clicking your project &amp;ndash;&amp;gt; APIs &amp;amp; auth &amp;ndash;&amp;gt; credentials &amp;ndash;&amp;gt; Download JSON. This will download the credentials but will need modified to be in this structure.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;client_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;lt;client_id&amp;gt;.apps.googleusercontent.com&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;project_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;proj_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;auth_uri&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;https://accounts.google.com/o/oauth2/auth&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;token_uri&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;https://accounts.google.com/o/oauth2/token&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;auth_provider_x509_cert_url&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;https://www.googleapis.com/oauth2/v1/certs&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;client_secret&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;client_secret&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;redirect_uris&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;urn:ietf:wg:oauth:2.0:oob&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://localhost&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;See Google&amp;rsquo;s docs &lt;a href=&#34;https://github.com/googleapis/google-api-nodejs-client#oauth2-client&#34;&gt;here&lt;/a&gt; on Oauth2&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Database Conflicts</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/database-conflicts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/database-conflicts/</guid>
      <description>
        
        
        &lt;p&gt;Conflicts are a natural and unavoidable part of working in a distributed system.&lt;/p&gt;
&lt;p&gt;Conflicts occur when one client (eg PouchDB) attempts to replicate to another (eg CouchDB), and the document that the first has does not have the same tree of changes that the second one has.&lt;/p&gt;
&lt;h2 id=&#34;an-example&#34;&gt;An example&lt;/h2&gt;
&lt;p&gt;To make it clear what&amp;rsquo;s happening, let&amp;rsquo;s walk through an example. If you already understand conflicts feel free to skip this section.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s say you register a pregnancy in the UI. And then you notice that you got the LMP wrong, so you hit edit and quickly make the change.&lt;/p&gt;
&lt;p&gt;Meanwhile, sentinel notices that you registers a pregnancy, and before you have a chance to change the LMP, sets up a bunch of recurring messages, editing the document.&lt;/p&gt;
&lt;p&gt;Sentinel has now made a change to the first version of your document, and you&amp;rsquo;re trying to also make a change to the first version. These conflict.&lt;/p&gt;
&lt;h2 id=&#34;how-to-manage-conflicts&#34;&gt;How to manage conflicts&lt;/h2&gt;
&lt;p&gt;Conflicts will appear on the #downtime Slack channel, along with the other alerts. If a server you manage has a conflict, you should do the following:&lt;/p&gt;
&lt;h3 id=&#34;identify-why-conflicts-are-occuring&#34;&gt;Identify why conflicts are occuring&lt;/h3&gt;
&lt;p&gt;Take a look at the conflicts view, at &lt;code&gt;https://yourserver/medic/_design/medic-conflicts/_view/conflicts&lt;/code&gt;. Each entry in that view looks like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;1B7922A6-A6D6-C956-BBAE-DE5EB5A2E6C8&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;key&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
        &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;1-82d9a42305a79e403d9eca6a9a9daae9&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;null&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;,&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;id&lt;/code&gt; is the &lt;code&gt;_id&lt;/code&gt; of the conflicting document, and the &lt;code&gt;key&lt;/code&gt; is a list of conflicting &lt;code&gt;_rev&lt;/code&gt;s.&lt;/p&gt;
&lt;p&gt;For each conflicting document, download that document, as well as all the &lt;code&gt;_rev&lt;/code&gt;s indicated in the &lt;code&gt;key&lt;/code&gt; above. To download a document with a specific &lt;code&gt;_rev&lt;/code&gt;, pass the &lt;code&gt;rev&lt;/code&gt; parameter.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;curl &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;https://yourserver/medic/1B7922A6-A6D6-C956-BBAE-DE5EB5A2E6C8&amp;#39;&lt;/span&gt; &amp;gt; doc.json
curl &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;https://yourserver/medic/1B7922A6-A6D6-C956-BBAE-DE5EB5A2E6C8?rev=1-82d9a42305a79e403d9eca6a9a9daae9&amp;#39;&lt;/span&gt; &amp;gt; doc-conflict1.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now you have all versions of the document, you can diff them and try to determine what went wrong.&lt;/p&gt;
&lt;p&gt;A common problem, for example, might be sentinel hitting a document really quickly between you creating it and editing it.&lt;/p&gt;
&lt;p&gt;A less common problem that requires some special attention, is UUID collisions (see below).&lt;/p&gt;
&lt;p&gt;If you get stuck feel free to escalate to a developer, who can take a look.&lt;/p&gt;
&lt;h3 id=&#34;if-appropriate-raise-a-bug&#34;&gt;If appropriate, raise a bug&lt;/h3&gt;
&lt;p&gt;If you determine (or just suspect) that the problem could be in our code or data structures, feel free to raise a bug to development. For example, historically read status has been stored against the document, which can easily cause conflicts if you create a document and then instantly view it with sentinel processing in the background.&lt;/p&gt;
&lt;p&gt;While some conflicts are inevitable, we want to architect away from them as much as possible. Ideally tech leads would never have to resolve conflicts.&lt;/p&gt;
&lt;h3 id=&#34;regardless-resolve-the-conflicts&#34;&gt;Regardless, resolve the conflicts&lt;/h3&gt;
&lt;p&gt;Now that you&amp;rsquo;ve diagnosed the problem, and perhaps reported a bug, you should resolve the conflict.&lt;/p&gt;
&lt;p&gt;This is &lt;strong&gt;extremely&lt;/strong&gt; important. Conflicts cause saved changes to not appear against documents silently, and could cause important document changes (eg fixing someone&amp;rsquo;s EDD) to not occur.&lt;/p&gt;
&lt;p&gt;For a document to no longer be conflicted, there must only be one active &lt;code&gt;_rev&lt;/code&gt;. You would do this by picking one rev and updating it with the changes you want to make, and then updating the others with the &lt;code&gt;_deleted: true&lt;/code&gt; property.&lt;/p&gt;
&lt;p&gt;You can tell that a document is no longer conflicted if they don&amp;rsquo;t appear in the view, or if when you request the document with &lt;code&gt;?conflicts=true&lt;/code&gt; the &lt;code&gt;_conflicts&lt;/code&gt; property either doesn&amp;rsquo;t appear or is empty:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;https://yourserver/medic/yourdocid?conflicts=true

{
  &amp;quot;_id&amp;quot;: &amp;quot;yourdocid&amp;quot;,
  &amp;quot;_rev&amp;quot;: &amp;quot;2-the-current-rev&amp;quot;
  &amp;quot;_conflicts&amp;quot;: [
    &amp;quot;2-a-conflicting-rev&amp;quot;
  ]
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In the above example, &lt;code&gt;yourdocid&lt;/code&gt; has two revisions that conflict with each other. Here you would need to update one of the revs (it doesn&amp;rsquo;t matter which) with the other&amp;rsquo;s changes, then delete the other rev. You would then see:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;https://yourserver/medic/yourdocid?conflicts=true

{
  &amp;quot;_id&amp;quot;: &amp;quot;yourdocid&amp;quot;,
  &amp;quot;_rev&amp;quot;: &amp;quot;3-the-new-rev&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;a-trivial-example&#34;&gt;A trivial example&lt;/h4&gt;
&lt;p&gt;Let&amp;rsquo;s say that you have two documents, and the diff between them looks something like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;&lt;span style=&#34;color:#000080;font-weight:bold&#34;&gt;===================================================================
&lt;/span&gt;&lt;span style=&#34;color:#000080;font-weight:bold&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;--- 277533E3-A41B-3C46-909F-BCA038197C1E___2-2fff60be1557fdfef9915aa09e1b5119.json
&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+++ 277533E3-A41B-3C46-909F-BCA038197C1E___2-d2a7186380b72306d75cd64b64402575.json
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#800080;font-weight:bold&#34;&gt;@@ -1,7 +1,7 @@
&lt;/span&gt;&lt;span style=&#34;color:#800080;font-weight:bold&#34;&gt;&lt;/span&gt; {
   &amp;#34;_id&amp;#34;: &amp;#34;277533E3-A41B-3C46-909F-BCA038197C1E&amp;#34;,
&lt;span style=&#34;color:#a40000&#34;&gt;-  &amp;#34;_rev&amp;#34;: &amp;#34;2-2fff60be1557fdfef9915aa09e1b5119&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+  &amp;#34;_rev&amp;#34;: &amp;#34;2-d2a7186380b72306d75cd64b64402575&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;   &amp;#34;data&amp;#34;: &amp;#34;some shared data&amp;#34;,
   &amp;#34;read&amp;#34;: [
&lt;span style=&#34;color:#a40000&#34;&gt;-    &amp;#34;some_user&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+    &amp;#34;admin&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;   ]
 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The problem here is clear: &lt;code&gt;some_user&lt;/code&gt; and &lt;code&gt;admin&lt;/code&gt; read the document at the same time. To solve this, we could add &lt;code&gt;some_user&lt;/code&gt; to the revision with &lt;code&gt;admin&lt;/code&gt; already in it, and then delete the &lt;code&gt;some_user&lt;/code&gt; revision:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
   &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;277533E3-A41B-3C46-909F-BCA038197C1E&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
   &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_rev&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;2-d2a7186380b72306d75cd64b64402575&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
   &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;data&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;some shared data&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
   &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;read&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
     &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;admin&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
     &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;some_user&amp;#34;&lt;/span&gt;
   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
   &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;277533E3-A41B-3C46-909F-BCA038197C1E&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
   &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_rev&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;2-2fff60be1557fdfef9915aa09e1b5119&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
   &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_deleted&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
   &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;data&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;some shared data&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
   &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;read&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
     &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;some_user&amp;#34;&lt;/span&gt;
   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;resolving-uuid-collisions&#34;&gt;Resolving UUID collisions&lt;/h4&gt;
&lt;p&gt;A UUID collision is a rare event where two clients (eg two android phones running our application) generate the same UUID ID for two completely different documents.&lt;/p&gt;
&lt;p&gt;You can tell when your conflict is a UUID collision as there is no common root between the two conflicting versions. For example, one might be of type person and one might of type data_record.&lt;/p&gt;
&lt;p&gt;These situations are more complicated, and require that you essentially recreate all conflicting versions as new documents, and fix any linkages that exist in the database.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s say you find the following situation:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;{
  &amp;#34;_id&amp;#34;: &amp;#34;7FADDF76-55E4-4E50-9444-5E468E61EA83&amp;#34;
&lt;span style=&#34;color:#a40000&#34;&gt;- &amp;#34;_rev&amp;#34;: &amp;#34;1-e4da228c29dc4ebc8b156967bbf48bd1&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+ &amp;#34;_rev&amp;#34;: &amp;#34;1-ce40d1dc470643e2b9be9368ea9ff240&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;- &amp;#34;type&amp;#34;: &amp;#34;person&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+ &amp;#34;type&amp;#34;: &amp;#34;data_record&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;&amp;lt;snip a bunch more stuff that doesn&amp;#39;t relate to each other&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You will want to do four things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Download the &lt;code&gt;_rev&lt;/code&gt; for the &lt;code&gt;person&lt;/code&gt; and create a new document, with a new uuid, for that document (you can do this by uploadig the document without an &lt;code&gt;_id&lt;/code&gt; or &lt;code&gt;_rev&lt;/code&gt; parameter and let CouchDB generate them for you)&lt;/li&gt;
&lt;li&gt;Do the same for the &lt;code&gt;data_record&lt;/code&gt; version&lt;/li&gt;
&lt;li&gt;Delete the main conflicting document &lt;code&gt;7FADDF76-55E4-4E50-9444-5E468E61EA83&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And finally, find any references to &lt;code&gt;7FADDF76-55E4-4E50-9444-5E468E61EA83&lt;/code&gt;, work out which doc they were &lt;em&gt;supposed&lt;/em&gt; to point to, and then edit those UUIDs to be the correct UUID &lt;code&gt;_id&lt;/code&gt; from the docs you created above.&lt;/p&gt;
&lt;p&gt;Because this should be a rare event and a generic view would be enormous, we do not ship a view that helps you find this out.&lt;/p&gt;
&lt;p&gt;However, you can create your own view! You&amp;rsquo;re going to want to create a DDOC specifically for this view. You can follow the following template to create what you want:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;_design/docs-by-reference&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;views&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;docs-by-reference&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;map&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;function(doc) {\n  var KEYS = [];\n\n  // TODO: consider switching this around to whitelist doc types\n  if (doc._id.match(/-info$/) ||\n      doc._id.match(/^_local/)) {\n    return;\n  }\n\n  var goDeeper = function(obj, path) {\n    Object.keys(obj).forEach(function(key) {\n      if (typeof obj[key] === &amp;#39;string&amp;#39; &amp;amp;&amp;amp;\n          KEYS.indexOf(obj[key]) !== -1) {\n        emit(obj[key], path + &amp;#39;.&amp;#39; + key);\n      }\n\n      if (obj[key] &amp;amp;&amp;amp; typeof obj[key] === &amp;#39;object&amp;#39;) {\n        goDeeper(obj[key], path + &amp;#39;.&amp;#39; + key);\n      }\n    });\n  };\n\n  goDeeper(doc, doc._id);\n}&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In this, add any IDs you want to be found in the &lt;code&gt;KEYS&lt;/code&gt; variable at the top of the function. So in our case, we would change &lt;code&gt;KEYS&lt;/code&gt; to look like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;KEYS&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;7FADDF76-55E4-4E50-9444-5E468E61EA83&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Upload this document to CouchDB (do not just add the view to an existing DDOC, as you will force all views on that DDOC to regenerate) and then warm up the views by querying it once (it may take a long time to run).&lt;/p&gt;
&lt;p&gt;Once it is complete you can query the view again to return a list of documents that reference the ids you hard-coded above.&lt;/p&gt;
&lt;p&gt;This will help you to identify which documents are affected by this change. Usually the only change needed is to change the ID located to the new ones you generated.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;total_rows&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;offset&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;rows&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;1B7922A6-A6D6-C956-BBAE-DE5EB5A2E6C8&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;key&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
        &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;7FADDF76-55E4-4E50-9444-5E468E61EA83&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;1B7922A6-A6D6-C956-BBAE-DE5EB5A2E6C8.fields.inputs.contact._id&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;1B7922A6-A6D6-C956-BBAE-DE5EB5A2E6C8&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;key&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
        &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;7FADDF76-55E4-4E50-9444-5E468E61EA83&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;1B7922A6-A6D6-C956-BBAE-DE5EB5A2E6C8.fields.patient_id&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In this example, there are two references to &lt;code&gt;7FADDF76-55E4-4E50-9444-5E468E61EA83&lt;/code&gt;, both in the &lt;code&gt;1B7922A6-A6D6-C956-BBAE-DE5EB5A2E6C8&lt;/code&gt; document, one at &lt;code&gt;fields.inputs.contact._id&lt;/code&gt; and one at &lt;code&gt;fields.patient_id&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you get stuck, feel free to contact a developer (either a specific one, or just post in &lt;code&gt;#development&lt;/code&gt;) and they can help you out.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: DHIS2 Aggregate</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/dhis2-aggregate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/dhis2-aggregate/</guid>
      <description>
        
        
        &lt;p&gt;One of the first things you’ll need to do is identify the specific &lt;a href=&#34;https://docs.dhis2.org/2.34/en/dhis2_implementation_guide/data-sets-and-forms.html#what-is-a-data-set&#34;&gt;DHIS2 data set&lt;/a&gt; that you plan to implement. You’ll need a list of all the &lt;a href=&#34;https://docs.dhis2.org/2.34/en/dhis2_implementation_guide/data-elements-and-custom-dimensions.html#data-elements&#34;&gt;data elements&lt;/a&gt; on that data set, a detailed understanding of how each is calculated, the frequency in which the data set is submitted (weekly, monthly, etc…), and for which &lt;a href=&#34;https://docs.dhis2.org/2.34/en/dhis2_implementation_guide/organisation-units.html&#34;&gt;organisation units&lt;/a&gt; the data set applies. You’ll also want to identify and engage the appropriate DHIS2 stakeholders to get access to DHIS2 metadata, test environments, and discuss workflows. The DHIS2 documentation site provides additional background and advice &lt;a href=&#34;https://docs.dhis2.org/2.34/en/dhis2_implementation_guide/integration-concepts.html#integration-concepts&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;design-considerations&#34;&gt;Design Considerations&lt;/h2&gt;
&lt;p&gt;There are a few very important considerations related to how you design workflows and set up your CHT application to make sure you will be able to integrate with DHIS2. The main areas are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Hierarchies&lt;/li&gt;
&lt;li&gt;Fields and calculations&lt;/li&gt;
&lt;li&gt;Workflows and user access.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;These considerations are summarized below.&lt;/p&gt;
&lt;h3 id=&#34;hierarchies&#34;&gt;Hierarchies&lt;/h3&gt;
&lt;p&gt;The CHT relies on your Place hierarchy to determine how data should be aggregated for DHIS2. As such, it’s important that you consider how organization units are configured in the DHIS2 instance that you need to integrate data into. If your CHT Place hierarchy does not align with the DHIS2 organisation unit structure, the CHT will not be able to aggregate data in the way DHIS2 needs it.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;TIP: There should be a one-to-one relationship between DHIS2 organistion units and CHT places.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See Also:&lt;/em&gt; &lt;a href=https://docs.communityhealthtoolkit.org/beta/apps/concepts/hierarchy/#&gt;Hierarchies&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;fields-and-calculations&#34;&gt;Fields and calculations&lt;/h3&gt;
&lt;p&gt;It’s important to understand each data element on the DHIS2 data set you want to integrate data into and how each data element is calculated. When you are designing your forms in the CHT, you will need to make sure you are capturing information in your forms so that every data element on the chosen DHIS2 data set can be calculated within the CHT.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;TIP: Once you obtain the list of data elements on the data set, be sure to go through them one by one and figure out how to calculate each one using information available in your CHT forms.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See Also:&lt;/em&gt; &lt;a href=https://docs.communityhealthtoolkit.org/beta/apps/concepts/forms/#&gt;Forms&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;workflows-and-user-access&#34;&gt;Workflows and User Access&lt;/h3&gt;
&lt;p&gt;The aggregate data workflow is really designed around 3 key user personas. You’ll need to make sure that your context can support those assumptions and will be able to have access to the appropriate features in the CHT and DHIS2.&lt;/p&gt;
&lt;p&gt;Moving data from the CHT to DHIS2 can be done in three main ways.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Manually downloading from the CHT&lt;/li&gt;
&lt;li&gt;Building an app in DHIS2 and calling an API in the CHT&lt;/li&gt;
&lt;li&gt;Orchestrating the steps using an interoperability layer such as &lt;a href=&#34;http://openhim.org/&#34;&gt;OpenHIM&lt;/a&gt;, &lt;a href=&#34;https://www.openfn.org/&#34;&gt;OpenFn&lt;/a&gt;, etc&amp;hellip;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;Once you have designed your hierarchies, forms, calculations, and workflows, there are a few key configurations that need to be made.&lt;/p&gt;
&lt;h3 id=&#34;data-sets&#34;&gt;Data sets&lt;/h3&gt;
&lt;p&gt;For the CHT to be able to export the file for DHIS2, it needs to know the specific name and ID of the data set in DHIS2. You will need to obtain the ID from the test or production DHIS2 environment.&lt;/p&gt;
&lt;p&gt;Configure the data set in &lt;code&gt;app_settings.json&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See Also:&lt;/em&gt; &lt;a href=https://docs.communityhealthtoolkit.org/beta/apps/reference/dhis2/#&gt;DHIS2 in App Settings&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;organisation-units&#34;&gt;Organisation units&lt;/h3&gt;
&lt;p&gt;Aggregation in the CHT is based on your Place hierarchy. As mentioned in the Hierarchies Design Considerations above, your Places must align with DHIS2 organisation units. You will need to specify the DHIS2 organisation unit&amp;rsquo;s ID on the Place document in the CHT.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Update the contact document of each place you wish to map to an organisation unit. Add a &lt;code&gt;dhis.orgUnit&lt;/code&gt; attribute.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See Also:&lt;/em&gt; &lt;a href=https://docs.communityhealthtoolkit.org/beta/apps/reference/contact-forms/#&gt;Contact Forms&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;my_place&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;health_center&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;dhis&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;orgUnit&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;HJiPOcmziQA&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;data-elements&#34;&gt;Data elements&lt;/h3&gt;
&lt;p&gt;Calculations for DHIS2 indicators are done using CHT Target functionality. For each DHIS2 data element, you will need to configure a corresponding CHT Target and specify the ID of the DHIS2 data set and data element. If you do not include the data set, this data element will be included in every data set.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;In &lt;code&gt;targets.js&lt;/code&gt;, configure one or more data elements by setting the &lt;code&gt;dhis.dataSet&lt;/code&gt; and &lt;code&gt;dhis.dataElement&lt;/code&gt; attributes in the target schema.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See Also:&lt;/em&gt; &lt;a href=https://docs.communityhealthtoolkit.org/beta/apps/reference/targets/#&gt;Targets&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;module&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;births-this-month&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;count&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;icon&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;icon-infant&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;translation_key&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;targets.births.title&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;subtitle_translation_key&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;targets.this_month.subtitle&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;goal&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesTo&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;contacts&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesToType&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;person&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;appliesIf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;!!&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;date&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;date_of_birth&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;dhis&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;dataSet&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;VMuFODsyWaO&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;dataElement&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;kB0ZBFisE0e&amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;users&#34;&gt;Users&lt;/h3&gt;
&lt;p&gt;For the HRIO role, create a new user role and a new user with that role; or update an existing user role. To export DHIS2 metrics, users need to have the following permissions: &lt;code&gt;can_configure&lt;/code&gt;, &lt;code&gt;can_export_all&lt;/code&gt;, and &lt;code&gt;can_export_dhis&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See Also:&lt;/em&gt; &lt;a href=https://docs.communityhealthtoolkit.org/beta/apps/concepts/users/#&gt;Users&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;user-experience&#34;&gt;User experience&lt;/h2&gt;
&lt;p&gt;Once your CHT project is configured to integrate with DHIS2, follow these steps to export the data from CHT and import it into DHIS:&lt;/p&gt;
&lt;h3 id=&#34;export-data&#34;&gt;Export data&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Login to the CHT instance using a user account with the required permissions. You should be automatically navigated to the Admin Console.&lt;/li&gt;
&lt;li&gt;Select &amp;ldquo;Import &amp;amp; export data&amp;rdquo; from the side&lt;/li&gt;
&lt;li&gt;Select &amp;ldquo;DHIS2&amp;rdquo; from the header along the top&lt;/li&gt;
&lt;li&gt;Select the data set, org unit, and time period that you&amp;rsquo;d like to send to DHIS2. Click &amp;ldquo;Export&amp;rdquo;&lt;/li&gt;
&lt;li&gt;A file should download in your browser. This file contains a &lt;a href=&#34;https://docs.dhis2.org/master/en/developer/html/webapi_data_values.html&#34;&gt;dataValueSet&lt;/a&gt; with aggregated user&amp;rsquo;s data.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;import-data&#34;&gt;Import data&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Login to DHIS2 using a user account with permission to manage the relevant dataset and organisation units.&lt;/li&gt;
&lt;li&gt;Select the &amp;ldquo;import/export&amp;rdquo; application inside DHIS2. Select &amp;ldquo;import data&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;Upload the file you downloaded in Step 5.&lt;/li&gt;
&lt;li&gt;Click &amp;ldquo;Import&amp;rdquo;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Check the UI for any errors. If you get errors you don&amp;rsquo;t understand or are unable to resolve an error, you can always ask for assistance on the &lt;a href=&#34;https://forum.communityhealthtoolkit.org/c/support/18&#34;&gt;CHT Forum&lt;/a&gt;. If there are no errors, you can review the numbers that resulted by reviewing the data set in DHIS2.&lt;/p&gt;
&lt;h2 id=&#34;known-limitations&#34;&gt;Known limitations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Data for each user is aggregated based on the contents of the user&amp;rsquo;s target document. Note that if your users don&amp;rsquo;t login and synchronize, their data won&amp;rsquo;t be represented in the exported data.&lt;/li&gt;
&lt;li&gt;Integrations are limited to &lt;em&gt;monthly&lt;/em&gt; DHIS2 data sets.&lt;/li&gt;
&lt;li&gt;Integrations are limited to numeric data-types. To support other data types, consider making a &lt;a href=&#34;https://docs.dhis2.org/master/en/developer/html/apps_creating_apps.html&#34;&gt;DHIS2 App&lt;/a&gt; for your project.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: EC2 Setup</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/ec2-setup-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/ec2-setup-guide/</guid>
      <description>
        
        
        &lt;h2 id=&#34;configure-self-hosting&#34;&gt;Configure self-hosting&lt;/h2&gt;
&lt;h4 id=&#34;1-create-ec2-use-security-best-practices&#34;&gt;1. Create EC2 (use security best practices)&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Be sure to change the file permissions to 0600 or lower
for the .pem file:
sudo chmod 0600 ~/Downloads/name_of_file.pem
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html&#34;&gt;Create Elastic IP and Associate EIP to EC2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;Goal&lt;/code&gt;: SSH into instance&lt;/p&gt;
&lt;h4 id=&#34;2-create-or-restore-ebs-volume&#34;&gt;2. Create or Restore EBS Volume&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Create EBS Volume&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Be sure to tag appropriately&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ebs-restoring-volume.html&#34;&gt;Restore EBS Volume&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Attach volume to EC2 instance&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(Optional): &lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recognize-expanded-volume-linux.html&#34;&gt;Increase disk size&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you are using a newly created EBS Volume, you will have to format the disk approriately:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;SSH into instance&lt;/li&gt;
&lt;li&gt;Follow the instructions here: &lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-using-volumes.html&#34;&gt;Using EBS Volumes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;sudo mkfs -t ext4 &amp;lt;location&amp;gt;&lt;/code&gt; in step 4&lt;/li&gt;
&lt;li&gt;Mount disk to /srv&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;Goal&lt;/code&gt;: Mount EBS volume to /srv&lt;/p&gt;
&lt;h4 id=&#34;3-provision-docker-server&#34;&gt;3. Provision Docker server&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Follow README &amp;amp; Run scripts: &lt;a href=&#34;https://github.com/medic/medic-infrastructure/tree/master/self-hosting/prepare-system&#34;&gt;Prepare Self-Hosting System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A zip will be shared via Slack until the scripts are moved to a public repo&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;Goal&lt;/code&gt;: CHT Application bootstraps and comes online&lt;/p&gt;
&lt;h4 id=&#34;4-dns-configuration&#34;&gt;4. DNS configuration&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Point A records to Elastic IP given to Docker server&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;5-review-ssl-certs&#34;&gt;5. Review SSL certs&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Location of certs is &lt;code&gt;/srv/settings/medic-core/nginx/private/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Name the key file as &lt;code&gt;default.key&lt;/code&gt; and the certificate file as &lt;code&gt;default.crt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Restarting nginx with new certs: &lt;code&gt;svc-restart medic-core nginx&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;6-configure-couch2pg&#34;&gt;6. Configure couch2pg&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Basic configuration: &lt;a href=&#34;https://github.com/medic/medic-couch2pg/blob/master/README.md&#34;&gt;https://github.com/medic/medic-couch2pg/blob/master/README.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Supervision/monitoring/notification&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;7-setup-postgres-to-work-with-couch2pg&#34;&gt;7. Setup postgres to work with couch2pg&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Creating the database, setting up permissions, exploring the tables and what they store&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;8debugging-couch2pgpostgres&#34;&gt;8.Debugging couch2pg/postgres&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Understanding the log and what the entries mean&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;troubleshooting&#34;&gt;Troubleshooting&lt;/h2&gt;
&lt;h4 id=&#34;1-restarting-processes&#34;&gt;1. Restarting processes&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/medic/medic-docs/blob/master/installation/self-hosting.md#how-to-access-container-retrieve-logs-isolate-security-groups&#34;&gt;https://github.com/medic/medic-docs/blob/master/installation/self-hosting.md#how-to-access-container-retrieve-logs-isolate-security-groups&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/medic/medic-os#service-management-scripts&#34;&gt;https://github.com/medic/medic-os#service-management-scripts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-investigating-logs&#34;&gt;2. Investigating logs&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Log into container: &lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/exec/&#34;&gt;https://docs.docker.com/engine/reference/commandline/exec/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Helpful docker commands: &lt;a href=&#34;https://github.com/medic/medic-docs/blob/master/installation/public-docker-image-setup.md#helpful-docker-commands&#34;&gt;https://github.com/medic/medic-docs/blob/master/installation/public-docker-image-setup.md#helpful-docker-commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Inside container, all appropriate logs can be found in: &lt;code&gt;/srv/storage/&amp;lt;service_name&amp;gt;/logs/*.log&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;3upgrading-the-container&#34;&gt;3.Upgrading the container&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Backup all data (EBS)&lt;/li&gt;
&lt;li&gt;Log into container and stop all services&lt;/li&gt;
&lt;li&gt;DO NOT REMOVE &lt;code&gt;/srv/storage/medic-core/&lt;/code&gt;, &lt;code&gt;/srv/settings/medic-core/couchdb/local.ini&lt;/code&gt;, wipe all other files in /srv [Note: Make script publicly accessibile]&lt;/li&gt;
&lt;li&gt;Change the image tag to the newest image release version:
&lt;a href=&#34;https://github.com/medic/medic-docs/blob/master/installation/public-docker-image-setup.md#download-medic-mobile-image--setup-custom-docker-network&#34;&gt;https://github.com/medic/medic-docs/blob/master/installation/public-docker-image-setup.md#download-medic-mobile-image--setup-custom-docker-network&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Change image tag in docker-compose file: &lt;a href=&#34;https://github.com/medic/medic-docs/blob/master/installation/public-docker-image-setup.md#use-docker-compose&#34;&gt;https://github.com/medic/medic-docs/blob/master/installation/public-docker-image-setup.md#use-docker-compose&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Launch new containers with appropriate COUCHDB_ADMIN_PASSWORD &amp;amp; HA_PASSWORD environment variables&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;4upgrading-the-webapp&#34;&gt;4.Upgrading the webapp&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Use Admin GUI page&lt;/li&gt;
&lt;li&gt;CLI via horticulturalist: &lt;a href=&#34;https://github.com/medic/medic-docs/blob/master/installation/self-hosting.md#links-to-medic-documentation-for-horticulturalist-for-upgrades&#34;&gt;https://github.com/medic/medic-docs/blob/master/installation/self-hosting.md#links-to-medic-documentation-for-horticulturalist-for-upgrades&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;4a-rds-help&#34;&gt;4a. RDS help&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Welcome.html&#34;&gt;https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Welcome.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;restore-from-backup-and-monitoring&#34;&gt;Restore from backup and monitoring&lt;/h2&gt;
&lt;h4 id=&#34;1-configure-backups&#34;&gt;1. Configure backups&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;EBS Snapshot Lifecycle Manager: &lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-lifecycle.html&#34;&gt;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-lifecycle.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-restoring-from-backup&#34;&gt;2. Restoring from backup&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Create volume from snapshot&lt;/li&gt;
&lt;li&gt;Tag appropriately for backups&lt;/li&gt;
&lt;li&gt;Mount volume to docker server&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;3-process-supervison&#34;&gt;3. Process supervison&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;supvisorctl&lt;/li&gt;
&lt;li&gt;/boot/supervisor-inspect&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;4-monitoring&#34;&gt;4. Monitoring&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html&#34;&gt;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;own-infrastructure-setup&#34;&gt;Own Infrastructure Setup&lt;/h2&gt;
&lt;h4 id=&#34;1-team-to-set-up-own-infrastructure-based-on-best-practices-and-recommendations-above&#34;&gt;1. Team to set up own infrastructure based on best-practices and recommendations above&lt;/h4&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Gateway</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/gateway/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/gateway/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Apps: Revalidate invalid reports</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/invalid-reports/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/invalid-reports/</guid>
      <description>
        
        
        &lt;p&gt;You may encounter a dreaded case when reports coming in to a Medic Webapp instance have a red indicator instead of the green indicator.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;invalid_report.png&#34; alt=&#34;Invalid Reports&#34;&gt;&lt;/p&gt;
&lt;p&gt;This may be caused by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Missing forms in the &lt;code&gt;app_settings&lt;/code&gt; config.
-Missing or incorrect fields in the input form. e.g Missing patient ID, or Patient ID with letters&lt;/li&gt;
&lt;li&gt;Extra fields in the input form. This happens when you don&amp;rsquo;t configure for some fields in the app_settings.json of the webapp&lt;/li&gt;
&lt;li&gt;Configuring some forms in the wrong section of the app_settings i.e &lt;code&gt;registrations&lt;/code&gt; and &lt;code&gt;patient_reports&lt;/code&gt;. Forms that don&amp;rsquo;t have a patient_id field because it is generated afterwards, e.g ANCR, IMMR, go to the &lt;code&gt;registrations&lt;/code&gt; section, while form that have a patient_id field e.g ANCP, ANCV, IMMV; go to the &lt;code&gt;patient_reports&lt;/code&gt; section&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;how-to-solve&#34;&gt;How to solve&lt;/h2&gt;
&lt;p&gt;To revalidate an invalid report, we need to clear the errors field on the doc (set it to []). Updating this field from Futon will not work and will result in an endless update process. The recommended way to do it is to download the doc, update it and then upload it. This will also ensure propagation and replication in couchdb.&lt;/p&gt;
&lt;p&gt;To download a doc, use:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl &#39;https://&amp;lt;username&amp;gt;:&amp;lt;password&amp;gt;@&amp;lt;instance&amp;gt;.app.medicmobile.org/medic/&amp;lt;doc id&amp;gt;&#39; &amp;gt; filename.json
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;filename.json&lt;/code&gt; is the local file in your computer you have stored the doc json&lt;/p&gt;
&lt;p&gt;Update &lt;code&gt;filename.json&lt;/code&gt;: Set &amp;ldquo;errors&amp;rdquo; to [] and remove &amp;ldquo;accept_patient_reports&amp;rdquo; transition so that sentinel can revalidate the report.&lt;/p&gt;
&lt;p&gt;Upload &lt;code&gt;filename.json&lt;/code&gt; with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl -X PUT hhttps://&amp;lt;username&amp;gt;:&amp;lt;password&amp;gt;@&amp;lt;instance&amp;gt;.app.medicmobile.org/medic/&amp;lt;doc id&amp;gt; -d @filename.json --header &amp;quot;Content-Type: application/json&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Apps: Message Loops</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/message-loops/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/message-loops/</guid>
      <description>
        
        
        &lt;p&gt;Endless messaging loops can between the webapp and a mobile number via the gateway due to autoreplies from the webapp.&lt;/p&gt;
&lt;p&gt;See the &lt;a href=&#34;https://github.com/medic/medic/issues/750#issuecomment-146254467&#34;&gt;Github Issue&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt; Add the offending number(e.g &lt;code&gt;800&lt;/code&gt; or &lt;code&gt;SAFARICOM&lt;/code&gt;) to the &lt;code&gt;Outgoing Deny List&lt;/code&gt; in the webapp&amp;rsquo;s &lt;code&gt;app_settings&lt;/code&gt; configuration file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;quot;multipart_sms_limit&amp;quot;: 10,
  &amp;quot;outgoing_deny_list&amp;quot;: &amp;quot;800, SAFARICOM&amp;quot;,
  &amp;quot;contact_summary&amp;quot;: &amp;quot;&amp;quot;

&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Apps: Moving Contacts within the Hierarchy</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/moving-contacts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/moving-contacts/</guid>
      <description>
        
        
        &lt;p&gt;Contacts are organized into a hierarchy. It is not straight-forward to move contacts from one position in the hierarchy to another because many copies of this hierarchy exist. Use the &lt;code&gt;move-contacts&lt;/code&gt; action in &lt;a href=&#34;https://github.com/medic/medic-conf&#34;&gt;&lt;code&gt;medic-conf&lt;/code&gt;&lt;/a&gt; to assign a new parent to contacts. This command will move the specified contact, all the contacts under that contact, and all reports created by any of those contacts. This action will download all documents that need to be updated, update the lineages within those documents, and then save the updated documents on your local disk. To commit those changes to the database, run the &lt;code&gt;upload-docs&lt;/code&gt; action.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Offline users who have contacts removed from their visible hierarchy will not automatically see those contacts disappear. The contact remains on the user&amp;rsquo;s device. Any updates made to the contact (or any reports created for that contact) will silently fail to sync (medic/medic/#5701). These users must be encouraged to clear cache and resync!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Also impactful, but less serious - this script can cause significant amounts of changes to the database and offline users who have contacts moved into their visible hierarchy may experience lengthy and bandwidth-intensive synchronizations.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;contacts&lt;/td&gt;
&lt;td&gt;Comma delimited list of contact IDs which will be moved&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;parent&lt;/td&gt;
&lt;td&gt;ID of the new parent which will be assigned to the provided contacts&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;docDirectoryPath&lt;/td&gt;
&lt;td&gt;This action outputs files to local disk at this destination&lt;/td&gt;
&lt;td&gt;No. Default &lt;code&gt;json-docs&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Some constraints when moving contacts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Allowed Parents&lt;/strong&gt; - When moving contacts on WebApp &amp;gt;v3.7, your chosen parent must be listed as a valid parent for the contact as defined in the &lt;a href=&#34;https://github.com/medic/medic-docs/blob/master/configuration/app-settings.md#configuring-place-hierarchy&#34;&gt;configuration for place hierarchy&lt;/a&gt;. For WebApp &amp;lt;v3.7, the default hierarchy is enforced.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Circular Hierarchy&lt;/strong&gt; - Nobody&amp;rsquo;s parent can ever be themself or their child.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Primary Contacts&lt;/strong&gt; - Primary contacts must be a descendant of the place for which they are the primary contact. You may need to select a new primary contact for a place through the WebApp if you&amp;rsquo;d like to move a primary contact to a new place in the hierarchy.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Minification&lt;/strong&gt; - Due to contact &amp;ldquo;minification&amp;rdquo; (#2635) which was implemented in v2.13, this script should not be used for versions prior to v2.13.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;p&gt;Move the contacts with the id &lt;code&gt;contact_1&lt;/code&gt; and &lt;code&gt;contact_2&lt;/code&gt; to have the parent &lt;code&gt;parent_id&lt;/code&gt;. The changes will be in the local folder &lt;code&gt;my_folder&lt;/code&gt; only for review. Run the second command to upload the changes after review.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;medic-conf --instance= move-contacts -- --contacts=contact_1,contact_2 --parent=parent_id --docDirectoryPath=my_folder
medic-conf --local upload-docs -- --docDirectoryPath=my_folder
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Move the contact with the id &lt;code&gt;contact_1&lt;/code&gt; to the top of the hierarchy (no parent).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;medic-conf --local move-contacts upload-docs -- --contacts=contact_1 --parent=root
&lt;/code&gt;&lt;/pre&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Including Multimedia in Forms</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/multimedia/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/multimedia/</guid>
      <description>
        
        
        &lt;h2 id=&#34;multimedia-formats&#34;&gt;Multimedia Formats&lt;/h2&gt;
&lt;p&gt;There are many supported formats for video, audio, and images. We recommend using h.264(mpeg) for video, jpeg for images, and mp3 for audio. When creating videos or images keep in mind the dimensions and storage capabilities on phones that may be used. Lower end phones have smaller storage and screen sizes. When rendering images, video, and audio the CHT uses the browser&amp;rsquo;s built in rendering tools. This means you can render any media format that is supported by the &lt;a href=&#34;https://github.com/medic/medic-docs/blob/master/installation/supported-software.md#dependencies&#34;&gt;minimum version of Chrome&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;List of Supported formats&lt;/strong&gt; &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTML/Supported_media_formats#Browser_compatibility&#34;&gt;video/audio&lt;/a&gt;
&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types&#34;&gt;images&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;To play multimedia from forms you need to add elements to your xml and upload the corresponding multimedia to couchdb as an attachment to your form.&lt;/p&gt;
&lt;h3 id=&#34;form-config&#34;&gt;Form Config&lt;/h3&gt;
&lt;p&gt;Add an xml element of text and another element of value. Set form equal to the type of multimedia being used(video, audio, image). The value element must contain &lt;code&gt;jr://file_name.suffix&lt;/code&gt; where &lt;code&gt;file_name.suffix&lt;/code&gt; is the name of your multimedia file uploaded to couchdb.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;text id=&amp;quot;somevideo&amp;quot;&amp;gt;
    &amp;lt;value form=&amp;quot;video&amp;quot;&amp;gt;jr://video.mp4&amp;lt;/value&amp;gt;
&amp;lt;/text&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Display Example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;input ref=&amp;quot;q2&amp;quot;&amp;gt;
    &amp;lt;label ref=&amp;quot;jr:itext(&#39;somevideo&#39;)&amp;quot;/&amp;gt;
&amp;lt;/input&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Here is a sample form that will display a video and/or image. When this form is opened a video player will be displayed so the user can watch the video. Forms support displaying of images and playing of audio files.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;h:html&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;xmlns=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://www.w3.org/2002/xforms&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#c4a000&#34;&gt;xmlns:h=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://www.w3.org/1999/xhtml&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#c4a000&#34;&gt;xmlns:ev=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://www.w3.org/2001/xml-events&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#c4a000&#34;&gt;xmlns:xsd=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#c4a000&#34;&gt;xmlns:jr=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://openrosa.org/javarosa&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;h:head&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;h:title&amp;gt;&lt;/span&gt;Multimedia - Demo Form&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/h:title&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;model&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;itext&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;translation&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;lang=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;!-- Attach sample media files to form doc --&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;!-- https://sample-videos.com --&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;text&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;somevideo&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;value&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;form=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;video&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;jr://video.mp4&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/text&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;text&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;someimage&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;value&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;form=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;image&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;jr://image.jpg&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/text&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;text&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;someaudio&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;value&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;form=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;audio&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;jr://audio.mp3&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/text&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/translation&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/itext&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;instance&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;media&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;multimedia&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;meta&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;instanceID/&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/meta&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/media&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/instance&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/model&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/h:head&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;h:body&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;class=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;pages&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;group&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;appearance=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;field-list&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;ref=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;g&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;input&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;ref=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;q2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;label&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;ref=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;jr:itext(&amp;#39;somevideo&amp;#39;)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/input&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;input&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;ref=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;q3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;label&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;ref=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;jr:itext(&amp;#39;someimage&amp;#39;)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/input&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;input&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;ref=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;q3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;label&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;ref=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;jr:itext(&amp;#39;someaudio&amp;#39;)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/input&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/group&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/h:body&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/h:html&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;couchdb-config&#34;&gt;Couchdb Config&lt;/h3&gt;
&lt;p&gt;The file needs to be added as an attachment with a name that matches what is defined in the form. This can be added by using curl or fauxton. Here is the structure of the curl command.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -vX PUT https://user:pass@server_name/medic/&amp;lt;form_doc_id&amp;gt;/&amp;lt;attachment_name.suffix&amp;gt;?rev=&amp;lt;latest_form_revision&amp;gt; --data-binary @&amp;lt;local_file_name&amp;gt; -H &amp;quot;Content-Type: &amp;lt;expected_mime_type&amp;gt;&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Here is an example of how it would look uploading a sample video for the form above.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -vX PUT https://user:pass@localhost/medic/form:multimedia/video.mp4?rev=11-a2ebf09cb9678c031859cd2c1da4b603 -k --data-binary @sample.mp4 -H &amp;quot;Content-Type: video/mp4&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To use fauxton.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Navigate to fauxton. https://&amp;lt;server_name&amp;gt;/_utils&lt;/li&gt;
&lt;li&gt;Click on the medic database.&lt;/li&gt;
&lt;li&gt;Locate the form document.&lt;/li&gt;
&lt;li&gt;Click add attachment&lt;/li&gt;
&lt;li&gt;Upload the multimedia file and ensure the name matches what has been defined in the form.&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Obtaining Logs</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/obtaining-logs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/obtaining-logs/</guid>
      <description>
        
        
        &lt;p&gt;There are many places where useful logs reside. This details all those places, and the easiest way to get a hold of them.&lt;/p&gt;
&lt;h2 id=&#34;browser-logs&#34;&gt;Browser logs&lt;/h2&gt;
&lt;p&gt;To check if there are relevant logs open up the developer console. The shortcut is probably COMMAND+ALT+I on MacOS, or CTRL+ALT+I on Linux and Windows. Click the console tab and copy out any errors or logging that you think is relevant.&lt;/p&gt;
&lt;h2 id=&#34;server-logs&#34;&gt;Server logs&lt;/h2&gt;
&lt;p&gt;The easiest way is to use &lt;code&gt;medic-logs&lt;/code&gt;, a tool that comes with &lt;a href=&#34;https://github.com/medic/medic-conf&#34;&gt;&lt;code&gt;medic-conf&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;medic-logs anInstance gardener
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;See &lt;a href=&#34;https://github.com/medic/medic-conf#medic-logs&#34;&gt;medic-logs documentation&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;This will download logs to your current directory. You will need to look through these logs to work out what is relevant.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Replicating Production Data Locally</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/replicating-production-data-locally/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/replicating-production-data-locally/</guid>
      <description>
        
        
        &lt;p&gt;Sometimes there will be a production problem that you need to dig into locally to solve. This guide explains how to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Copy the data from an instance to a local CouchDB database&lt;/li&gt;
&lt;li&gt;Run a local webapp instance with that data&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;first-a-note-about-data-safety&#34;&gt;First, a note about data safety&lt;/h2&gt;
&lt;p&gt;Production data is medical data. It&amp;rsquo;s HIV statuses and pregnancies. It&amp;rsquo;s important, and it&amp;rsquo;s not yours. If you&amp;rsquo;re downloading it, do so on an &lt;a href=&#34;../support/securing-computers.md&#34;&gt;encrypted drive&lt;/a&gt; and delete it once you&amp;rsquo;re done with it.&lt;/p&gt;
&lt;h2 id=&#34;step-1-get-the-data&#34;&gt;Step 1: Get the data&lt;/h2&gt;
&lt;p&gt;First thing is to get the data onto your local CouchDB. It&amp;rsquo;s advisable to create a new DB for this, so that you have a fresh untouched collection of data that isn&amp;rsquo;t mixed in with anything you have locally.&lt;/p&gt;
&lt;h3 id=&#34;small-production-instances&#34;&gt;Small production instances&lt;/h3&gt;
&lt;p&gt;If there isn&amp;rsquo;t much data you can replicate the entire DB locally. You can initiate this either from your local Fauxton, or from the command line. You must use an administrator username and password for this at both the source and destination.&lt;/p&gt;
&lt;p&gt;For Fauxton, navigate to http://localhost:5984/_utils/#/replication/_create
For command line, see: &lt;a href=&#34;http://docs.couchdb.org/en/2.1.1/api/server/common.html#post--_replicate&#34;&gt;http://docs.couchdb.org/en/2.1.1/api/server/common.html#post--_replicate&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Note that replication may stall on one document, and you may end up with your local DB having one less document than the source. This is due to how our URLs are setup: the replicator gets confused and considers &lt;code&gt;login&lt;/code&gt; (ie &lt;code&gt;https://url/login&lt;/code&gt;) to be a document. You can safely ignore this difference - you&amp;rsquo;re good to go once your destination database has one less document than the source.&lt;/p&gt;
&lt;h3 id=&#34;large-production-instances&#34;&gt;Large production instances&lt;/h3&gt;
&lt;p&gt;If the instance is too large to replicate locally (or you are too impatient), you can replicate the data accessible to a single user. This process downloads a user&amp;rsquo;s data into a browser and then copies that data into a CouchDB database.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open Firefox and navigate to &lt;code&gt;about:config&lt;/code&gt;. Set &lt;code&gt;security.csp.enable&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; to disable Content Security Policies.&lt;/li&gt;
&lt;li&gt;Navigate to the instance and login as the user with the data you want. &lt;em&gt;(If you want more data, like an entire district, you could consider logging in as a new user with a contact document at your desired place in the contact hierarchy. But that is an exercise for the reader)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Wait for the data to replicate. You know this is done once the app lets you interact with it. &lt;em&gt;(If you want to get the user&amp;rsquo;s data before purging, consider disabling purging. Another exercise for the reader)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Make sure your local CouchDB has CORS enabled: &lt;a href=&#34;http://docs.couchdb.org/en/2.1.1/config/http.html?highlight=CORs&#34;&gt;http://docs.couchdb.org/en/2.1.1/config/http.html?highlight=CORs&lt;/a&gt;. Consider using &lt;a href=&#34;https://github.com/pouchdb/add-cors-to-couchdb#what-it-does&#34;&gt;add-cors-to-couchdb&lt;/a&gt; or its recommended settings.&lt;/li&gt;
&lt;li&gt;Allow your CouchDB to be accessible via &lt;code&gt;https&lt;/code&gt;. One way is to run &lt;code&gt;ngrok http 5984&lt;/code&gt; to make your CouchDB accessible via a url like &lt;a href=&#34;https://abcd1234.ngrok.io&#34;&gt;https://abcd1234.ngrok.io&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Open the console in Firefox and run &lt;code&gt;await PouchDB.replicate(&#39;medic-user-XXX&#39;, &#39;https://your:admin@abcd1234.ngrok.io/YYY&#39;);&lt;/code&gt;. Here &lt;code&gt;XXX&lt;/code&gt; is the name you logged in as, and &lt;code&gt;YYY&lt;/code&gt; is the name of a database in which to store the data.
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you get 401s make sure that: your CouchDB credentials are right; and you don&amp;rsquo;t have a local session in the same browser already (session cookies can take precedence over basic auth);  and if you&amp;rsquo;re running CouchDB in Docker you have exposed both &lt;code&gt;5984&lt;/code&gt; and &lt;code&gt;5986&lt;/code&gt; to localhost.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Wait for the replication to complete. In Fauxton you should see the database YYY with the same number of documents reported during the user&amp;rsquo;s initial replication.&lt;/li&gt;
&lt;li&gt;Log out of the instance and clear your data from the developer console (Application -&amp;gt; Clear storage).&lt;/li&gt;
&lt;li&gt;Navigate to &lt;code&gt;about:config&lt;/code&gt;. Set &lt;code&gt;security.csp.enable&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; to re-enable Content Security Policies.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;regardless-do-this-too&#34;&gt;Regardless, do this too&lt;/h3&gt;
&lt;p&gt;To log in as a specific prod user you need to also copy them from the prod &lt;code&gt;_users&lt;/code&gt; database into your own local &lt;code&gt;_users&lt;/code&gt; database. The simplest way to do this is to just open the DB in Fauxton, find the document and copy it on your clipboard, then create a new document in your local &lt;code&gt;_users&lt;/code&gt; DB and paste it in, deleting the &lt;code&gt;_rev&lt;/code&gt; property.&lt;/p&gt;
&lt;p&gt;You could also use this opportunity to change the password to something easier to work with locally. To do this, add a &lt;code&gt;password&lt;/code&gt; property into the document with the password you want in plain text. CouchDB will convert this to a properly hashed password on save.&lt;/p&gt;
&lt;h2 id=&#34;step-2-run-it-locally&#34;&gt;Step 2, run it locally&lt;/h2&gt;
&lt;p&gt;First you need to decide if you need a local development environment (unless you already have one, in which case you might as well use it), or are happy to just use &lt;a href=&#34;https://github.com/medic/horticulturalist&#34;&gt;Horticulturalist&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A local development environment will be useful to you if:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You want to change code locally&lt;/li&gt;
&lt;li&gt;You want to see useful, non-minified stack traces, or otherwise browse / step through non-minified code in the browser&lt;/li&gt;
&lt;li&gt;You want to deploy a version of the code older than &lt;code&gt;2.14.0&lt;/code&gt;, as they are not available in Horticulturalist&amp;rsquo;s repos.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;option-1-local-development-environment&#34;&gt;Option 1, local development environment&lt;/h3&gt;
&lt;p&gt;If you don&amp;rsquo;t already have a local dev env, follow the instructions on the &lt;a href=&#34;https://github.com/medic/cht-core/blob/master/DEVELOPMENT.md&#34;&gt;development setup instructions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Then you need to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Push the code you want to run via &lt;code&gt;COUCH_URL=http://your:admin@localhost:5984/YYY grunt deploy&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Start API and Sentinel by running &lt;code&gt;COUCH_URL=http://your:admin@localhost:5984/YYY node api/server&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Once you&amp;rsquo;ve done all of that you should be able to log in with your user.&lt;/p&gt;
&lt;h3 id=&#34;option-2-horticulturalist&#34;&gt;Option 2, horticulturalist&lt;/h3&gt;
&lt;p&gt;Follow the instructions on the &lt;a href=&#34;https://github.com/medic/horticulturalist&#34;&gt;horticulturalist repo&lt;/a&gt; to get it installed. Then:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Make sure that the &lt;code&gt;medic&lt;/code&gt; DB doesn&amp;rsquo;t exist, so that you have a fresh database.&lt;/li&gt;
&lt;li&gt;Replicate your local PROD DB into a new &lt;code&gt;medic&lt;/code&gt; database using the Fauxton console.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;horti --local --bootstrap=XXX&lt;/code&gt;, where &lt;code&gt;XXX&lt;/code&gt; is the version you want to use (maybe the same one as production?)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You should now be able to log in as that user locally!&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Purging</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/purging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/purging/</guid>
      <description>
        
        
        &lt;p&gt;&lt;em&gt;Only available in 3.7.0 and above&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Purging is a tool that allows you to increase performance and available disk space for offline users (eg CHWs) by removing unneeded documents from their device.&lt;/p&gt;
&lt;p&gt;As users continually generate new reports their performance may naturally degrade as a result.
You can use purging to remove older documents that are no longer relevant from their devices.
Purging only removes documents from user&amp;rsquo;s devices: these reports are still available for
online analytics and impact metrics.&lt;/p&gt;
&lt;p&gt;Purging is disabled by default, and is enabled if a purge function is specified in
&lt;code&gt;app_settings.json&lt;/code&gt;, along with a run schedule.&lt;/p&gt;
&lt;p&gt;The following example would purge all reports that were created more than a year ago:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;//&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;other app_settings settings&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;purge&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;fn&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;function(userCtx, contact, reports, messages) { const old = Date.now() - (1000 * 60 * 60 * 24 * 365); return reports.filter(r =&amp;gt; r.reported_date &amp;lt; old).map(r =&amp;gt; r._id);}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;text_expression&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;at 12 am on Sunday&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Purging is both very powerful and also very dangerous&lt;/strong&gt;. Read the rest of this document carefully to make sure you completely understand how to purge and the ramifications of doing so, before using purging in your project.&lt;/p&gt;
&lt;h2 id=&#34;server-side&#34;&gt;Server-side&lt;/h2&gt;
&lt;p&gt;Purging runs on the server on a configurable schedule.&lt;/p&gt;
&lt;p&gt;It will iterate over all users to generate a list of unique roles groups that represent every user.
Each group will have their purged docs saved in an individual database.&lt;/p&gt;
&lt;p&gt;Then, it will iterate over all existent contacts, collecting all reports about that contact along
with all sms messages that the contact has sent or received.
This is similar to the scoping you may have encountered when configuring &lt;a href=&#34;https://docs.communityhealthtoolkit.org/beta/apps/reference/tasks/&#34;&gt;tasks&lt;/a&gt; and &lt;a href=&#34;https://docs.communityhealthtoolkit.org/beta/apps/reference/targets/&#34;&gt;targets&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The configured purge function runs over all combinations of purge scope (contact + reports + messages)
and user context (unique list of roles) to determine which docs should be purged.&lt;/p&gt;
&lt;p&gt;The resulting list of docs to be purged is compared to the existent purged docs so that only the differences
are saved (old purges are reverted and new purges are added).&lt;/p&gt;
&lt;p&gt;A document is considered purged for a user if a document with the same id, prefixed by &lt;code&gt;purge&lt;/code&gt;,
exists in the corresponding purge database.
The following user:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;org.couchdb.user:&amp;lt;your user&amp;gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;roles&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
       &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;district_admin&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
       &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;supervisor&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;would get their purges from a &lt;code&gt;medic-purged-role-&amp;lt;role_hash&amp;gt;&lt;/code&gt; where &lt;code&gt;role_hash&lt;/code&gt; is an md5 hash of the
user&amp;rsquo;s roles.&lt;/p&gt;
&lt;p&gt;When users sync (includes initial sync), they will only download documents that are not purged for their roles.&lt;/p&gt;
&lt;h2 id=&#34;client-side&#34;&gt;Client-side&lt;/h2&gt;
&lt;p&gt;Purging runs on the user&amp;rsquo;s device at startup, before the application booting, when any of these
conditions are met:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The device was just setup and so initial sync just occurred.&lt;/li&gt;
&lt;li&gt;The user&amp;rsquo;s roles list has changed&lt;/li&gt;
&lt;li&gt;It has been more than 7 days since the user has purged.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Purging will not run on startup if purge is not configured, if last purge occurred recently or if
the user doesn&amp;rsquo;t have an internet connection.&lt;/p&gt;
&lt;p&gt;When purging runs, the device calls an API endpoint that returns batches of doc ids that have
been purged since last time the same device has run purge.
The system is similar to CouchDB replication, in the sense that a &lt;code&gt;checkpointer&lt;/code&gt; document
is saved in the corresponding server-side database, that stores the &lt;code&gt;last_seq&lt;/code&gt; that the device has
downloaded and is used to get the next batch of ids.
After receiving a batch of ids, the device simply deletes the indicated docs locally,
marking them with a &lt;code&gt;purged&lt;/code&gt; flag.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;To enable purging, write your purge configuration to &lt;code&gt;purge.js&lt;/code&gt; in your project root:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;module&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;text_expression&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;at 9 am on Sunday&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;run_every_days&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;cron&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;0 1 * * SUN&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;fn&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;userCtx&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;reports&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;messages&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;old&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;Date&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;now&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1000&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;24&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;365&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;oldMessages&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;Date&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;now&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1000&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;24&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
      
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;reportsToPurge&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;reports&lt;/span&gt;
                                 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;filter&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reported_date&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;old&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
                                 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;map&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;_id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;messagesToPurge&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;messages&lt;/span&gt;
                                 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;filter&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;m&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reported_date&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;oldMessages&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
                                 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;map&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;m&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;_id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
      
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[...&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reportsToPurge&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;messagesToPurge&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;];&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; 
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;purge-configuration&#34;&gt;Purge configuration&lt;/h3&gt;
&lt;p&gt;As shown above, you should be exporting a property &lt;code&gt;fn&lt;/code&gt; defining a self contained function:
it should have no outside dependencies - like used variables, required modules or call outside functions.&lt;/p&gt;
&lt;p&gt;This function takes four parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;userCtx&lt;/code&gt;, an object with the user&amp;rsquo;s &lt;code&gt;roles&lt;/code&gt; as fields. For more information read the &lt;a href=&#34;https://docs.couchdb.org/en/stable/json-structure.html#userctx-object&#34;&gt;documentation for the User Context Object&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;contact&lt;/code&gt;, the contact document of a patient or other contact who has reports about them.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reports&lt;/code&gt;, an array of all reports for that patient that are present on the server.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;messages&lt;/code&gt;, an array of sms messages that the contact has sent or received&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And should return an array of &lt;code&gt;_id&lt;/code&gt; values for docs you would like to be purged
(or &lt;code&gt;undefined&lt;/code&gt; / nothing if you don&amp;rsquo;t wish to purge anything).
Only ids of docs that were passed to the function are valid for purging: you are not allowed to purge other documents.&lt;/p&gt;
&lt;p&gt;In the cases of reports that do not have patients or their patients are not found, the &lt;code&gt;purge&lt;/code&gt; function
will receive an empty object as &lt;code&gt;contact&lt;/code&gt;.
In the cases of reports about deleted patients, the &lt;code&gt;purge&lt;/code&gt; function will receive a &lt;code&gt;{ _deleted: true }&lt;/code&gt;
object as the &lt;code&gt;contact&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;schedule-configuration&#34;&gt;Schedule configuration&lt;/h3&gt;
&lt;p&gt;You must set a schedule for purging to run server-side.
Depending on the size of the database and server capacity, purging could be a lengthy and
resource intensive operation, so it is recommended you run purge on a schedule that your server
can sustain (for example at nighttime in the weekends).&lt;/p&gt;
&lt;p&gt;You can also change the frequency of local purge downloads (default being every 7 days).&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;property&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;th&gt;required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Self-contained purge function&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;run_every_days&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The interval (in days) at which purges will be downloaded client-side. &lt;em&gt;Default 7&lt;/em&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;text_expression&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Any valid text expression to describe the interval of running purge server-side. For more information, see &lt;a href=&#34;https://bunkat.github.io/later/parsers.html#text&#34;&gt;LaterJS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;no if &lt;code&gt;cron&lt;/code&gt; provided&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cron&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Any valid Cron expression to describe the interval of running purge server-side. For more information, see &lt;a href=&#34;https://bunkat.github.io/later/parsers.html#cron&#34;&gt;LaterJS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;no if &lt;code&gt;text_expression&lt;/code&gt; provided&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Example of purge configured in your app_settings:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;//&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;other app_settings settings&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;,&lt;/span&gt;
 &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;purge&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;fn&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;function(userCtx, contact, reports, messages) { return  []; }&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;cron&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;0 1 * * SUN&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;text_expression&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;at 1:00 am on Sun&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;run_every_days&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;considerations&#34;&gt;Considerations&lt;/h2&gt;
&lt;h3 id=&#34;purged-documents-server-side&#34;&gt;Purged documents server-side&lt;/h3&gt;
&lt;p&gt;Purging is run as a scheduled task in Sentinel.&lt;/p&gt;
&lt;p&gt;Purging does not touch documents in the &lt;code&gt;medic&lt;/code&gt; database, everything is done in separate purge databases
(&lt;code&gt;medic-purged-roles-&amp;lt;roles-hash&amp;gt;&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;The purge databases names contain an md5 of the JSON representation of a list of unique roles.
They also contain a &lt;code&gt;_local/info&lt;/code&gt; doc where the roles are listed in clear text.&lt;/p&gt;
&lt;p&gt;A &lt;code&gt;purgelog&lt;/code&gt; document is saved in &lt;code&gt;medic-sentinel&lt;/code&gt; after every purge. The purgelog has a meaningful
ID: &lt;code&gt;purgelog:&amp;lt;timestamp&amp;gt;&lt;/code&gt;, where timestamp represents the moment when purge was completed. The doc
also contains a property &lt;code&gt;roles&lt;/code&gt; with the collection of roles purge has run for, and a &lt;code&gt;duration&lt;/code&gt; property
representing the time it took to run purge, in ms.
You can retrieve a list of all your purge logs, descending from newest to oldest, with this request:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https(s)://&amp;lt;host&amp;gt;/medic-sentinel/_all_docs?end_key=&amp;quot;purgelog:&amp;quot;&amp;amp;start_key=&amp;quot;purgelog:\ufff0&amp;quot;&amp;amp;descending=true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Purging is reversible. If you update your purge function, when running purge the old invalid
purges will be deleted. This does not mean that devices will automatically re-download documents that
become unpurged. In order for the user to re-download a previously purged document, the document either
needs to be updated in the &lt;code&gt;medic&lt;/code&gt; database on the server or the user has to download all data again.&lt;/p&gt;
&lt;p&gt;Running purge will not remove old purge databases, even if they don&amp;rsquo;t correspond to any existent users.
Their removal is a manual process.&lt;/p&gt;
&lt;p&gt;Purge does not run when adding new roles or adding said new roles to users. It also does not run when an existent
user is updated to have a new unique list of roles (one that purge has not run over yet).
This means that roles need to be planned carefully in order to take advantage of serverside purge. If purge
has not run for the user&amp;rsquo;s list of roles at the moment of initial replication, the user will download &lt;strong&gt;all&lt;/strong&gt;
documents - only to be purged later.&lt;/p&gt;
&lt;h3 id=&#34;purged-documents-client-side&#34;&gt;Purged documents client-side&lt;/h3&gt;
&lt;p&gt;The key thing to keep in mind while purging is that &lt;strong&gt;documents that you purge are deleted on
user&amp;rsquo;s device&lt;/strong&gt;. This sounds obvious, but it&amp;rsquo;s important to understand &lt;em&gt;how&lt;/em&gt; this affects
the running of the application:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Any &lt;strong&gt;rules&lt;/strong&gt; you have written that presume that the document exists may break.
For example, if the document completes a task, purging it will reopen that task,
unless you &lt;em&gt;also&lt;/em&gt; purge the document that created the task in the first place
(while making sure that purging &lt;em&gt;that&lt;/em&gt; report doesn&amp;rsquo;t break more things!)&lt;/li&gt;
&lt;li&gt;Similarly &lt;strong&gt;targets&lt;/strong&gt; won&amp;rsquo;t be able to use the report to generate values, so counts may go
down or become inaccurate&lt;/li&gt;
&lt;li&gt;Additionally, the &lt;strong&gt;contact summary&lt;/strong&gt; will also lose out on being able to use that report&lt;/li&gt;
&lt;li&gt;Changing the user&amp;rsquo;s roles list (adding/removing roles) will cause the user to download &lt;strong&gt;all purged docs ids&lt;/strong&gt;
from the purge database corresponding to their new roles list.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More subtly, you may also confuse your users!&lt;/p&gt;
&lt;p&gt;If you purge documents too quickly, they may get confused as to whether they created the report
or not, and may create it again, causing data problems. Users are not told that purging is
occurring in a very obvious way: the expectation is that purging will naturally occur as
documents become irrelevant, and so users should never really notice.&lt;/p&gt;
&lt;p&gt;Users may search for their own documents, and use data from them in novel ways you may not anticipate.
It&amp;rsquo;s important to work with your users to ensure documents are only removed once there are no uses
for them.&lt;/p&gt;
&lt;p&gt;It is key then, that you test your purge rules thoroughly!&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Conncting to RDBMS in Windows</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/rdbms-in-windows/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/rdbms-in-windows/</guid>
      <description>
        
        
        &lt;p&gt;Connecting to RDBMS, the PostgreSQL server, is pretty stratightforward in nix systems. In Windows there are a couple of things you need to do to get it up and running.&lt;/p&gt;
&lt;h2 id=&#34;ssh-key-generation-and-importing&#34;&gt;SSH Key Generation and Importing&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Download Puttygen from &lt;a href=&#34;https://www.ssh.com/ssh/putty/download&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run Puttygen Go to Windows Start menu → All Programs → PuTTY→ PuTTYgen.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a new key pair for your computer.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;puttygen-run-key-generate.png&#34; alt=&#34;Putty-gen-key-pair&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Convert the key generated from ssh2 format to openssh. Puttygen supports this. Guide &lt;a href=&#34;https://stackoverflow.com/questions/2224066/how-to-convert-ssh-keypairs-generated-using-puttygenwindows-into-key-pairs-use?answertab=votes#tab-top&#34;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;1. Open PuttyGen
2. Click Load
3. Load your private key
4. Go to Conversions-&amp;gt;Export OpenSSH and export your private key
5. Copy your private key to ~/.ssh/id_dsa (or id_rsa).
6. Create the RFC 4716 version of the public key using ssh-keygen
    ssh-keygen -e -f ~/.ssh/id_dsa &amp;gt; ~/.ssh/id_dsa_com.pub
6. Convert the RFC 4716 version of the public key to the OpenSSH format:
    ssh-keygen -i -f ~/.ssh/id_dsa_com.pub &amp;gt; ~/.ssh/id_dsa.pub
    
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;Import the file using PuTTYgen:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;putty-gen-import.png&#34; alt=&#34;puttty-import-key&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;Save it as PuTTY Private Key File .ppk:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;putty-save-key.png&#34; alt=&#34;puttty-save-key&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;Add the key (.ppk) to Pageant (PuTTY authentication agent):&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;putty-add-key.png&#34; alt=&#34;puttty-add-key&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;Now you can connect to RDBMS using PuTTY:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;puttty-connect.png&#34; alt=&#34;puttty-connect&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;putty-connect-final.png&#34; alt=&#34;puttty-connect&#34;&gt;&lt;/p&gt;
&lt;p&gt;If you are connecting to rdbms in order to use a posgres client. You may not need to tunnel the connection. The client can do it for you.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;rdbms_connect_1.png&#34; alt=&#34;rdbms_1&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;rdbms_connect_2.png&#34; alt=&#34;rdbms_2&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Update Collect Forms Remotely</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/collect-forms-update/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/collect-forms-update/</guid>
      <description>
        
        
        &lt;p&gt;To do over the air Medic Collect form updates via HTTP rather than sending APKs which have a long manual install process, follow the steps below:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Have your xls forms ready in the folder.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;They should use underscore as name separators. e.g form_name.xlsx&lt;/li&gt;
&lt;li&gt;They should have &lt;code&gt;form_id&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt;  properties in the settings&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;xform_name_settings.png&#34; alt=&#34;Name property&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Upload the forms to the instance using &lt;code&gt;Medic-Conf&lt;/code&gt; Using the &lt;code&gt;upload-collect-forms&lt;/code&gt; &lt;a href=&#34;https://github.com/medic/medic-conf/blob/master/src/cli/supported-actions.js&#34;&gt;action&lt;/a&gt; as shown below.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;medic-conf --instance=user:pass@instancename.app.medicmobile.org upload-collect-forms
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Go to the Collect App. Delete All forms then go to &lt;code&gt;Get Blank Form&lt;/code&gt; and select all the forms you need.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;troubleshooting&#34;&gt;Troubleshooting&lt;/h1&gt;
&lt;p&gt;When you go to &lt;code&gt;Get Blank Forms&lt;/code&gt; and instead of getting a list of the forms available, you get a pop-up error which has a portion of this message instead&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...OpenRosa Version 1.0 standard: Forms list entry 1 is missing one or more tags: formId, name or downloadUrl
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This means you probably uploaded a XLS file without a &lt;code&gt;name&lt;/code&gt; or &lt;code&gt;form_id&lt;/code&gt; property. To find out which form is missing that, use this command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl -vvvv -H &amp;quot;x-openrosa-version: 1&amp;quot; http://user:pass@host:port/api/v1/forms
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Should bring a list like this one&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;xform_list.png&#34; alt=&#34;Xform List&#34;&gt;&lt;/p&gt;
&lt;p&gt;Go through the list and see which form has  a missing &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;formID&amp;gt;&lt;/code&gt; property. Add it and reuploadthe forms using &lt;code&gt;medic-conf&lt;/code&gt; again.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: CouchDB replication</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/replication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/replication/</guid>
      <description>
        
        
        &lt;p&gt;Replication is what we call it when users download a copy of the data on to their device.&lt;/p&gt;
&lt;h2 id=&#34;restricting-replication&#34;&gt;Restricting replication&lt;/h2&gt;
&lt;p&gt;If the user has an online role they can access all the data, otherwise they will get restricted access to the data.&lt;/p&gt;
&lt;h3 id=&#34;restriction-by-place&#34;&gt;Restriction by place&lt;/h3&gt;
&lt;p&gt;The most common restriction is by place. This is where we check the user&amp;rsquo;s &lt;code&gt;facility_id&lt;/code&gt; property, and allow access to all contacts that are descendants of that place, and all reports and messages that are about one of those descendants.&lt;/p&gt;
&lt;p&gt;For example, if a CHP&amp;rsquo;s &lt;code&gt;facility_id&lt;/code&gt; property is set to the ID of the Maori Hill clinic, then they will be able to see all patients and all reports about patients at that clinic.&lt;/p&gt;
&lt;h3 id=&#34;depth&#34;&gt;Depth&lt;/h3&gt;
&lt;p&gt;Sometimes though you want to only access contacts near the top of the hierarchy. This may be because returning all contacts would be too much data to be practical, or for patient privacy, or because it&amp;rsquo;s just not part of your workflow. In this case you can configure a replication depth for a specific role under &lt;code&gt;replication_depth&lt;/code&gt; in the app settings.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;replication_depth&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;role&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;district_manager&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;depth&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;role&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;national_manager&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;depth&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;supervisor-signoff&#34;&gt;Supervisor signoff&lt;/h3&gt;
&lt;p&gt;Some reports need to be signed off by a supervisor even though that supervisor doesn&amp;rsquo;t have the depth to see the patient the report is about. To achieve this the report needs a field named &lt;code&gt;needs_signoff&lt;/code&gt; with a value of &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;sensitive-documents&#34;&gt;Sensitive documents&lt;/h3&gt;
&lt;p&gt;We won&amp;rsquo;t replicate documents that are about the user when the sender is someone the user can&amp;rsquo;t access. For example, if a supervisor submits a report about one of their CHPs, that CHP won&amp;rsquo;t be able to see it.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Customizing Titles in the Reports List</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/report-titles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/report-titles/</guid>
      <description>
        
        
        &lt;p&gt;&lt;em&gt;Added in 3.9.0&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;By default the CHT shows the name of the subject of the report in the reports list. This can be overridden by configuring the &lt;code&gt;subject_key&lt;/code&gt; property with a translation key in the form document.&lt;/p&gt;
&lt;p&gt;The translation uses a summary of the report as the evaluation context so you can include report fields in your value, for example: &lt;code&gt;Case registration {{case_id}}&lt;/code&gt;. Useful properties available in the summary include: &lt;code&gt;from&lt;/code&gt; (the phone number of the sender), &lt;code&gt;phone&lt;/code&gt; (the phone number of the report contact), &lt;code&gt;form&lt;/code&gt; (the form code), &lt;code&gt;subject.name&lt;/code&gt; (the name of the subject), and &lt;code&gt;case_id&lt;/code&gt; (the generated case id).&lt;/p&gt;
&lt;h2 id=&#34;code-sample&#34;&gt;Code Sample&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;  &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;internalId&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;signal&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Signal signoff&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;subject_key&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;signal.list.subject&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;,&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Apps: Securing Android Devices</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/securing-android/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/securing-android/</guid>
      <description>
        
        
        &lt;p&gt;To secure an android device you should enable at least a pin code lock on the device, enable FDE (full disc encryption) and setup remote wiping capabilities by enabling mobile device management.&lt;/p&gt;
&lt;h2 id=&#34;pin-setup-and-fde&#34;&gt;PIN Setup and FDE&lt;/h2&gt;
&lt;p&gt;Instructions are slightly different per device. Enabling FDE has the added benefit that you must also lock the device with a pin code or password.&lt;/p&gt;
&lt;h3 id=&#34;android-50-or-later&#34;&gt;Android 5.0 or later&lt;/h3&gt;
&lt;p&gt;Open the &lt;code&gt;Security&lt;/code&gt; menu under settings. On unmodified versions of Android, this
can be found under &lt;code&gt;Settings&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;Personal&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;Security&lt;/code&gt;. Choose &lt;code&gt;Encrypt Phone&lt;/code&gt;, &lt;code&gt;Encrypt Tablet&lt;/code&gt;, or &lt;code&gt;Encrypt Device&lt;/code&gt;. If you haven&amp;rsquo;t already set a PIN
or passcode for the lock screen, you will be prompted to do so. Remember this
PIN and do not write it down.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;encrypt-50.jpg&#34; alt=&#34;Screenshot for Android 5.0&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;android-44-or-earlier&#34;&gt;Android 4.4 or earlier&lt;/h3&gt;
&lt;p&gt;First, you&amp;rsquo;ll need to set up a PIN. Navigate to &lt;code&gt;Settings&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;Security&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt;
&lt;code&gt;Screen Lock&lt;/code&gt;, and set a numeric PIN for the device of &lt;em&gt;at least&lt;/em&gt; four digits.
Remember this PIN and do not write it down.&lt;/p&gt;
&lt;p&gt;Then, open the &lt;code&gt;Security&lt;/code&gt; menu under settings. On unmodified versions of
Android, this can be found under &lt;code&gt;Settings&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;Personal&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;Security&lt;/code&gt;.
On some devices, the exact menu layout may have been modified by the hardware
manufacturer. Choose &lt;code&gt;Encrypt Phone&lt;/code&gt; or &lt;code&gt;Encrypt Tablet&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;encrypt-44.jpg&#34; alt=&#34;Screenshot for Android 4.4&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;android-versions-before-30&#34;&gt;Android Versions before 3.0&lt;/h3&gt;
&lt;p&gt;Android does not support disk encryption in versions earlier than 3.0
(Honeycomb). If you have one of these devices, we recommend that you do not use it.&lt;/p&gt;
&lt;h2 id=&#34;mobile-device-management&#34;&gt;Mobile device management&lt;/h2&gt;
&lt;p&gt;Setting up mobile device management that if a phone gets lost or stolen you can ensure the data on it is deleted safely.&lt;/p&gt;
&lt;p&gt;You can enable this if the Google accounts used on the phones are part of a paid-for plan of Google&amp;rsquo;s G Suite.&lt;/p&gt;
&lt;p&gt;Up to date instructions for enabling mobile device management can be found here: &lt;a href=&#34;https://support.google.com/a/answer/7400753&#34;&gt;https://support.google.com/a/answer/7400753&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you need to remotely wipe a device, see instructions here: &lt;a href=&#34;https://support.google.com/a/answer/173390&#34;&gt;https://support.google.com/a/answer/173390&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Self Hosting</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/self-hosting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/self-hosting/</guid>
      <description>
        
        
        &lt;h2 id=&#34;self-hosting&#34;&gt;Self Hosting&lt;/h2&gt;
&lt;h3 id=&#34;how-to-access-container-retrieve-logs-isolate-security-groups&#34;&gt;How to access container, retrieve logs, isolate security groups&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;How to restart services: Link to medic-os documentation
&lt;a href=&#34;https://github.com/medic/medic-os#service-management-scripts&#34;&gt;https://github.com/medic/medic-os#service-management-scripts&lt;/a&gt;
&lt;code&gt;/boot/svc-&amp;lt;start/stop/restart&amp;gt; &amp;lt;service-name/medic-api/medic-sentinel/medic-core couchdb/medic-core nginx&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;aws-docs-for-increasing-disk-size&#34;&gt;AWS docs for increasing disk size:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Stop medic: &lt;code&gt;sudo supervisorctl stop medic&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Go to EBS in AWS and take a snapshot of the volume.&lt;/li&gt;
&lt;li&gt;Modify the volume size (Increase it by 2x preferably). Wait until the modification succeeds.&lt;/li&gt;
&lt;li&gt;Follow the following link to make the instance recognize the additional space: &lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recognize-expanded-volume-linux.html&#34;&gt;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recognize-expanded-volume-linux.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Turn medic back on: &lt;code&gt;sudo supervisorctl start medic&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;links-to-medic-documentation-for-horticulturalist-for-upgrades&#34;&gt;Links to medic documentation for horticulturalist for upgrades:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;log into container &amp;amp; run: &lt;code&gt;COUCH_NODE_NAME=couchdb@127.0.0.1 COUCH_URL=http://medic:&amp;lt;pw&amp;gt;@localhost:5984/medic /srv/software/horticulturalist/node_modules/.bin/horti --medic-os --install=&amp;lt;version&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;monitoring--backup&#34;&gt;Monitoring &amp;amp; Backup&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;AWS CloudWatch and monitoring tab. Enable detailed monitoring (This costs more money)&lt;/li&gt;
&lt;li&gt;Set up Lifecycle Management for EBS snapshots:
&lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-lifecycle.html#snapshot-lifecycle-console&#34;&gt;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-lifecycle.html#snapshot-lifecycle-console&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Steps to mounting a backup snapshot to the instance and restarting the application&lt;/li&gt;
&lt;li&gt;Please see the second-half of “Increasing disk size” reference above&lt;/li&gt;
&lt;li&gt;Setup a TLS cert &amp;amp; DNS registration&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Shortcode identifiers</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/shortcodes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/shortcodes/</guid>
      <description>
        
        
        &lt;p&gt;Shortcodes used for SMS messaging are generated on &lt;code&gt;doc.patient_id&lt;/code&gt; against any document of &lt;code&gt;type&lt;/code&gt; &lt;code&gt;person&lt;/code&gt;. By default, these shortcodes start at 5 numeric digits long, and will increase in length as deemed necessary by the generation algorithm.&lt;/p&gt;
&lt;p&gt;If the length is increased, this increase is stored in a CouchDB documented called &lt;code&gt;shortcode-id-length&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;shortcode-id-length&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;current_length&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;6&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;configuring-a-minimum-length&#34;&gt;Configuring a minimum length&lt;/h2&gt;
&lt;p&gt;If you wish to change the minimum length to of ids to generate, create or edit the &lt;code&gt;shortcode-id-length&lt;/code&gt; document in CouchDB. For example, if you wish for the minimum length to be 7:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;shortcode-id-length&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;current_length&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;7&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;NB: If this file already exists be sure to include the existing &lt;code&gt;_rev&lt;/code&gt; property.&lt;/p&gt;
&lt;p&gt;NB: If you are changing this document and want to make it relevant straight away, &lt;strong&gt;you must restart Sentinel.&lt;/strong&gt; Otherwise there may be a collection of cached already accepted ids of the previous length that Sentinel will work through first.&lt;/p&gt;
&lt;h2 id=&#34;configuring-a-maximum-length-locking-down-an-exact-length-etc&#34;&gt;Configuring a maximum length, locking down an exact length etc&lt;/h2&gt;
&lt;p&gt;It is not possible to either alter the maximum length of ids, to stop it automatically increasing or to tweak when it decides to automatically increase. IDs automatically increasing in length when required is important to the continual correct functioning of Sentinel.&lt;/p&gt;
&lt;h2 id=&#34;valid-sizes&#34;&gt;Valid sizes&lt;/h2&gt;
&lt;p&gt;Shortcodes can be between 5 and 13 digits long. Due to the last digit being a checksum digit, there are at most 10,000 5 digit ids, and at most 1,000,000,000,000 13 digit ids.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: SSH into a Docker image</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/ssh-into-docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/ssh-into-docker/</guid>
      <description>
        
        
        &lt;ol&gt;
&lt;li&gt;Work out the name of the AWS instance your Docker container is running in, eg: &amp;ldquo;development-2a-1&amp;rdquo;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Log in to AWS&lt;/li&gt;
&lt;li&gt;Select the availability zone (likely to be London)&lt;/li&gt;
&lt;li&gt;Go to EC2 instances and select the instance&lt;/li&gt;
&lt;li&gt;Check the tags for the name&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;ssh in to the Docker instance: &lt;code&gt;ssh -J admin@gateway.dev.medicmobile.org admin@&amp;lt;instance_name&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Work out the name of the Docker container you want to connect to, eg: &amp;ldquo;alpha-dev&amp;rdquo;. Get a list of available containers with: &lt;code&gt;sudo docker ps&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Connect to the container: &lt;code&gt;sudo docker exec -it &amp;lt;container-name&amp;gt; /bin/bash&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: SSL Cert Install</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/ssl-cert-install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/ssl-cert-install/</guid>
      <description>
        
        
        &lt;h2 id=&#34;requirements&#34;&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Installed CHT-Core 3.x via docker-compose&lt;/li&gt;
&lt;li&gt;Your own SSL certifications (Let&amp;rsquo;s Encrypt)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;copy-certs-into-medic-os-container&#34;&gt;Copy certs into medic-os container&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Inside your server (you may need to use sudo before each command):
$ docker ps
$ docker cp /path/to/ssl.cert medic-os:/srv/settings/medic-core/nginx/private/ssl.crt
$ docker cp /path/to/ssl.key medic-os:/srv/settings/medic-core/nginx/private/ssl.key
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;edit-nginx-configuration-file&#34;&gt;Edit nginx configuration file&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Inside the medic-os docker container:
$ docker exec -it medic-os /bin/bash
# sed -i &amp;quot;s|default.crt|ssl.crt|&amp;quot; /srv/settings/medic-core/nginx/nginx.conf
# sed -i &amp;quot;s|default.key|ssl.key|&amp;quot; /srv/settings/medic-core/nginx/nginx.conf
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;restart-services&#34;&gt;Restart services&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Inside medic-os container:
$ docker exec -it medic-os /bin/bash
# /boot/svc-restart medic-core nginx
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;view-nginx-logs&#34;&gt;View Nginx Logs&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Inside container:
# cd /srv/storage/medic-core/nginx/logs/ 
access.log error-ssl.log error.log startup.og
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Apps: User telemetry</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/telemetry/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/telemetry/</guid>
      <description>
        
        
        &lt;p&gt;&lt;em&gt;Introduced in v3.4.0&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The app collects performance data on certain user actions which is then aggregated over each calendar month and replicated to the server. This can be used to evaluate the performance of the code and configuration and to evaluate where improvements can be made.&lt;/p&gt;
&lt;p&gt;The aggregate doc for the previous month is created when the first telemetry item is recorded each month. This is stored in the &lt;code&gt;medic-user-&amp;lt;username&amp;gt;-meta&lt;/code&gt; database on the device and replicated to the server when an internet connection is available. This user specific server db is then replicated into the &lt;code&gt;medic-users-meta&lt;/code&gt; database which holds all aggregate telemetry docs for all users.&lt;/p&gt;
&lt;p&gt;The aggregate docs&amp;rsquo; IDs follow the pattern &lt;code&gt;telemetry-&amp;lt;year&amp;gt;-&amp;lt;month&amp;gt;-&amp;lt;username&amp;gt;-&amp;lt;uuid&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;performance-data&#34;&gt;Performance data&lt;/h2&gt;
&lt;p&gt;Each aggregate data point has the following fields.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;sum&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A sum of all the recorded times in milliseconds.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;min&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The smallest time recorded in milliseconds.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;max&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The largest time recorded in milliseconds.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;count&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The number of times recorded.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;sumsqr&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The sum of squares of the times recorded in milliseconds.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The telemetry data gathered changes with different versions of the framework. Currently, the data points collected are:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;boot_time&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The overall boot time including loading the code, purging, and accessing the database.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;boot_time:1:to_first_code_execution&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time between the page loading and the JavaScript starting to run.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;boot_time:2:to_bootstrap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time between JavaScript starting and the bootstrapping (purging, initial replication, etc) to complete.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;boot_time:3:to_angular_bootstrap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time between bootstrapping completing and the webapp being ready to use.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;boot_time:4:to_db_warmed&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time between the webapp being ready to use and the database being ready to use.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;enketo:reports:&amp;lt;form&amp;gt;:&amp;lt;action&amp;gt;:&amp;lt;component&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time taken to fill in Enketo forms. The &lt;code&gt;action&lt;/code&gt; can either be &amp;ldquo;add&amp;rdquo; or &amp;ldquo;edit&amp;rdquo;. The &lt;code&gt;component&lt;/code&gt; is one of: &amp;ldquo;render&amp;rdquo; covers getting the form and rendering it on screen; &amp;ldquo;user_edit_time&amp;rdquo; is the time the user took to fill in and submit the form; or &amp;ldquo;save&amp;rdquo; is about converting the form into a report and saving it.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;enketo:contacts:&amp;lt;form&amp;gt;:add:&amp;lt;component&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;As above but for Contact creation forms.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;enketo:tasks:&amp;lt;form&amp;gt;:&amp;lt;action&amp;gt;:&amp;lt;component&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;As above but for forms on the Tasks tab.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;search:contacts&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time taken to list all contacts.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;search:contacts:&amp;lt;filter[:filter]&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time taken to search all contacts using the given filters.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;search:reports&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time taken to list all reports.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;search:reports:&amp;lt;filter[:filter]&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time taken to search all reports using the given filters.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;client-date-offset&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The difference between the client datetime and the server datetime. Only recorded if the difference is large enough that it may cause issues.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;analytics:targets:load&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time taken to load the targets page. Added in 3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;tasks:load&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time taken to load the tasks page. Added in 3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;tasks:refresh&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time taken to refresh tasks on the tasks page. Added in 3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rules-engine:initialize&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time taken to initialize the rules-engine . Added in 3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rules-engine:update-emissions&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time taken to update emissions in the rules-engine, when receiving a change. Added in 3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rules-engine:tasks:all-contacts&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time taken to fetch tasks for all contacts in rules-engine. Added in 3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rules-engine:tasks:some-contacts&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time taken to fetch tasks for some specific contacts in rules-engine. Added in 3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rules-engine:targets&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Time taken for the rules-engine to fetch targets. Added in 3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rules-engine:targets:dirty-contacts&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Number of &amp;ldquo;dirty&amp;rdquo; contacts[1] when fetching targets in the rules-engine. Added in 3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rules-engine:tasks:dirty-contacts&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Number of &amp;ldquo;dirty&amp;rdquo; contacts[1] when fetching tasks in the rules-engine. Added in 3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rules-engine:ensureTaskFreshness:cancel&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time taken to cancel the automated task freshness thread in the rules-engine. This event is only recorded when the thread is cancelled before executing the refresh. Added in 3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rules-engine:ensureTargetFreshness:cancel&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time taken to cancel the automated target freshness thread in the rules-engine. This event is only recorded when the thread is cancelled before executing the refresh. Added in 3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;[1] &amp;ldquo;Dirty&amp;rdquo; indicates that the contact&amp;rsquo;s task documents are not up to date. They will be refreshed before being used.&lt;/p&gt;
&lt;h2 id=&#34;metadata&#34;&gt;Metadata&lt;/h2&gt;
&lt;p&gt;When the aggregate doc is created the Telemetry service also includes a snapshot of some metadata.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;year&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The year the data was collected.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;month&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The month the data was collected.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;user&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The username of the logged in user.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deviceId&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A unique key for this device.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;versions.app&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The version of the webapp.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;versions.forms.&amp;lt;form&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The version of each form.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;userAgent&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The userAgent string from the user&amp;rsquo;s browser.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hardwareConcurrency&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The number of cores reported from the browser.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;screen.width&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The width of the screen in pixels.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;screen.height&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The height of the screen in pixels.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deviceInfo.app.version&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The version of the Android app.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deviceInfo.software.androidVersion&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The version of Android OS.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deviceInfo.software.osApiLevel&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The API of the Android OS.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deviceInfo.software.osVersion&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The version of Android OS (detailed).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deviceInfo.hardware.device&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The Android device name.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deviceInfo.hardware.model&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The Android model name.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deviceInfo.hardware.manufacturer&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The Android device manufacturer.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deviceInfo.hardware.hardware&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The Android device hardware.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deviceInfo.hardware.cpuInfo&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The Android device CPU information.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deviceInfo.storage.free&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The available storage on the device.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deviceInfo.storage.total&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The total storage on the device.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deviceInfo.ram.free&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The available RAM on the device.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deviceInfo.ram.total&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The total RAM on the device.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deviceInfo.ram.threshold&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The level of RAM at which certain services will be killed by Android.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deviceInfo.network.downSpeed&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The reported download speed of the network.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deviceInfo.network.upSpeed&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The reported upload speed of the network.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dbInfo.doc_count&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The number of docs in the local database.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dbInfo.update_seq&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The update sequence of the local database.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dbInfo.idb_attachment_format&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The format of database attachments.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dbInfo.db_name&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The name of the local database.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dbInfo.auto_compaction&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Whether or not auto compaction is set.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dbInfo.adapter&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The database adapter being used.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
  </channel>
</rss>
