<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Community Health Toolkit â€“ Tracking and Improving Performance</title>
    <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/performance/</link>
    <description>Recent content in Tracking and Improving Performance on Community Health Toolkit</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://docs.communityhealthtoolkit.org/beta/apps/guides/performance/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Apps: Purging</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/performance/purging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/performance/purging/</guid>
      <description>
        
        
        &lt;p&gt;&lt;em&gt;Only available in 3.7.0 and above&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Purging is a tool that allows you to increase performance and available disk space for offline users (eg CHWs) by removing unneeded documents from their device.&lt;/p&gt;
&lt;p&gt;As users continually generate new reports their performance may naturally degrade as a result.
You can use purging to remove older documents that are no longer relevant from their devices.
Purging only removes documents from user&amp;rsquo;s devices: these reports are still available for
online analytics and impact metrics.&lt;/p&gt;
&lt;p&gt;Purging is disabled by default, and is enabled if a purge function is specified in
&lt;code&gt;app_settings.json&lt;/code&gt;, along with a run schedule.&lt;/p&gt;
&lt;p&gt;The following example would purge all reports that were created more than a year ago:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;//&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;other app_settings settings&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;purge&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;fn&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;function(userCtx, contact, reports, messages) { const old = Date.now() - (1000 * 60 * 60 * 24 * 365); return reports.filter(r =&amp;gt; r.reported_date &amp;lt; old).map(r =&amp;gt; r._id);}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;text_expression&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;at 12 am on Sunday&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Purging is both very powerful and also very dangerous&lt;/strong&gt;. Read the rest of this document carefully to make sure you completely understand how to purge and the ramifications of doing so, before using purging in your project.&lt;/p&gt;
&lt;h2 id=&#34;server-side&#34;&gt;Server-side&lt;/h2&gt;
&lt;p&gt;Purging runs on the server on a configurable schedule.&lt;/p&gt;
&lt;p&gt;It will iterate over all users to generate a list of unique roles groups that represent every user.
Each group will have their purged docs saved in an individual database.&lt;/p&gt;
&lt;p&gt;Then, it will iterate over all existent contacts, collecting all reports about that contact along
with all sms messages that the contact has sent or received.
This is similar to the scoping you may have encountered when configuring &lt;a href=&#34;https://docs.communityhealthtoolkit.org/beta/apps/reference/tasks/&#34;&gt;tasks&lt;/a&gt; and &lt;a href=&#34;https://docs.communityhealthtoolkit.org/beta/apps/reference/targets/&#34;&gt;targets&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The configured purge function runs over all combinations of purge scope (contact + reports + messages)
and user context (unique list of roles) to determine which docs should be purged.&lt;/p&gt;
&lt;p&gt;The resulting list of docs to be purged is compared to the existent purged docs so that only the differences
are saved (old purges are reverted and new purges are added).&lt;/p&gt;
&lt;p&gt;A document is considered purged for a user if a document with the same id, prefixed by &lt;code&gt;purge&lt;/code&gt;,
exists in the corresponding purge database.
The following user:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;org.couchdb.user:&amp;lt;your user&amp;gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;roles&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
       &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;district_admin&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
       &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;supervisor&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;would get their purges from a &lt;code&gt;medic-purged-role-&amp;lt;role_hash&amp;gt;&lt;/code&gt; where &lt;code&gt;role_hash&lt;/code&gt; is an md5 hash of the
user&amp;rsquo;s roles.&lt;/p&gt;
&lt;p&gt;When users sync (includes initial sync), they will only download documents that are not purged for their roles.&lt;/p&gt;
&lt;h2 id=&#34;client-side&#34;&gt;Client-side&lt;/h2&gt;
&lt;p&gt;Purging runs on the user&amp;rsquo;s device at startup, before the application booting, when any of these
conditions are met:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The device was just setup and so initial sync just occurred.&lt;/li&gt;
&lt;li&gt;The user&amp;rsquo;s roles list has changed&lt;/li&gt;
&lt;li&gt;It has been more than 7 days since the user has purged.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Purging will not run on startup if purge is not configured, if last purge occurred recently or if
the user doesn&amp;rsquo;t have an internet connection.&lt;/p&gt;
&lt;p&gt;When purging runs, the device calls an API endpoint that returns batches of doc ids that have
been purged since last time the same device has run purge.
The system is similar to CouchDB replication, in the sense that a &lt;code&gt;checkpointer&lt;/code&gt; document
is saved in the corresponding server-side database, that stores the &lt;code&gt;last_seq&lt;/code&gt; that the device has
downloaded and is used to get the next batch of ids.
After receiving a batch of ids, the device simply deletes the indicated docs locally,
marking them with a &lt;code&gt;purged&lt;/code&gt; flag.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;To enable purging, write your purge configuration to &lt;code&gt;purge.js&lt;/code&gt; in your project root:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;module&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;text_expression&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;at 9 am on Sunday&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;run_every_days&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;cron&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;0 1 * * SUN&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;fn&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;userCtx&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;contact&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;reports&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;messages&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;old&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;Date&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;now&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1000&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;24&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;365&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;oldMessages&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;Date&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;now&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1000&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;24&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
      
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;reportsToPurge&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;reports&lt;/span&gt;
                                 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;filter&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reported_date&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;old&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
                                 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;map&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;_id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;messagesToPurge&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;messages&lt;/span&gt;
                                 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;filter&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;m&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reported_date&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;oldMessages&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
                                 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;map&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;m&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;_id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
      
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[...&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reportsToPurge&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;messagesToPurge&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;];&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; 
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;purge-configuration&#34;&gt;Purge configuration&lt;/h3&gt;
&lt;p&gt;As shown above, you should be exporting a property &lt;code&gt;fn&lt;/code&gt; defining a self contained function:
it should have no outside dependencies - like used variables, required modules or call outside functions.&lt;/p&gt;
&lt;p&gt;This function takes four parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;userCtx&lt;/code&gt;, an object with the user&amp;rsquo;s &lt;code&gt;roles&lt;/code&gt; as fields. For more information read the &lt;a href=&#34;https://docs.couchdb.org/en/stable/json-structure.html#userctx-object&#34;&gt;documentation for the User Context Object&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;contact&lt;/code&gt;, the contact document of a patient or other contact who has reports about them.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reports&lt;/code&gt;, an array of all reports for that patient that are present on the server.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;messages&lt;/code&gt;, an array of sms messages that the contact has sent or received&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And should return an array of &lt;code&gt;_id&lt;/code&gt; values for docs you would like to be purged
(or &lt;code&gt;undefined&lt;/code&gt; / nothing if you don&amp;rsquo;t wish to purge anything).
Only ids of docs that were passed to the function are valid for purging: you are not allowed to purge other documents.&lt;/p&gt;
&lt;p&gt;In the cases of reports that do not have patients or their patients are not found, the &lt;code&gt;purge&lt;/code&gt; function
will receive an empty object as &lt;code&gt;contact&lt;/code&gt;.
In the cases of reports about deleted patients, the &lt;code&gt;purge&lt;/code&gt; function will receive a &lt;code&gt;{ _deleted: true }&lt;/code&gt;
object as the &lt;code&gt;contact&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;schedule-configuration&#34;&gt;Schedule configuration&lt;/h3&gt;
&lt;p&gt;You must set a schedule for purging to run server-side.
Depending on the size of the database and server capacity, purging could be a lengthy and
resource intensive operation, so it is recommended you run purge on a schedule that your server
can sustain (for example at nighttime in the weekends).&lt;/p&gt;
&lt;p&gt;You can also change the frequency of local purge downloads (default being every 7 days).&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;property&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;th&gt;required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fn&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Self-contained purge function&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;run_every_days&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The interval (in days) at which purges will be downloaded client-side. &lt;em&gt;Default 7&lt;/em&gt;.&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;text_expression&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Any valid text expression to describe the interval of running purge server-side. For more information, see &lt;a href=&#34;https://bunkat.github.io/later/parsers.html#text&#34;&gt;LaterJS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;no if &lt;code&gt;cron&lt;/code&gt; provided&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cron&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Any valid Cron expression to describe the interval of running purge server-side. For more information, see &lt;a href=&#34;https://bunkat.github.io/later/parsers.html#cron&#34;&gt;LaterJS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;no if &lt;code&gt;text_expression&lt;/code&gt; provided&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Example of purge configured in your app_settings:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;//&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;other app_settings settings&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;,&lt;/span&gt;
 &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;purge&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;fn&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;function(userCtx, contact, reports, messages) { return  []; }&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;cron&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;0 1 * * SUN&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;text_expression&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;at 1:00 am on Sun&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;run_every_days&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;considerations&#34;&gt;Considerations&lt;/h2&gt;
&lt;h3 id=&#34;purged-documents-server-side&#34;&gt;Purged documents server-side&lt;/h3&gt;
&lt;p&gt;Purging is run as a scheduled task in Sentinel.&lt;/p&gt;
&lt;p&gt;Purging does not touch documents in the &lt;code&gt;medic&lt;/code&gt; database, everything is done in separate purge databases
(&lt;code&gt;medic-purged-roles-&amp;lt;roles-hash&amp;gt;&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;The purge databases names contain an md5 of the JSON representation of a list of unique roles.
They also contain a &lt;code&gt;_local/info&lt;/code&gt; doc where the roles are listed in clear text.&lt;/p&gt;
&lt;p&gt;A &lt;code&gt;purgelog&lt;/code&gt; document is saved in &lt;code&gt;medic-sentinel&lt;/code&gt; after every purge. The purgelog has a meaningful
ID: &lt;code&gt;purgelog:&amp;lt;timestamp&amp;gt;&lt;/code&gt;, where timestamp represents the moment when purge was completed. The doc
also contains a property &lt;code&gt;roles&lt;/code&gt; with the collection of roles purge has run for, and a &lt;code&gt;duration&lt;/code&gt; property
representing the time it took to run purge, in ms.
You can retrieve a list of all your purge logs, descending from newest to oldest, with this request:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https(s)://&amp;lt;host&amp;gt;/medic-sentinel/_all_docs?end_key=&amp;quot;purgelog:&amp;quot;&amp;amp;start_key=&amp;quot;purgelog:\ufff0&amp;quot;&amp;amp;descending=true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Purging is reversible. If you update your purge function, when running purge the old invalid
purges will be deleted. This does not mean that devices will automatically re-download documents that
become unpurged. In order for the user to re-download a previously purged document, the document either
needs to be updated in the &lt;code&gt;medic&lt;/code&gt; database on the server or the user has to download all data again.&lt;/p&gt;
&lt;p&gt;Running purge will not remove old purge databases, even if they don&amp;rsquo;t correspond to any existent users.
Their removal is a manual process.&lt;/p&gt;
&lt;p&gt;Purge does not run when adding new roles or adding said new roles to users. It also does not run when an existent
user is updated to have a new unique list of roles (one that purge has not run over yet).
This means that roles need to be planned carefully in order to take advantage of serverside purge. If purge
has not run for the user&amp;rsquo;s list of roles at the moment of initial replication, the user will download &lt;strong&gt;all&lt;/strong&gt;
documents - only to be purged later.&lt;/p&gt;
&lt;h3 id=&#34;purged-documents-client-side&#34;&gt;Purged documents client-side&lt;/h3&gt;
&lt;p&gt;The key thing to keep in mind while purging is that &lt;strong&gt;documents that you purge are deleted on
user&amp;rsquo;s device&lt;/strong&gt;. This sounds obvious, but it&amp;rsquo;s important to understand &lt;em&gt;how&lt;/em&gt; this affects
the running of the application:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Any &lt;strong&gt;rules&lt;/strong&gt; you have written that presume that the document exists may break.
For example, if the document completes a task, purging it will reopen that task,
unless you &lt;em&gt;also&lt;/em&gt; purge the document that created the task in the first place
(while making sure that purging &lt;em&gt;that&lt;/em&gt; report doesn&amp;rsquo;t break more things!)&lt;/li&gt;
&lt;li&gt;Similarly &lt;strong&gt;targets&lt;/strong&gt; won&amp;rsquo;t be able to use the report to generate values, so counts may go
down or become inaccurate&lt;/li&gt;
&lt;li&gt;Additionally, the &lt;strong&gt;contact summary&lt;/strong&gt; will also lose out on being able to use that report&lt;/li&gt;
&lt;li&gt;Changing the user&amp;rsquo;s roles list (adding/removing roles) will cause the user to download &lt;strong&gt;all purged docs ids&lt;/strong&gt;
from the purge database corresponding to their new roles list.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More subtly, you may also confuse your users!&lt;/p&gt;
&lt;p&gt;If you purge documents too quickly, they may get confused as to whether they created the report
or not, and may create it again, causing data problems. Users are not told that purging is
occurring in a very obvious way: the expectation is that purging will naturally occur as
documents become irrelevant, and so users should never really notice.&lt;/p&gt;
&lt;p&gt;Users may search for their own documents, and use data from them in novel ways you may not anticipate.
It&amp;rsquo;s important to work with your users to ensure documents are only removed once there are no uses
for them.&lt;/p&gt;
&lt;p&gt;It is key then, that you test your purge rules thoroughly!&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: CouchDB replication</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/performance/replication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/performance/replication/</guid>
      <description>
        
        
        &lt;p&gt;Replication is what we call it when users download a copy of the data on to their device.&lt;/p&gt;
&lt;h2 id=&#34;restricting-replication&#34;&gt;Restricting replication&lt;/h2&gt;
&lt;p&gt;If the user has an online role they can access all the data, otherwise they will get restricted access to the data.&lt;/p&gt;
&lt;h3 id=&#34;restriction-by-place&#34;&gt;Restriction by place&lt;/h3&gt;
&lt;p&gt;The most common restriction is by place. This is where we check the user&amp;rsquo;s &lt;code&gt;facility_id&lt;/code&gt; property, and allow access to all contacts that are descendants of that place, and all reports and messages that are about one of those descendants.&lt;/p&gt;
&lt;p&gt;For example, if a CHP&amp;rsquo;s &lt;code&gt;facility_id&lt;/code&gt; property is set to the ID of the Maori Hill clinic, then they will be able to see all patients and all reports about patients at that clinic.&lt;/p&gt;
&lt;h3 id=&#34;depth&#34;&gt;Depth&lt;/h3&gt;
&lt;p&gt;Sometimes though you want to only access contacts near the top of the hierarchy. This may be because returning all contacts would be too much data to be practical, or for patient privacy, or because it&amp;rsquo;s just not part of your workflow. In this case you can configure a replication depth for a specific role under &lt;code&gt;replication_depth&lt;/code&gt; in the app settings.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;replication_depth&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;role&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;district_manager&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;depth&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;role&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;national_manager&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;depth&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;supervisor-signoff&#34;&gt;Supervisor signoff&lt;/h3&gt;
&lt;p&gt;Some reports need to be signed off by a supervisor even though that supervisor doesn&amp;rsquo;t have the depth to see the patient the report is about. To achieve this the report needs a field named &lt;code&gt;needs_signoff&lt;/code&gt; with a value of &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;sensitive-documents&#34;&gt;Sensitive documents&lt;/h3&gt;
&lt;p&gt;We won&amp;rsquo;t replicate documents that are about the user when the sender is someone the user can&amp;rsquo;t access. For example, if a supervisor submits a report about one of their CHPs, that CHP won&amp;rsquo;t be able to see it.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: User telemetry</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/performance/telemetry/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/performance/telemetry/</guid>
      <description>
        
        
        &lt;p&gt;&lt;em&gt;Introduced in v3.4.0&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The app collects performance data on certain user actions which is then aggregated over each calendar month and replicated to the server. This can be used to evaluate the performance of the code and configuration and to evaluate where improvements can be made.&lt;/p&gt;
&lt;p&gt;The aggregate doc for the previous month is created when the first telemetry item is recorded each month. This is stored in the &lt;code&gt;medic-user-&amp;lt;username&amp;gt;-meta&lt;/code&gt; database on the device and replicated to the server when an internet connection is available. This user specific server db is then replicated into the &lt;code&gt;medic-users-meta&lt;/code&gt; database which holds all aggregate telemetry docs for all users.&lt;/p&gt;
&lt;p&gt;The aggregate docs&amp;rsquo; IDs follow the pattern &lt;code&gt;telemetry-&amp;lt;year&amp;gt;-&amp;lt;month&amp;gt;-&amp;lt;username&amp;gt;-&amp;lt;uuid&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;performance-data&#34;&gt;Performance data&lt;/h2&gt;
&lt;p&gt;Each aggregate data point has the following fields.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;sum&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A sum of all the recorded times in milliseconds.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;min&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The smallest time recorded in milliseconds.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;max&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The largest time recorded in milliseconds.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;count&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The number of times recorded.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;sumsqr&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The sum of squares of the times recorded in milliseconds.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The telemetry data gathered changes with different versions of the framework. Currently, the data points collected are:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;boot_time&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The overall boot time including loading the code, purging, and accessing the database.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;boot_time:1:to_first_code_execution&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time between the page loading and the JavaScript starting to run.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;boot_time:2:to_bootstrap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time between JavaScript starting and the bootstrapping (purging, initial replication, etc) to complete.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;boot_time:3:to_angular_bootstrap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time between bootstrapping completing and the webapp being ready to use.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;boot_time:4:to_db_warmed&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time between the webapp being ready to use and the database being ready to use.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;enketo:reports:&amp;lt;form&amp;gt;:&amp;lt;action&amp;gt;:&amp;lt;component&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time taken to fill in Enketo forms. The &lt;code&gt;action&lt;/code&gt; can either be &amp;ldquo;add&amp;rdquo; or &amp;ldquo;edit&amp;rdquo;. The &lt;code&gt;component&lt;/code&gt; is one of: &amp;ldquo;render&amp;rdquo; covers getting the form and rendering it on screen; &amp;ldquo;user_edit_time&amp;rdquo; is the time the user took to fill in and submit the form; or &amp;ldquo;save&amp;rdquo; is about converting the form into a report and saving it.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;enketo:contacts:&amp;lt;form&amp;gt;:add:&amp;lt;component&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;As above but for Contact creation forms.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;enketo:tasks:&amp;lt;form&amp;gt;:&amp;lt;action&amp;gt;:&amp;lt;component&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;As above but for forms on the Tasks tab.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;search:contacts&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time taken to list all contacts.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;search:contacts:&amp;lt;filter[:filter]&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time taken to search all contacts using the given filters.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;search:reports&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time taken to list all reports.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;search:reports:&amp;lt;filter[:filter]&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time taken to search all reports using the given filters.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;client-date-offset&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The difference between the client datetime and the server datetime. Only recorded if the difference is large enough that it may cause issues.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;analytics:targets:load&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time taken to load the targets page. Added in 3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;tasks:load&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time taken to load the tasks page. Added in 3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;tasks:refresh&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time taken to refresh tasks on the tasks page. Added in 3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rules-engine:initialize&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time taken to initialize the rules-engine . Added in 3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rules-engine:update-emissions&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time taken to update emissions in the rules-engine, when receiving a change. Added in 3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rules-engine:tasks:all-contacts&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time taken to fetch tasks for all contacts in rules-engine. Added in 3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rules-engine:tasks:some-contacts&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time taken to fetch tasks for some specific contacts in rules-engine. Added in 3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rules-engine:targets&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Time taken for the rules-engine to fetch targets. Added in 3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rules-engine:targets:dirty-contacts&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Number of &amp;ldquo;dirty&amp;rdquo; contacts[1] when fetching targets in the rules-engine. Added in 3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rules-engine:tasks:dirty-contacts&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Number of &amp;ldquo;dirty&amp;rdquo; contacts[1] when fetching tasks in the rules-engine. Added in 3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rules-engine:ensureTaskFreshness:cancel&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time taken to cancel the automated task freshness thread in the rules-engine. This event is only recorded when the thread is cancelled before executing the refresh. Added in 3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rules-engine:ensureTargetFreshness:cancel&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The time taken to cancel the automated target freshness thread in the rules-engine. This event is only recorded when the thread is cancelled before executing the refresh. Added in 3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;[1] &amp;ldquo;Dirty&amp;rdquo; indicates that the contact&amp;rsquo;s task documents are not up to date. They will be refreshed before being used.&lt;/p&gt;
&lt;h2 id=&#34;metadata&#34;&gt;Metadata&lt;/h2&gt;
&lt;p&gt;When the aggregate doc is created the Telemetry service also includes a snapshot of some metadata.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;year&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The year the data was collected.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;month&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The month the data was collected.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;user&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The username of the logged in user.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deviceId&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A unique key for this device.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;versions.app&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The version of the webapp.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;versions.forms.&amp;lt;form&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The version of each form.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;userAgent&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The userAgent string from the user&amp;rsquo;s browser.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hardwareConcurrency&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The number of cores reported from the browser.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;screen.width&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The width of the screen in pixels.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;screen.height&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The height of the screen in pixels.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deviceInfo.app.version&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The version of the Android app.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deviceInfo.software.androidVersion&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The version of Android OS.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deviceInfo.software.osApiLevel&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The API of the Android OS.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deviceInfo.software.osVersion&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The version of Android OS (detailed).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deviceInfo.hardware.device&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The Android device name.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deviceInfo.hardware.model&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The Android model name.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deviceInfo.hardware.manufacturer&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The Android device manufacturer.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deviceInfo.hardware.hardware&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The Android device hardware.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deviceInfo.hardware.cpuInfo&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The Android device CPU information.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deviceInfo.storage.free&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The available storage on the device.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deviceInfo.storage.total&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The total storage on the device.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deviceInfo.ram.free&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The available RAM on the device.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deviceInfo.ram.total&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The total RAM on the device.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deviceInfo.ram.threshold&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The level of RAM at which certain services will be killed by Android.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deviceInfo.network.downSpeed&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The reported download speed of the network.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deviceInfo.network.upSpeed&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The reported upload speed of the network.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dbInfo.doc_count&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The number of docs in the local database.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dbInfo.update_seq&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The update sequence of the local database.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dbInfo.idb_attachment_format&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The format of database attachments.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dbInfo.db_name&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The name of the local database.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dbInfo.auto_compaction&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Whether or not auto compaction is set.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dbInfo.adapter&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The database adapter being used.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
  </channel>
</rss>
