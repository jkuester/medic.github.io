<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Community Health Toolkit – Managing Data</title>
    <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/data/</link>
    <description>Recent content in Managing Data on Community Health Toolkit</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://docs.communityhealthtoolkit.org/beta/apps/guides/data/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Apps: CSV to Docs</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/data/csv-to-docs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/data/csv-to-docs/</guid>
      <description>
        
        
        &lt;h2 id=&#34;seeding-data-with-medic-conf&#34;&gt;Seeding data with medic-conf&lt;/h2&gt;
&lt;p&gt;Users, contacts, and report data can be specified in comma-separated value (CSV) files, then converted to JavaScript Object Notation (JSON) files and uploaded into your instance using &lt;a href=&#34;https://github.com/medic/medic-conf&#34;&gt;medic-conf&lt;/a&gt;. This documentation will cover the CSV notation used, fetching CSV files from Google Sheets, converting the CSV files into JSON docs, and then uploading the data from the JSON files to your instance.&lt;/p&gt;
&lt;h3 id=&#34;converting-csvs&#34;&gt;Converting CSVs&lt;/h3&gt;
&lt;p&gt;Running &lt;code&gt;medic-conf&lt;/code&gt; with the &lt;code&gt;csv-to-docs&lt;/code&gt; action converts CSV files from the &lt;code&gt;csv&lt;/code&gt; folder into JSON docs to be uploaded to your instance. The JSON files are stored in the &lt;code&gt;json_docs&lt;/code&gt; folder. Instructions for creating the CSV files are in sections below.&lt;/p&gt;
&lt;h3 id=&#34;uploading-csvs&#34;&gt;Uploading CSVs&lt;/h3&gt;
&lt;p&gt;Running &lt;code&gt;medic-conf&lt;/code&gt; with the &lt;code&gt;upload-docs&lt;/code&gt; action will upload the JSON docs that were generated from the CSV files to your instance. For example, running &lt;code&gt;medic-conf --local upload-docs&lt;/code&gt; will upload the converted docs into your local instance. The target location &lt;code&gt;--local&lt;/code&gt; can be replaced with an instance or URL. See &lt;a href=&#34;https://github.com/medic/medic-conf&#34;&gt;medic-conf&lt;/a&gt; for detailed instructions.&lt;/p&gt;
&lt;h3 id=&#34;creating-csv-files-for-contacts-reports&#34;&gt;Creating CSV files for Contacts, Reports&lt;/h3&gt;
&lt;p&gt;A separate CSV file is needed for each type of place, person, or report in your project&amp;rsquo;s local &lt;code&gt;csv&lt;/code&gt; folder. The name of the file determines the type of doc created for rows contained in the file. The possible types are: &lt;code&gt;report&lt;/code&gt;, &lt;code&gt;person&lt;/code&gt;, and &lt;code&gt;place&lt;/code&gt;. Each of these has a further specifier provided in the filename:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;place.{place_type}.csv&lt;/code&gt;:  where &lt;code&gt;{place_type}&lt;/code&gt; is the type of place specified in the file. By default, the place types are one of &lt;code&gt;clinic&lt;/code&gt;, &lt;code&gt;health_center&lt;/code&gt;, or &lt;code&gt;district_hospital&lt;/code&gt;. As of 3.7 of the &lt;a href=&#34;https://github.com/medic/cht-core&#34;&gt;Core Framework&lt;/a&gt;, the number of place types and their names can be configured — the &lt;code&gt;{place_type}&lt;/code&gt; should match with the hierarchy names used.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;person.{parent_place_type}.csv&lt;/code&gt;:  where &lt;code&gt;{parent_place_type}&lt;/code&gt; is the type of place to which the people in the file will belong.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;report.{form_id}.csv&lt;/code&gt;:  where &lt;code&gt;{form_id}&lt;/code&gt; is the form ID for all the reports in the file. You will need one file per form ID&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here are some examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;File named &lt;code&gt;place.district_hospital.csv&lt;/code&gt; adds the property &lt;code&gt;&amp;quot;type&amp;quot;:&amp;quot;district_hospital&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;File named &lt;code&gt;person.clinic.csv&lt;/code&gt; add the property &lt;code&gt;&amp;quot;type&amp;quot;:&amp;quot;person&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;File named &lt;code&gt;report.immunization_visit.csv&lt;/code&gt; add the property &lt;code&gt;&amp;quot;type&amp;quot;:&amp;quot;report&amp;quot;, &amp;quot;form&amp;quot;:&amp;quot;immunization_visit&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In each of these files a header row is used to specify the JSON field names, and each subsequent row specifies the corresponding values for a doc. A &lt;code&gt;_id&lt;/code&gt; field is automatically generated with a universally unique identifier.&lt;/p&gt;
&lt;p&gt;Here is an example of a &lt;code&gt;csv/person.clinic.csv&lt;/code&gt; file for people belonging to clinics:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-csv&#34; data-lang=&#34;csv&#34;&gt;name,sex,date_of_birth
Adriana Akiyama,female,1985-12-31
Becky Backlund,female,1987-10-17
Carson Crane,male,2015-01-23
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Here is the table representation of the CSV:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;sex&lt;/th&gt;
&lt;th&gt;date_of_birth&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Adriana Akiyama&lt;/td&gt;
&lt;td&gt;female&lt;/td&gt;
&lt;td&gt;1985-12-31&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Becky Backlund&lt;/td&gt;
&lt;td&gt;female&lt;/td&gt;
&lt;td&gt;1987-10-17&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Carson Crane&lt;/td&gt;
&lt;td&gt;male&lt;/td&gt;
&lt;td&gt;2015-01-23&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Converting that CSV file to JSON docs with the &lt;code&gt;csv-to-docs&lt;/code&gt; action would generate three files, one for each person. Here is one of the corresponding JSON files, &lt;code&gt;json_docs/dbfbc0f0-117a-59ec-9542-3313fb10ef25.doc.json&lt;/code&gt;, which was created from the CSV data above:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;person&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Adriana Akiyama&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;sex&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;female&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;date_of_birth&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;1985-12-31&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;dbfbc0f0-117a-59ec-9542-3313fb10ef25&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;special-notations&#34;&gt;Special notations&lt;/h4&gt;
&lt;h5 id=&#34;specifying-property-type&#34;&gt;Specifying property type&lt;/h5&gt;
&lt;p&gt;By default, values are parsed as strings. To parse a CSV column as a different JSON type, append the JSON type name to the column definition, e.g.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;column_one,column_two:bool,column_three:int,column_four:float,column_five:date,column_six:timestamp
some string,true,1,2.3,2017-12-31,1513255007072
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This would create a structure such as:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;09efb53f-9cd8-524c-9dfd-f62c242f1817&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;column_one&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;some string&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;column_two&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;column_three&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;column_four&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2.3&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;column_five&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;2017-12-31T00:00:00.000Z&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;column_six&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1513255007072&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;excluding-column&#34;&gt;Excluding column&lt;/h5&gt;
&lt;p&gt;A special column type, &lt;code&gt;excluded&lt;/code&gt;, is used for excluding a column from the final JSON data:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;my_column_that_will_not_be_a_property:excluded
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This can be useful if using a column for doc references.&lt;/p&gt;
&lt;h4 id=&#34;including-another-doc&#34;&gt;Including another doc&lt;/h4&gt;
&lt;p&gt;Often times database documents need to include or refer to other documents in the database. This can be achieved with queries across CSV files, which is done by specifying a query in the column header. The query specifies the doc type (&lt;code&gt;person&lt;/code&gt; or &lt;code&gt;place&lt;/code&gt;) and matching condition.&lt;/p&gt;
&lt;p&gt;For instance, to include the parent district&amp;rsquo;s doc in a health center&amp;rsquo;s doc, the &lt;code&gt;parent:place WHERE reference_id=COL_VAL&lt;/code&gt; column header is used. The &lt;code&gt;COL_VAL&lt;/code&gt; is a special notation for that column&amp;rsquo;s value for the row, and it will be used to match against the &lt;code&gt;reference_id&lt;/code&gt; field in all other places. Given these example CSVs, you can see the corresponding JSON structure:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;place.district.csv&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;reference_id:excluded&lt;/th&gt;
&lt;th&gt;is_name_generated&lt;/th&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;reported_date:timestamp&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;district_1&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;D1&lt;/td&gt;
&lt;td&gt;1544031155715&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;district_2&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;D2&lt;/td&gt;
&lt;td&gt;1544031155715&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;district_3&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;D3&lt;/td&gt;
&lt;td&gt;1544031155715&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;place.health_center.csv&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;reference_id:excluded&lt;/th&gt;
&lt;th&gt;parent:place WHERE reference_id=COL_VAL&lt;/th&gt;
&lt;th&gt;is_name_generated&lt;/th&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;reported_date:timestamp&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;health_center_1&lt;/td&gt;
&lt;td&gt;district_1&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;HC1&lt;/td&gt;
&lt;td&gt;1544031155715&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;health_center_2&lt;/td&gt;
&lt;td&gt;district_2&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;HC2&lt;/td&gt;
&lt;td&gt;1544031155715&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;health_center_3&lt;/td&gt;
&lt;td&gt;district_3&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;HC3&lt;/td&gt;
&lt;td&gt;1544031155715&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;480d0cd0-c021-5d55-8c63-d86576d592fc.doc.json&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;health_center&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;parent&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;district_hospital&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;parent&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;is_name_generated&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;false&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;D2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;external_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;notes&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;geolocation&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;reported_date&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1544031155715&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;f223f240-5d6a-5a7a-91d4-46d3c59de73e&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;is_name_generated&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;false&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;HC7&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;external_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;notes&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;geolocation&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;reported_date&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1544031155715&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;480d0cd0-c021-5d55-8c63-d86576d592fc&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;including-value-from-another-doc&#34;&gt;Including value from another doc&lt;/h5&gt;
&lt;p&gt;Similar to including another doc, it is also possible to get the value of a specific field in another doc. For instance, if &lt;code&gt;parent:GET _id OF place WHERE reference_id=COL_VAL&lt;/code&gt; were used in the example above, the &lt;code&gt;parent&lt;/code&gt; field&amp;rsquo;s value would have been set to the &lt;code&gt;_id&lt;/code&gt; of the refered to doc instead of including the whole doc. Note that &lt;code&gt;_id&lt;/code&gt; is a generated value included in all generated docs.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;reference_id:excluded&lt;/th&gt;
&lt;th&gt;parent:GET _id OF place WHERE reference_id=COL_VAL&lt;/th&gt;
&lt;th&gt;is_name_generated&lt;/th&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;reported_date:timestamp&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;health_center_1&lt;/td&gt;
&lt;td&gt;district_1&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;HC1&lt;/td&gt;
&lt;td&gt;1544031155715&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;health_center_2&lt;/td&gt;
&lt;td&gt;district_2&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;HC2&lt;/td&gt;
&lt;td&gt;1544031155715&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;health_center_3&lt;/td&gt;
&lt;td&gt;district_3&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;HC3&lt;/td&gt;
&lt;td&gt;1544031155715&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The resulting doc would be as follows, with the &lt;code&gt;_id&lt;/code&gt; from &lt;code&gt;district_1&lt;/code&gt; as the &lt;code&gt;parent&lt;/code&gt; value:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;health_center&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;parent&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;0c31056a-3a80-54dd-b136-46145d451a66&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;is_name_generated&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;false&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;HC3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;external_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;notes&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;geolocation&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;reported_date&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1544031155715&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;45293356-353c-5eb1-9a41-baa3427b4f69&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;creating-csv-files-for-users&#34;&gt;Creating CSV files for users&lt;/h3&gt;
&lt;p&gt;To create user accounts from CSV files, a &lt;code&gt;users.csv&lt;/code&gt; file will be needed in the &lt;code&gt;csv&lt;/code&gt; folder. The &lt;code&gt;users.csv&lt;/code&gt; file requires columns for &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt;. Additional columns can be used for any additional fields needed on the user&amp;rsquo;s doc, for example &lt;code&gt;roles&lt;/code&gt;, &lt;code&gt;phone&lt;/code&gt;. Running the &lt;code&gt;csv-to-docs&lt;/code&gt; &lt;code&gt;upload-docs&lt;/code&gt; &lt;code&gt;create-users&lt;/code&gt; actions in that order will generate the necessary JSON docs with a &lt;code&gt;users.csv&lt;/code&gt; file in your working directory, and then create the people, places, and users.&lt;/p&gt;
&lt;p&gt;The following sections describe the different ways to associate the new users to contacts.&lt;/p&gt;
&lt;h4 id=&#34;creating-new-users-with-existing-contacts&#34;&gt;Creating new users with existing contacts&lt;/h4&gt;
&lt;p&gt;When creating users that are associated to existing contacts, &lt;code&gt;contact&lt;/code&gt; and &lt;code&gt;place&lt;/code&gt; columns should be created. Each row should have the UUID of an existing person for &lt;code&gt;contact&lt;/code&gt;, and an existing place for &lt;code&gt;place&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;creating-new-users-with-new-contacts&#34;&gt;Creating new users with new contacts&lt;/h3&gt;
&lt;p&gt;To create new contacts for each new user provide values for &lt;code&gt;contact.name&lt;/code&gt;, &lt;code&gt;place.name&lt;/code&gt;, and &lt;code&gt;place.parent&lt;/code&gt; (can be existing place), as seen in this example CSV:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-csv&#34; data-lang=&#34;csv&#34;&gt;username,password,roles,name,phone,contact.name,place.c_prop,place.type,place.name,place.parent
alice,Secret_1,district-admin,Alice Example,+123456789,Alice,p_val_a,health_center,alice area, district_uuid
bob,Secret_1,district-admin,bob Example,+123456789,bob,p_val_a,health_center,bob area,disctrict_uuid
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The &lt;code&gt;username&lt;/code&gt;, &lt;code&gt;password&lt;/code&gt;, &lt;code&gt;contact.name&lt;/code&gt;, &lt;code&gt;place.type&lt;/code&gt;, &lt;code&gt;place.name&lt;/code&gt; columns are required to have functional users with new places.&lt;/p&gt;
&lt;h3 id=&#34;creating-new-users-linked-to-contacts-in-csv-files&#34;&gt;Creating new users linked to contacts in CSV files&lt;/h3&gt;
&lt;p&gt;To associate the new users to contacts that will also be created with the &lt;code&gt;csv-to-docs&lt;/code&gt; action, use reference queries to the contacts.
For instance, the column header for the person would be &lt;code&gt;contact:person WHERE reference_id=COL_VAL&lt;/code&gt;, and for the place would be &lt;code&gt;place:GET _id OF place WHERE reference_id=COL_VAL&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Here is a example of how the three CSV files need to be configured to setup a user linked to existing place and contact.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;csv/place.health_center.csv&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-csv&#34; data-lang=&#34;csv&#34;&gt;reference_id:excluded,parent:place WHERE reference_id=COL_VAL,is_name_generated,name,reported_date:timestamp
health_center_1,district_1,FALSE,HC1,1544031155715
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Generated JSON doc for the health center:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;health_center&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;parent&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;district_hospital&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;parent&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;is_name_generated&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;false&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;District1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;external_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;notes&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;geolocation&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;reported_date&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1544031155715&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;e8f9739a-5d37-5b1e-be3c-a571b2c2409b&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;is_name_generated&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;FALSE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;HC1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;reported_date&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1544031155715&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;8606a91a-f454-56e3-a089-0b686af3c6b7&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;csv/person.csv&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-csv&#34; data-lang=&#34;csv&#34;&gt;reference_id:excluded,parent:place WHERE reference_id=COL_VAL,name,phone,sex,role,reported_date,patient_id
p_hc1,health_center_1,Bob Johnson 1,+16143291527,male,manager,1552494835669,60951
p_hc2,health_center_1,Bob Johnson 2,+16143291528,male,manager,1552494835669,60951

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Generated JSON doc for the person:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;person&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;parent&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;health_center&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;parent&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;district_hospital&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;parent&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;is_name_generated&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;false&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;District1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;external_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;notes&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;geolocation&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;reported_date&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1544031155715&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;e8f9739a-5d37-5b1e-be3c-a571b2c2409b&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;is_name_generated&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;FALSE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;HC1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;reported_date&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1544031155715&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;8606a91a-f454-56e3-a089-0b686af3c6b7&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Bob Johnson 1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;phone&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;+16143291527&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;sex&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;male&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;role&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;manager&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;reported_date&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;1552494835669&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;patient_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;60951&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;65c52076-84c5-53a2-baca-88e6ec6e0875&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;csv/users.csv&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-csv&#34; data-lang=&#34;csv&#34;&gt;username,password,roles,phone,contact:person WHERE reference_id=COL_VAL,place:GET _id OF place WHERE reference_id=COL_VAL
ac1,Secret_1,district_admin:red1,+123456789,p_hc1,health_center_1
ac2,Secret_1,district_admin:supervisor,+123456789,p_hc2,health_center_1
ac3,Secret_1,district_admin,+123456789,p_hc3,health_center_1
ac4,Secret_1,district_admin,+123456789,p_hc4,health_center_1

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This will generate the &lt;code&gt;users.csv&lt;/code&gt; file in the working directory which is used by the &lt;code&gt;create-users&lt;/code&gt; action. The contact and place fields should be resolved to the actual UUIDs.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-csv&#34; data-lang=&#34;csv&#34;&gt;p_hc1&amp;quot;username&amp;quot;,&amp;quot;password&amp;quot;,&amp;quot;roles&amp;quot;,&amp;quot;contact&amp;quot;,&amp;quot;phone&amp;quot;,&amp;quot;place&amp;quot;
&amp;quot;ac1&amp;quot;,&amp;quot;Secret_1&amp;quot;,&amp;quot;district_admin:red1&amp;quot;,&amp;quot;65c52076-84c5-53a2-baca-88e6ec6e0875&amp;quot;,&amp;quot;+123456789&amp;quot;,&amp;quot;8606a91a-f454-56e3-a089-0b686af3c6b7&amp;quot;
&amp;quot;ac2&amp;quot;,&amp;quot;Secret_1&amp;quot;,&amp;quot;district_admin:supervisor&amp;quot;,&amp;quot;b7d0dbd5-beeb-52a8-8e4c-513d0baece8e&amp;quot;,&amp;quot;+123456789&amp;quot;,&amp;quot;8606a91a-f454-56e3-a089-0b686af3c6b7&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;using-csv-files-on-google-drive&#34;&gt;Using CSV files on Google Drive&lt;/h3&gt;
&lt;p&gt;Individual Google Sheets can be used for each CSV file, which can be exported manually to CSV file format, or linked to your project to be downloaded by medic-conf.&lt;/p&gt;
&lt;p&gt;To fetch the files from Google Drive run the &lt;code&gt;fetch-csvs-from-google-drive&lt;/code&gt; action in medic-conf. This will download the CSV files specified in the &lt;code&gt;csvs-on-google-drive.json&lt;/code&gt; file, and place them into the &lt;code&gt;csv&lt;/code&gt; folder.&lt;/p&gt;
&lt;h4 id=&#34;linking-to-google-drive&#34;&gt;Linking to Google Drive&lt;/h4&gt;
&lt;p&gt;The file &lt;code&gt;csvs-on-google-drive.json&lt;/code&gt; in your project&amp;rsquo;s home directory will consist of a key value pair for each CSV file. The keys must be the filename where the CSV will be stored locally — see the CSV &lt;a href=&#34;https://github.com/medic/medic-conf#csv-file-name&#34;&gt;file documentation&lt;/a&gt; for the notation. The value of each key must be the ID of the corresponding file in Google Drive — the ID can be obtained from the URL eg &lt;code&gt;https://docs.google.com/spreadsheets/d/{FILE_ID}/edit&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;person.clinic.csv&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;google_drive_ID&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;google-drive-authentication&#34;&gt;Google Drive authentication&lt;/h3&gt;
&lt;p&gt;Medic-conf leverages Google authentication to access Google Drive. You will need to create a client_secrets file named &lt;code&gt;.gdrive.secrets.json&lt;/code&gt; and place it in your working directory, and &lt;a href=&#34;https://developers.google.com/identity/protocols/OAuth2InstalledApp&#34;&gt;create a token&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Create the &lt;code&gt;.gdrive.secrets.json&lt;/code&gt; file by downloading the &lt;code&gt;client_secrets.json&lt;/code&gt; from Google. You will need a &lt;code&gt;CLIENT_ID&lt;/code&gt;, &lt;code&gt;CLIENT_SECRET&lt;/code&gt; and &lt;code&gt;REDIRECT_URL&lt;/code&gt;. You can find these pieces of information by going to the Developer Console, clicking your project &amp;ndash;&amp;gt; APIs &amp;amp; auth &amp;ndash;&amp;gt; credentials &amp;ndash;&amp;gt; Download JSON. This will download the credentials but will need modified to be in this structure.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;client_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;lt;client_id&amp;gt;.apps.googleusercontent.com&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;project_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;proj_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;auth_uri&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;https://accounts.google.com/o/oauth2/auth&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;token_uri&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;https://accounts.google.com/o/oauth2/token&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;auth_provider_x509_cert_url&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;https://www.googleapis.com/oauth2/v1/certs&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;client_secret&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;client_secret&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;redirect_uris&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;urn:ietf:wg:oauth:2.0:oob&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://localhost&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;See Google&amp;rsquo;s docs &lt;a href=&#34;https://github.com/googleapis/google-api-nodejs-client#oauth2-client&#34;&gt;here&lt;/a&gt; on Oauth2&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Impact Metrics</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/data/impact-metrics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/data/impact-metrics/</guid>
      <description>
        
        
        &lt;p&gt;Impact monitoring is an essential part of both the Community Health Toolkit and Medic Mobile&amp;rsquo;s processes and ethos. We are committed to harnessing data to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Support our partners in data-driven operational and strategic decision making&lt;/li&gt;
&lt;li&gt;Inform our product roadmap and organizational strategy, and&lt;/li&gt;
&lt;li&gt;Participate in overarching policy discussions around community health.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;As a member of the CHT community and potential CHT implementer, we encourage you to learn more about the recommended impact metrics for monitoring and evaluation across priority use cases by reviewing the metrics listed below.&lt;/p&gt;
&lt;h2 id=&#34;impact-metrics&#34;&gt;Impact Metrics&lt;/h2&gt;
&lt;p&gt;The following list of Impact Metrics is comprehensive; it includes all of the Impact Metric that Medic Mobile and one or more additional CHT implementers have decided to share with the general public across workflows:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Activity&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Total number of health workers using the CHT (total, per month)&lt;/li&gt;
&lt;li&gt;Total number of health workers trained to use the CHT for a specific use case (ie. antenatal care) (total, per month)&lt;/li&gt;
&lt;li&gt;Total number of health worker actions logged in the Software (total, per month)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Households&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Total number of households registered in the CHT (total, per month)&lt;/li&gt;
&lt;li&gt;Total number of new households registered in the CHT per month&lt;/li&gt;
&lt;li&gt;Total number of registered households with one or more visits by a health worker logged in the CHT per month&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Antenatal Care&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Total number of pregnancy registrations logged in the CHT (total, per month)&lt;/li&gt;
&lt;li&gt;Total number of pregnancy registrations logged in the first trimester in the CHT (total, per month)&lt;/li&gt;
&lt;li&gt;Total number of confirmed deliveries logged in the CHT (total, per month)&lt;/li&gt;
&lt;li&gt;Total number of confirmed deliveries occurring in a health facility logged in the CHT (total, per month)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Postnatal Care&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Total number of postnatal visits logged in the CHT (total, per month)&lt;/li&gt;
&lt;li&gt;Total number of women receiving the first postnatal care visit within 48h of delivery logged in the CHT (total, per month)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;iCCM&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Total number of assessments conducted on children under five (U5) in the CHT (total, per month)&lt;/li&gt;
&lt;li&gt;Total number of resulting diagnoses from U5 child assessments in the CHT (total, per month)&lt;/li&gt;
&lt;li&gt;Total number of resulting referrals from U5 child assessments in the CHT (total, per month)&lt;/li&gt;
&lt;li&gt;Total number of assessments conducted where the U5 child was presenting symptoms in the CHT (total, per month)&lt;/li&gt;
&lt;li&gt;Total number of U5 child assessments conducted within 72h of symptom onset logged in the CHT (total, per month)&lt;/li&gt;
&lt;li&gt;Total number of U5 child assessments conducted within 24h of symptom onset logged in the CHT (total, per month)&lt;/li&gt;
&lt;li&gt;Total number of patients receiving correct treatment at home from a healthcare worker, when treatment is recommended, logged in the CHT (total, per month)&lt;/li&gt;
&lt;li&gt;Total number of patient referral follow-up visits with a health facility visit confirmed logged in the CHT (total, per month)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Family Planning&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Total number of women counseled by healthcare workers on family planning logged in the CHT (total, per month)&lt;/li&gt;
&lt;li&gt;Total number of women newly using family planning following a counseling session with a healthcare worker logged in the CHT (total, per month)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Malnutrition&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Total number of malnutrition screenings completed for U5 children logged in the CHT (total, per month)&lt;/li&gt;
&lt;li&gt;Total number of U5 child malnutrition cases identified via malnutrition screening logged in the CHT (total, per month)&lt;/li&gt;
&lt;li&gt;Total number of U5 children with malnutrition receiving treatment and assessed to have recovered via a follow-up malnutrition screening logged in the CHT (total, per month)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Immunization&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Total number of immunization screenings for U5 children logged in the CHT (total, per month)&lt;/li&gt;
&lt;li&gt;Total number of U5 children receiving vaccinations logged in the CHT (total, per month)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;COVID-19&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Total number of community event-based surveillance signals for COVID-19 reported by health workers via the Software (daily, weekly, monthly, total)&lt;/li&gt;
&lt;li&gt;Total number of COVID-19 cases registered for contact tracing in the Software (daily, weekly, monthly, total)&lt;/li&gt;
&lt;li&gt;Total number of contacts of COVID-19 cases registered for contact tracing in the Software (daily, weekly, monthly, total)&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Apps: Revalidate invalid reports</title>
      <link>https://docs.communityhealthtoolkit.org/beta/apps/guides/data/invalid-reports/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/data/invalid-reports/</guid>
      <description>
        
        
        &lt;p&gt;You may encounter a dreaded case when reports coming in to a Medic Webapp instance have a red indicator instead of the green indicator.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;invalid_report.png&#34; alt=&#34;Invalid Reports&#34;&gt;&lt;/p&gt;
&lt;p&gt;This may be caused by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Missing forms in the &lt;code&gt;app_settings&lt;/code&gt; config.
-Missing or incorrect fields in the input form. e.g Missing patient ID, or Patient ID with letters&lt;/li&gt;
&lt;li&gt;Extra fields in the input form. This happens when you don&amp;rsquo;t configure for some fields in the app_settings.json of the webapp&lt;/li&gt;
&lt;li&gt;Configuring some forms in the wrong section of the app_settings i.e &lt;code&gt;registrations&lt;/code&gt; and &lt;code&gt;patient_reports&lt;/code&gt;. Forms that don&amp;rsquo;t have a patient_id field because it is generated afterwards, e.g ANCR, IMMR, go to the &lt;code&gt;registrations&lt;/code&gt; section, while form that have a patient_id field e.g ANCP, ANCV, IMMV; go to the &lt;code&gt;patient_reports&lt;/code&gt; section&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;how-to-solve&#34;&gt;How to solve&lt;/h2&gt;
&lt;p&gt;To revalidate an invalid report, we need to clear the errors field on the doc (set it to []). Updating this field from Futon will not work and will result in an endless update process. The recommended way to do it is to download the doc, update it and then upload it. This will also ensure propagation and replication in couchdb.&lt;/p&gt;
&lt;p&gt;To download a doc, use:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl &#39;https://&amp;lt;username&amp;gt;:&amp;lt;password&amp;gt;@&amp;lt;instance&amp;gt;.app.medicmobile.org/medic/&amp;lt;doc id&amp;gt;&#39; &amp;gt; filename.json
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;filename.json&lt;/code&gt; is the local file in your computer you have stored the doc json&lt;/p&gt;
&lt;p&gt;Update &lt;code&gt;filename.json&lt;/code&gt;: Set &amp;ldquo;errors&amp;rdquo; to [] and remove &amp;ldquo;accept_patient_reports&amp;rdquo; transition so that sentinel can revalidate the report.&lt;/p&gt;
&lt;p&gt;Upload &lt;code&gt;filename.json&lt;/code&gt; with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl -X PUT hhttps://&amp;lt;username&amp;gt;:&amp;lt;password&amp;gt;@&amp;lt;instance&amp;gt;.app.medicmobile.org/medic/&amp;lt;doc id&amp;gt; -d @filename.json --header &amp;quot;Content-Type: application/json&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
  </channel>
</rss>
