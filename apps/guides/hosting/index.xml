<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Community Health Toolkit – Hosting</title><link>https://docs.communityhealthtoolkit.org/beta/apps/guides/hosting/</link><description>Recent content in Hosting on Community Health Toolkit</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://docs.communityhealthtoolkit.org/beta/apps/guides/hosting/index.xml" rel="self" type="application/rss+xml"/><item><title>Apps: EC2 Setup</title><link>https://docs.communityhealthtoolkit.org/beta/apps/guides/hosting/ec2-setup-guide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/hosting/ec2-setup-guide/</guid><description>
&lt;h2 id="configure-self-hosting">Configure self-hosting&lt;/h2>
&lt;h4 id="1-create-ec2-use-security-best-practices">1. Create EC2 (use security best practices)&lt;/h4>
&lt;pre>&lt;code>Be sure to change the file permissions to 0600 or lower
for the .pem file:
sudo chmod 0600 ~/Downloads/name_of_file.pem
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>&lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Create Elastic IP and Associate EIP to EC2&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>Goal&lt;/code>: SSH into instance&lt;/p>
&lt;h4 id="2-create-or-restore-ebs-volume">2. Create or Restore EBS Volume&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>Create EBS Volume&lt;/p>
&lt;ul>
&lt;li>Be sure to tag appropriately&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ebs-restoring-volume.html">Restore EBS Volume&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Attach volume to EC2 instance&lt;/p>
&lt;/li>
&lt;li>
&lt;p>(Optional): &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recognize-expanded-volume-linux.html">Increase disk size&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If you are using a newly created EBS Volume, you will have to format the disk approriately:&lt;/p>
&lt;ol>
&lt;li>SSH into instance&lt;/li>
&lt;li>Follow the instructions here: &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-using-volumes.html">Using EBS Volumes&lt;/a>&lt;/li>
&lt;li>Use &lt;code>sudo mkfs -t ext4 &amp;lt;location&amp;gt;&lt;/code> in step 4&lt;/li>
&lt;li>Mount disk to /srv&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;p>&lt;code>Goal&lt;/code>: Mount EBS volume to /srv&lt;/p>
&lt;h4 id="3-provision-docker-server">3. Provision Docker server&lt;/h4>
&lt;ul>
&lt;li>Follow README &amp;amp; Run scripts: &lt;a href="https://github.com/medic/medic-infrastructure/tree/master/self-hosting/prepare-system">Prepare Self-Hosting System&lt;/a>&lt;/li>
&lt;li>A zip will be shared via Slack until the scripts are moved to a public repo&lt;/li>
&lt;/ul>
&lt;p>&lt;code>Goal&lt;/code>: CHT Application bootstraps and comes online&lt;/p>
&lt;h4 id="4-dns-configuration">4. DNS configuration&lt;/h4>
&lt;ul>
&lt;li>Point A records to Elastic IP given to Docker server&lt;/li>
&lt;/ul>
&lt;h4 id="5-review-ssl-certs">5. Review SSL certs&lt;/h4>
&lt;ul>
&lt;li>Location of certs is &lt;code>/srv/settings/medic-core/nginx/private/&lt;/code>&lt;/li>
&lt;li>Name the key file as &lt;code>default.key&lt;/code> and the certificate file as &lt;code>default.crt&lt;/code>&lt;/li>
&lt;li>Restarting nginx with new certs: &lt;code>svc-restart medic-core nginx&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="6-configure-couch2pg">6. Configure couch2pg&lt;/h4>
&lt;ul>
&lt;li>Basic configuration: &lt;a href="https://github.com/medic/medic-couch2pg/blob/master/README.md">https://github.com/medic/medic-couch2pg/blob/master/README.md&lt;/a>&lt;/li>
&lt;li>Supervision/monitoring/notification&lt;/li>
&lt;/ul>
&lt;h4 id="7-setup-postgres-to-work-with-couch2pg">7. Setup postgres to work with couch2pg&lt;/h4>
&lt;ul>
&lt;li>Creating the database, setting up permissions, exploring the tables and what they store&lt;/li>
&lt;/ul>
&lt;h4 id="8debugging-couch2pgpostgres">8.Debugging couch2pg/postgres&lt;/h4>
&lt;ul>
&lt;li>Understanding the log and what the entries mean&lt;/li>
&lt;/ul>
&lt;h2 id="troubleshooting">Troubleshooting&lt;/h2>
&lt;h4 id="1-restarting-processes">1. Restarting processes&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://docs.communityhealthtoolkit.org/beta/apps/guides/hosting/self-hosting/#how-to-access-container-retrieve-logs-isolate-security-groups">How to access container, retrieve logs, isolate security groups&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/medic-os#service-management-scripts">MedicOS service management scripts&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="2-investigating-logs">2. Investigating logs&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://docs.docker.com/engine/reference/commandline/exec/">Log into container&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.communityhealthtoolkit.org/beta/core/guides/docker-setup/#helpful-docker-commands">Helpful docker commands&lt;/a>&lt;/li>
&lt;li>Inside container, all appropriate logs can be found in: &lt;code>/srv/storage/&amp;lt;service_name&amp;gt;/logs/*.log&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="3upgrading-the-container">3.Upgrading the container&lt;/h4>
&lt;ul>
&lt;li>Backup all data (EBS)&lt;/li>
&lt;li>Log into container and stop all services&lt;/li>
&lt;li>DO NOT REMOVE &lt;code>/srv/storage/medic-core/&lt;/code>, &lt;code>/srv/settings/medic-core/couchdb/local.ini&lt;/code>, wipe all other files in /srv [Note: Make script publicly accessibile]&lt;/li>
&lt;li>&lt;a href="https://docs.communityhealthtoolkit.org/beta/core/guides/docker-setup/#use-docker-compose">Change the image tag to the newest image release version&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.communityhealthtoolkit.org/beta/core/guides/docker-setup/#use-docker-compose">Change image tag in docker-compose file&lt;/a>&lt;/li>
&lt;li>Launch new containers with appropriate COUCHDB_ADMIN_PASSWORD &amp;amp; HA_PASSWORD environment variables&lt;/li>
&lt;/ul>
&lt;h4 id="4upgrading-the-webapp">4.Upgrading the webapp&lt;/h4>
&lt;ul>
&lt;li>Use Admin GUI page&lt;/li>
&lt;li>&lt;a href="https://docs.communityhealthtoolkit.org/beta/apps/guides/hosting/self-hosting/#links-to-medic-documentation-for-horticulturalist-for-upgrades">CLI via horticulturalist&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="4a-rds-help">4a. RDS help&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Welcome.html">https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Welcome.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="restore-from-backup-and-monitoring">Restore from backup and monitoring&lt;/h2>
&lt;h4 id="1-configure-backups">1. Configure backups&lt;/h4>
&lt;ul>
&lt;li>EBS Snapshot Lifecycle Manager: &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-lifecycle.html">https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-lifecycle.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="2-restoring-from-backup">2. Restoring from backup&lt;/h4>
&lt;ul>
&lt;li>Create volume from snapshot&lt;/li>
&lt;li>Tag appropriately for backups&lt;/li>
&lt;li>Mount volume to docker server&lt;/li>
&lt;/ul>
&lt;h4 id="3-process-supervison">3. Process supervison&lt;/h4>
&lt;ul>
&lt;li>supvisorctl&lt;/li>
&lt;li>/boot/supervisor-inspect&lt;/li>
&lt;/ul>
&lt;h4 id="4-monitoring">4. Monitoring&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html">https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="own-infrastructure-setup">Own Infrastructure Setup&lt;/h2>
&lt;h4 id="1-team-to-set-up-own-infrastructure-based-on-best-practices-and-recommendations-above">1. Team to set up own infrastructure based on best-practices and recommendations above&lt;/h4></description></item><item><title>Apps: Self Hosting</title><link>https://docs.communityhealthtoolkit.org/beta/apps/guides/hosting/self-hosting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/hosting/self-hosting/</guid><description>
&lt;h2 id="self-hosting">Self Hosting&lt;/h2>
&lt;h3 id="how-to-access-container-retrieve-logs-isolate-security-groups">How to access container, retrieve logs, isolate security groups&lt;/h3>
&lt;ul>
&lt;li>How to restart services: Link to medic-os documentation
&lt;a href="https://github.com/medic/medic-os#service-management-scripts">https://github.com/medic/medic-os#service-management-scripts&lt;/a>
&lt;code>/boot/svc-&amp;lt;start/stop/restart&amp;gt; &amp;lt;service-name/medic-api/medic-sentinel/medic-core couchdb/medic-core nginx&amp;gt;&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="aws-docs-for-increasing-disk-size">AWS docs for increasing disk size:&lt;/h3>
&lt;ul>
&lt;li>Stop medic: &lt;code>sudo supervisorctl stop medic&lt;/code>&lt;/li>
&lt;li>Go to EBS in AWS and take a snapshot of the volume.&lt;/li>
&lt;li>Modify the volume size (Increase it by 2x preferably). Wait until the modification succeeds.&lt;/li>
&lt;li>Follow the following link to make the instance recognize the additional space: &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recognize-expanded-volume-linux.html">https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recognize-expanded-volume-linux.html&lt;/a>&lt;/li>
&lt;li>Turn medic back on: &lt;code>sudo supervisorctl start medic&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="links-to-medic-documentation-for-horticulturalist-for-upgrades">Links to medic documentation for horticulturalist for upgrades:&lt;/h3>
&lt;ul>
&lt;li>log into container &amp;amp; run: &lt;code>COUCH_NODE_NAME=couchdb@127.0.0.1 COUCH_URL=http://medic:&amp;lt;pw&amp;gt;@localhost:5984/medic /srv/software/horticulturalist/node_modules/.bin/horti --medic-os --install=&amp;lt;version&amp;gt;&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="monitoring--backup">Monitoring &amp;amp; Backup&lt;/h3>
&lt;ul>
&lt;li>AWS CloudWatch and monitoring tab. Enable detailed monitoring (This costs more money)&lt;/li>
&lt;li>Set up Lifecycle Management for EBS snapshots:
&lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-lifecycle.html#snapshot-lifecycle-console">https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-lifecycle.html#snapshot-lifecycle-console&lt;/a>&lt;/li>
&lt;li>Steps to mounting a backup snapshot to the instance and restarting the application&lt;/li>
&lt;li>Please see the second-half of “Increasing disk size” reference above&lt;/li>
&lt;li>Setup a TLS cert &amp;amp; DNS registration&lt;/li>
&lt;/ul></description></item><item><title>Apps: SSH into a Docker image</title><link>https://docs.communityhealthtoolkit.org/beta/apps/guides/hosting/ssh-into-docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/hosting/ssh-into-docker/</guid><description>
&lt;ol>
&lt;li>Work out the name of the AWS instance your Docker container is running in, eg: &amp;ldquo;development-2a-1&amp;rdquo;&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>Log in to AWS&lt;/li>
&lt;li>Select the availability zone (likely to be London)&lt;/li>
&lt;li>Go to EC2 instances and select the instance&lt;/li>
&lt;li>Check the tags for the name&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>ssh in to the Docker instance: &lt;code>ssh -J admin@gateway.dev.medicmobile.org admin@&amp;lt;instance_name&amp;gt;&lt;/code>&lt;/li>
&lt;li>Work out the name of the Docker container you want to connect to, eg: &amp;ldquo;alpha-dev&amp;rdquo;. Get a list of available containers with: &lt;code>sudo docker ps&lt;/code>&lt;/li>
&lt;li>Connect to the container: &lt;code>sudo docker exec -it &amp;lt;container-name&amp;gt; /bin/bash&lt;/code>&lt;/li>
&lt;/ol></description></item><item><title>Apps: SSL Cert Install</title><link>https://docs.communityhealthtoolkit.org/beta/apps/guides/hosting/ssl-cert-install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/beta/apps/guides/hosting/ssl-cert-install/</guid><description>
&lt;h2 id="requirements">Requirements&lt;/h2>
&lt;ul>
&lt;li>Installed CHT-Core 3.x via docker-compose&lt;/li>
&lt;li>Your own SSL certifications (Let&amp;rsquo;s Encrypt)&lt;/li>
&lt;/ul>
&lt;h2 id="copy-certs-into-medic-os-container">Copy certs into medic-os container&lt;/h2>
&lt;pre>&lt;code>Inside your server (you may need to use sudo before each command):
$ docker ps
$ docker cp /path/to/ssl.cert medic-os:/srv/settings/medic-core/nginx/private/ssl.crt
$ docker cp /path/to/ssl.key medic-os:/srv/settings/medic-core/nginx/private/ssl.key
&lt;/code>&lt;/pre>&lt;h2 id="edit-nginx-configuration-file">Edit nginx configuration file&lt;/h2>
&lt;pre>&lt;code>Inside the medic-os docker container:
$ docker exec -it medic-os /bin/bash
# sed -i &amp;quot;s|default.crt|ssl.crt|&amp;quot; /srv/settings/medic-core/nginx/nginx.conf
# sed -i &amp;quot;s|default.key|ssl.key|&amp;quot; /srv/settings/medic-core/nginx/nginx.conf
&lt;/code>&lt;/pre>&lt;h2 id="restart-services">Restart services&lt;/h2>
&lt;pre>&lt;code>Inside medic-os container:
$ docker exec -it medic-os /bin/bash
# /boot/svc-restart medic-core nginx
&lt;/code>&lt;/pre>&lt;h2 id="view-nginx-logs">View Nginx Logs&lt;/h2>
&lt;pre>&lt;code>Inside container:
# cd /srv/storage/medic-core/nginx/logs/
access.log error-ssl.log error.log startup.og
&lt;/code>&lt;/pre></description></item></channel></rss>