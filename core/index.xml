<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Community Health Toolkit – CHT Core Framework</title><link>https://docs.communityhealthtoolkit.org/core/</link><description>Recent content in CHT Core Framework on Community Health Toolkit</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://docs.communityhealthtoolkit.org/core/index.xml" rel="self" type="application/rss+xml"/><item><title>Core: Architecture of CHT Instances</title><link>https://docs.communityhealthtoolkit.org/core/overview/architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/overview/architecture/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>&lt;img src="../../img/architecture.png" alt="Architecture of a CHT project">&lt;/p>
&lt;h2 id="server-side">Server side&lt;/h2>
&lt;h3 id="couchdb">CouchDB&lt;/h3>
&lt;p>A free and open source NoSQL database we use to store all our data, configuration, and even the application code. CouchDB is really good at replication which is the process of sending the data to another database and back again. See more at the &lt;a href="http://couchdb.apache.org">CouchDB&lt;/a> site.&lt;/p>
&lt;h3 id="api">api&lt;/h3>
&lt;p>A NodeJS service which runs on the server as a wrapper around CouchDB. It provides security and APIs for browsers and integrations. It also includes a custom implementation of filtered replication to allow it to support more concurrent users. See more at the &lt;a href="https://github.com/medic/cht-core/tree/master/api">CHT Core API repo&lt;/a> on Github.&lt;/p>
&lt;h3 id="sentinel">sentinel&lt;/h3>
&lt;p>Another NodeJS service running on the server, sentinel performs actions called transitions every time a document in CouchDB is added or modified. Some examples are validations, generating scheduled messages, automatic responses, creating patients, and sending alerts. See more at the &lt;a href="https://github.com/medic/cht-core/tree/master/sentinel">CHT Core Sentinel repo&lt;/a> on Github.&lt;/p>
&lt;h3 id="postgresql">PostgreSQL&lt;/h3>
&lt;p>A free and open source SQL database that we use for analytics queries for display in tools like klipfolio. We created a library called &lt;a href="https://github.com/medic/couch2pg">couch2pg&lt;/a> to replicate data from CouchDB into PostgreSQL. See more at the &lt;a href="https://www.postgresql.org">PostgreSQL&lt;/a> site.&lt;/p>
&lt;h2 id="client-side">Client side&lt;/h2>
&lt;h3 id="cht-core">cht-core&lt;/h3>
&lt;p>&lt;a href="https://github.com/medic/cht-core">cht-core&lt;/a> is composed of the following web applications:&lt;/p>
&lt;h4 id="cht-web-application">CHT Web Application&lt;/h4>
&lt;p>The CHT Web Application is used by Community Health Workers and provides a large variety of &lt;a href="https://docs.communityhealthtoolkit.org/apps/features/">features&lt;/a>.&lt;/p>
&lt;p>View the source code in &lt;a href="https://github.com/medic/cht-core/tree/master/webapp">our GitHub repository&lt;/a>.&lt;/p>
&lt;h5 id="technology">Technology&lt;/h5>
&lt;p>The CHT Web Application is &lt;a href="https://angular.io/guide/rx-library">reactive&lt;/a>, responsive and a single page application built with &lt;a href="https://angular.io/">Angular&lt;/a> and &lt;a href="https://ngrx.io">NgRx&lt;/a> frameworks. Additionally, it uses the following technology:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Technology&lt;/th>
&lt;th>Usage&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="https://pouchdb.com">PouchDB&lt;/a>&lt;/td>
&lt;td>To implement an &lt;a href="https://docs.communityhealthtoolkit.org/core/overview/offline-first/">Offline-First&lt;/a> strategy which means the data is stored on the client and all pages can load immediately regardless of whether the user has a fast connection, slow connection, or no connection at all. The data is stored in PouchDB which replicates changes back and forth in the background with the server CouchDB.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://enketo.org">Enketo&lt;/a>&lt;/td>
&lt;td>To render configured xforms and help with styling and dynamic elements such as show/hide and validation rules.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/C2FO/nools">Nools&lt;/a>&lt;/td>
&lt;td>A rules engine to compute the upcoming tasks and monthly targets of the users.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/valor-software/ngx-bootstrap">Ngx-Bootstrap&lt;/a>&lt;/td>
&lt;td>To integrate Bootstrap components in the Angular application.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/ngx-translate/core">Ngx-translate&lt;/a>&lt;/td>
&lt;td>To automatically translate the labels from a Angular application. Read more about &lt;a href="https://docs.communityhealthtoolkit.org/apps/reference/translations/">how to configure translations&lt;/a>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/karma-runner/karma">Karma&lt;/a>&lt;/td>
&lt;td>A test runner for &lt;a href="https://github.com/medic/cht-core/tree/master/webapp/tests">unit tests&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://mochajs.org/">MochaJS&lt;/a>&lt;/td>
&lt;td>A test framework to run the &lt;a href="https://github.com/medic/cht-core/tree/master/webapp/tests">unit tests&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://www.protractortest.org/#/">Protractor&lt;/a>&lt;/td>
&lt;td>To run the &lt;a href="https://github.com/medic/cht-core/tree/master/tests/e2e">e2e tests&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="http://lesscss.org/">Less&lt;/a>&lt;/td>
&lt;td>A CSS preprocessor&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="structure">Structure&lt;/h5>
&lt;p>The CHT Web Application has the following high level structure:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>/js&lt;/strong>: Contains the vanilla JavaScript scripts, for example: Enketo widgets, MomentJS locales, etc.&lt;/li>
&lt;li>&lt;strong>/ts&lt;/strong>: Contains the Angular application source code which uses TypeScript.
&lt;ul>
&lt;li>&lt;strong>/actions&lt;/strong>, &lt;strong>/effects&lt;/strong>, &lt;strong>/reducers&lt;/strong> and &lt;strong>/selectors&lt;/strong>: Contain the implementation for the application’s reactive state which uses &lt;a href="https://ngrx.io">NgRx&lt;/a> framework.&lt;/li>
&lt;li>&lt;strong>/components&lt;/strong>, &lt;strong>/directives&lt;/strong>, &lt;strong>/pipes&lt;/strong>, &lt;strong>/providers&lt;/strong> and &lt;strong>/services&lt;/strong>: Contain the reusable elements from &lt;a href="https://angular.io/">Angular&lt;/a> framework.&lt;/li>
&lt;li>&lt;strong>/modals&lt;/strong>: Contains the all application’s modals components.&lt;/li>
&lt;li>&lt;strong>/modules&lt;/strong>: Contains the application’s modules, each of them has components that are associated to the modules’ routing.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>/css&lt;/strong>: Contains the style files. It uses &lt;a href="http://lesscss.org/">Less&lt;/a> as a CSS preprocessor.&lt;/li>
&lt;li>&lt;strong>/fonts&lt;/strong>: Contains the fonts.&lt;/li>
&lt;li>&lt;strong>/img&lt;/strong>: Contains the static images.&lt;/li>
&lt;/ul>
&lt;h4 id="app-management">App Management&lt;/h4>
&lt;p>&lt;a href="https://docs.communityhealthtoolkit.org/apps/features/admin/">App Management&lt;/a> is an interface for non-technical administrative users to manage users and settings.&lt;/p>
&lt;p>View the application source code in &lt;a href="https://github.com/medic/cht-core/tree/master/admin">our GitHub repository&lt;/a>.&lt;/p>
&lt;h5 id="technology-1">Technology&lt;/h5>
&lt;p>App Management is a single page application built with &lt;a href="https://angularjs.org">AngularJS&lt;/a> framework and implements &lt;a href="https://github.com/reduxjs/redux">Redux&lt;/a> to manage a reactive state. Additionally, it uses the following technology:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Technology&lt;/th>
&lt;th>Usage&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="https://github.com/angular-translate/angular-translate">Angular Translate&lt;/a>&lt;/td>
&lt;td>To automatically translate the labels from a AngularJS application. Read more about &lt;a href="https://docs.communityhealthtoolkit.org/apps/reference/translations/">how to manage translations&lt;/a>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/karma-runner/karma">Karma&lt;/a>&lt;/td>
&lt;td>A test runner for &lt;a href="https://github.com/medic/cht-core/tree/master/admin/tests">unit tests&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://mochajs.org/">MochaJS&lt;/a>&lt;/td>
&lt;td>A test framework to run the &lt;a href="https://github.com/medic/cht-core/tree/master/admin/tests">unit tests&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://www.protractortest.org/#/">Protractor&lt;/a>&lt;/td>
&lt;td>To run the &lt;a href="https://github.com/medic/cht-core/tree/master/tests/e2e">e2e tests&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="http://lesscss.org/">Less&lt;/a>&lt;/td>
&lt;td>A CSS preprocessor&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5 id="structure-1">Structure&lt;/h5>
&lt;ul>
&lt;li>&lt;strong>/css&lt;/strong>: Contains style files. It uses &lt;a href="http://lesscss.org/">Less&lt;/a> as a CSS preprocessor.&lt;/li>
&lt;li>&lt;strong>/js&lt;/strong>: Contains the JavaScript code.
&lt;ul>
&lt;li>&lt;strong>/actions&lt;/strong>, &lt;strong>/reducers&lt;/strong> and &lt;strong>/selectors&lt;/strong>: Contain the implementation of &lt;a href="https://github.com/reduxjs/redux">Redux&lt;/a>.&lt;/li>
&lt;li>&lt;strong>/controllers&lt;/strong>, &lt;strong>/directives&lt;/strong>, &lt;strong>/filters&lt;/strong> and &lt;strong>/services&lt;/strong>: Contain the reusable elements from &lt;a href="https://angularjs.org">AngularJS&lt;/a> framework.&lt;/li>
&lt;li>&lt;strong>/modules&lt;/strong>: Contains the vanilla JavaScript scripts.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>/template&lt;/strong>: Contains the HTML templates that are used in the AngularJS components and directives.&lt;/li>
&lt;/ul>
&lt;h3 id="cht-android">cht-android&lt;/h3>
&lt;p>CHT Web Application works in the browser or wrapped in the &lt;a href="https://github.com/medic/cht-android">CHT Android&lt;/a> app which allows for project branding, sets the project URL, and hides browser elements like the URL bar.&lt;/p>
&lt;h2 id="other-applications">Other applications&lt;/h2>
&lt;h3 id="cht-gateway">cht-gateway&lt;/h3>
&lt;p>&lt;a href="https://github.com/medic/cht-gateway">CHT Gateway&lt;/a> is an android app for sending and receiving SMS messages. Each SMS enabled project has one gateway running. It polls an api endpoint to write incoming SMS into the CouchDB and retrieve outgoing SMS to send.&lt;/p>
&lt;h3 id="medic-collect">medic-collect&lt;/h3>
&lt;p>&lt;a href="https://github.com/medic/medic-collect">Medic Collect&lt;/a> is an android app based on &lt;a href="https://opendatakit.org">Open Data Kit&lt;/a> to render xforms on the phone and send reports in to cht-gateway over SMS or directly to api over mobile data.&lt;/p>
&lt;h3 id="cht-conf">cht-conf&lt;/h3>
&lt;p>&lt;a href="https://github.com/medic/cht-conf">cht-conf&lt;/a> is a command line utility for uploading configuration and bulk importing of records.&lt;/p></description></item><item><title>Core: Database schema conventions</title><link>https://docs.communityhealthtoolkit.org/core/overview/db-schema/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/overview/db-schema/</guid><description>
&lt;p>CouchDB (and PouchDB in the browser) is a JSON-based NoSQL datastore that we use to store our data. While unlike SQL databases there is no enforced schema, code still follows conventions, and this document aims to describe the schema as defined by how our code operates.&lt;/p>
&lt;p>In this document &amp;ldquo;record&amp;rdquo; means a JSON object that resides in CouchDB or PouchDB.&lt;/p>
&lt;h2 id="general-record-data-structure">General record data structure&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Property&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Required by&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>_id&lt;/code>&lt;/td>
&lt;td>CouchDB&amp;rsquo;s unique identifier of the record&lt;/td>
&lt;td>all records&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>_rev&lt;/code>&lt;/td>
&lt;td>CouchDB&amp;rsquo;s revision marker&lt;/td>
&lt;td>all records&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>type&lt;/code>&lt;/td>
&lt;td>The general type of the document, see below&lt;/td>
&lt;td>all user-created* documents&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>reported_date&lt;/code>&lt;/td>
&lt;td>Numerical timestamp of when the document is first created&lt;/td>
&lt;td>all user-created documents&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>User-created documents here generally means contacts and reports, but may extend further.&lt;/li>
&lt;/ul>
&lt;h2 id="contacts-persons-and-places">Contacts (Persons and Places)&lt;/h2>
&lt;p>Contacts are either places (e.g. clinic), groupings (e.g. family) or people (e.g. a patient or CHW).&lt;/p>
&lt;p>The &lt;code>type&lt;/code> property of contact records depends on the version of Medic you are running:&lt;/p>
&lt;ul>
&lt;li>If you are running 3.7 or later you get to &lt;a href="https://docs.communityhealthtoolkit.org/apps/reference/app-settings/hierarchy/#app_settingsjson-contact_types">configure your contact hierarchy&lt;/a>, and the &lt;code>type&lt;/code> of contacts is &lt;code>contact&lt;/code>, and the configured type is in the &lt;code>contact_type&lt;/code> property.&lt;/li>
&lt;li>In earlier versions the type depended on hierarchical location of the contact. There are 3 hard coded place types: &lt;code>district_hospital&lt;/code>, &lt;code>health_centre&lt;/code> and &lt;code>clinic&lt;/code> and one people type &lt;code>person&lt;/code>. These place names are often meaningless (hence the configurable contact hierarchy in later versions) to the configured project, and are textually (ie in the UI not in data structures) renamed to mean other things. For example, as &lt;code>clinic&lt;/code> is the lowest level it is often used to represent a family.&lt;/li>
&lt;/ul>
&lt;h3 id="places">Places&lt;/h3>
&lt;p>Represent either an actual physical location such as a clinic, or a grouping such as a family or region.&lt;/p>
&lt;p>Unless a place is at the top of the hierarchy it has a &lt;code>parent&lt;/code> place.&lt;/p>
&lt;p>Each location has a primary contact, which is a &lt;code>person&lt;/code> contact stored in the &lt;code>contact&lt;/code> property.&lt;/p>
&lt;h3 id="people">People&lt;/h3>
&lt;p>People are both patients in the system and users of the system, such as CHWs or Nurses. Users have additional records marking them as users of the system (see &lt;a href="#users">User&lt;/a> below).&lt;/p>
&lt;p>People always have a &lt;code>parent&lt;/code> place.&lt;/p>
&lt;h3 id="parent-hierarchy-representation">Parent hierarchy representation&lt;/h3>
&lt;p>Contacts &lt;strong>store&lt;/strong> their parent hierarchy as a minified hierarchical structure, which records the &lt;code>_id&lt;/code> of each parent up until the top of the hierarchy:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">type&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;person&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;A patient&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">parent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">_id&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;clinic-id&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">parent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">_id&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;health_centre-id&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">parent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">_id&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;district_hospital-id&amp;#39;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Generally when contacts are &lt;strong>used&lt;/strong> in the app they are first &amp;ldquo;hydrated&amp;rdquo;, with the rest of the information filled in from their parent&amp;rsquo;s place documents:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">type&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;person&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;A patient&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">parent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">_id&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;clinic-id&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;A clinic&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">reported_date&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1234&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000;font-weight:bold">...&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// etc
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">parent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">_id&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;health_centre-id&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;A Health Centre&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">reported_date&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1134&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000;font-weight:bold">...&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// etc
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">parent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">_id&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;district_hospital-id&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;THE District Hospital&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">reported_date&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1034&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000;font-weight:bold">...&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// etc
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;p>&lt;em>See Also&lt;/em>: &lt;a href="https://docs.communityhealthtoolkit.org/apps/guides/data/hydration/">Document hydration&lt;/a>&lt;/p>
&lt;p>As of version &lt;strong>3.10&lt;/strong>, you can connect contacts with other documents via the &lt;code>linked_docs&lt;/code> property. This allows the app to have access to these linked documents when the contact is used.&lt;/p>
&lt;p>Like the parent hierarchy, linked docs are stored as a minified object, where every linked doc is identified by a string tag and the UUID of the document it represents.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">type&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;person&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;A patient&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">parent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">_id&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;clinic-id&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#000">linked_docs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">custom_tag1&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;some-contact-id&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">custom_tag2&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;other-contact-id&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">custom_tag3&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;report-id&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000;font-weight:bold">...&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// etc
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Linked docs are shallowly &amp;ldquo;hydrated&amp;rdquo; along with the parent hierarchy:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">type&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;person&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;A patient&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">parent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">_id&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;clinic-id&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;A clinic&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">reported_date&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1234&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000;font-weight:bold">...&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// etc
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">parent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">_id&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;health_centre-id&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;A Health Centre&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">reported_date&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1134&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000;font-weight:bold">...&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// etc
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">parent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">_id&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;district_hospital-id&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;THE District Hospital&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">reported_date&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1034&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000;font-weight:bold">...&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// etc
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#000">linked_docs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">custom_tag1&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">_id&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;some-contact-id&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;some contact&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">type&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;person&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">parent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span> &lt;span style="color:#000">_id&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;other-clinic&amp;#39;&lt;/span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#000">reported_date&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">4569&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000;font-weight:bold">...&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// etc
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#000">custom_tag2&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">_id&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;other-contact-id&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;other contact&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">type&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;clinic&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">parent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span> &lt;span style="color:#000">_id&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;health_center&amp;#39;&lt;/span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#000;font-weight:bold">...&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// etc
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#000">custom_tag3&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">_id&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;report-id&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">form&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;FORM&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">contact&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span> &lt;span style="color:#000">_id&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;submitter-id&amp;#39;&lt;/span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#000;font-weight:bold">...&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// etc
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="reports">Reports&lt;/h2>
&lt;p>Reports are created by users filling out and submitting forms, as well as sending in SMS.&lt;/p>
&lt;p>All reports:&lt;/p>
&lt;ul>
&lt;li>Use the &lt;code>data_record&lt;/code> type&lt;/li>
&lt;li>Have their fields stored in the &lt;code>fields&lt;/code> property&lt;/li>
&lt;li>Have the report author&amp;rsquo;s phone number (if it exists) stored in the &lt;code>from&lt;/code> field&lt;/li>
&lt;li>Store the form&amp;rsquo;s identifier in the &lt;code>form&lt;/code> field&lt;/li>
&lt;li>May have a &lt;code>contact&lt;/code> property, which is a minified version of the report author&amp;rsquo;s contact and its hierarchy (see above)&lt;/li>
&lt;/ul>
&lt;p>Reports can be about people or places.&lt;/p>
&lt;p>Reports about people should have one or more of:&lt;/p>
&lt;ul>
&lt;li>A patient shortcode, found at &lt;code>doc.patient_id&lt;/code> or &lt;code>doc.fields.patient_id&lt;/code>&lt;/li>
&lt;li>A patient record&amp;rsquo;s &lt;code>_id&lt;/code>, found at &lt;code>doc.patient_uuid&lt;/code> or &lt;code>doc.fields.patient_uuid&lt;/code>, as well as potientially in the same locations as the shortcode&lt;/li>
&lt;/ul>
&lt;p>Reports about places should have a place&amp;rsquo;s shortcode, found at &lt;code>doc.place_id&lt;/code> or &lt;code>doc.fields.place_id&lt;/code>.&lt;/p>
&lt;p>Additionally, SMS reports:&lt;/p>
&lt;ul>
&lt;li>Have an &lt;code>sms_message&lt;/code> property which contains, among other things, the raw SMS&lt;/li>
&lt;li>May not have a &lt;code>contact&lt;/code> property if the SMS comes from a phone number that does not have an associated contact&lt;/li>
&lt;/ul>
&lt;p>Additionally, XML reports:&lt;/p>
&lt;ul>
&lt;li>Have the XML file that Enketo (the XForm renderer used) generates as an attachment&lt;/li>
&lt;li>Have a &lt;code>content_type&lt;/code> property of &lt;code>xml&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="forms">Forms&lt;/h2>
&lt;p>SMS forms are defined in &lt;a href="https://docs.communityhealthtoolkit.org/apps/reference/app-settings/patient_reports/#app_settingsjson-patient_reports">application config&lt;/a>.&lt;/p>
&lt;p>XML forms are stored in the database and have:&lt;/p>
&lt;ul>
&lt;li>An &lt;code>_id&lt;/code> of &lt;code>form:&amp;lt;formname&amp;gt;&lt;/code>&lt;/li>
&lt;li>The &lt;code>type&lt;/code> of &lt;code>form&lt;/code>&lt;/li>
&lt;li>The actual XML Xforms definition attached&lt;/li>
&lt;/ul>
&lt;p>XML forms are defined as XForm XML files&lt;/p>
&lt;h2 id="users">Users&lt;/h2>
&lt;p>Users represent credentials and roles / permissions for accessing the application. This can either be:&lt;/p>
&lt;ul>
&lt;li>people who can log into the application, such as CHWs or Nurses&lt;/li>
&lt;li>or credentials granting external software restricted permissions to perform certain tasks, such as allowing an external service permission to write reports via the api.&lt;/li>
&lt;/ul>
&lt;p>User records have at least:&lt;/p>
&lt;ul>
&lt;li>An &lt;code>_id&lt;/code> of &lt;code>org.couchdb.user:&amp;lt;username&amp;gt;&lt;/code>&lt;/li>
&lt;li>A &lt;code>name&lt;/code> which is the same as &lt;code>&amp;lt;username&amp;gt;&lt;/code> above&lt;/li>
&lt;li>A &lt;code>roles&lt;/code> array&lt;/li>
&lt;/ul>
&lt;p>There are two slightly different copies of this record stored.&lt;/p>
&lt;p>The record in the &lt;code>_users&lt;/code> database includes:&lt;/p>
&lt;ul>
&lt;li>The &lt;code>type&lt;/code> of &lt;code>user&lt;/code>&lt;/li>
&lt;li>The password hash and associated data&lt;/li>
&lt;/ul>
&lt;p>The &lt;code>_users&lt;/code> database is what CouchDB uses for authentication and is only editable by administrative users, so is authoritive when it comes to roles and the like.&lt;/p>
&lt;p>The &lt;code>medic&lt;/code> database stores a copy of roles and permissions along with:&lt;/p>
&lt;ul>
&lt;li>The &lt;code>type&lt;/code> of &lt;code>user-settings&lt;/code>&lt;/li>
&lt;li>They may have a &lt;code>contact_id&lt;/code> field that is the &lt;code>_id&lt;/code> of the &lt;em>person&lt;/em> that the user is attached to&lt;/li>
&lt;li>They may also have a &lt;code>facility_id&lt;/code> field that is the &lt;code>_id&lt;/code> of the &lt;em>place&lt;/em> that the user is attached to&lt;/li>
&lt;li>They may also have a &lt;code>known&lt;/code> field. If this field is &lt;code>true&lt;/code>, it means the user has logged in once and will no longer be shown the tour by default. Otherwise, it will be &lt;code>undefined&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>Note that SMS users do not have a users record: their phone number will be attached to a &lt;code>person&lt;/code> record, but they do not have a user because they do not access the application.&lt;/p>
&lt;p>Users then, can be represented by up to 3 docs:&lt;/p>
&lt;ul>
&lt;li>a &lt;code>person&lt;/code> document that represents a physical human being in our hierarchy of places and people&lt;/li>
&lt;li>a &lt;code>users&lt;/code> document that represents authorisation and authentication information for physical people or authenticated external services&lt;/li>
&lt;li>a &lt;code>user-settings&lt;/code> document that ties the &lt;code>user&lt;/code> and &lt;code>person&lt;/code> documents together&lt;/li>
&lt;/ul>
&lt;h2 id="tasks">Tasks&lt;/h2>
&lt;p>&lt;a href="https://docs.communityhealthtoolkit.org/apps/reference/tasks/#tasksjs">Partner configuration code&lt;/a> running inside the Core Framework can cause tasks to appear within the Tasks tab. Each task in the tab is powered by a task document. Task documents are:&lt;/p>
&lt;ul>
&lt;li>updated only after the data for their emitting contact changes or every 7 days&lt;/li>
&lt;li>created in the database for any task due within the last 60 days&lt;/li>
&lt;li>immutable once their state is &amp;ldquo;terminal&amp;rdquo; (Cancelled, Completed, Failed)&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>State&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Draft&lt;/td>
&lt;td>Task has been calculated but it is scheduled in the future&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Ready&lt;/td>
&lt;td>Task is currently showing to the user&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Cancelled&lt;/td>
&lt;td>Task was not emitted when refreshing the requester&amp;rsquo;s data. Task has invalid partner emission.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Completed&lt;/td>
&lt;td>Task was emitted with { resolved: true }&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Failed&lt;/td>
&lt;td>Task was never terminated and the endDate has past&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Attribute&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>user&lt;/td>
&lt;td>The user settings id of the user who calculated and created the document. Used for controlling replication. (eg. &lt;code>org.couchdb.user:agatha&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>requester&lt;/td>
&lt;td>The guid of the contact whose data brought about the creation of the document. Used for controlling cancellation.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>owner&lt;/td>
&lt;td>The guid of the contact whose profile this task will appear on in the contact&amp;rsquo;s tab.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>forId&lt;/td>
&lt;td>If completing a task&amp;rsquo;s action opens a form. Completing the form creates a report. &lt;code>forId&lt;/code> is the guid of the contact information that will be passed into the form. For most forms, the resulting report will be associated with this contact.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>emission&lt;/td>
&lt;td>Minified task data emitted from the partner code.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>stateHistory&lt;/td>
&lt;td>Each time the state attribute changes, the time of the change is recorded in the state history.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;_id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;task~org.couchdb.user:agatha~pregReport~pregnancy-facility-visit-reminder~2~523435132468&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;type&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;task&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;authoredOn&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">523435132468&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;user&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;org.couchdb.user:agatha&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;requester&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;requester-contact-guid&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;owner&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;owner-contact-guid&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;state&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Ready&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;emission&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;_id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;pregReport~pregnancy-facility-visit-reminder~2&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;forId&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;for-contact-guid&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;dueDate&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;2000-01-01&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;startDate&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;1999-12-29&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;endDate&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;2000-01-08&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#a40000">...&lt;/span>
&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;stateHistory&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;state&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Ready&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;timestamp&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">523435132468&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000;font-weight:bold">}],&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="targets">Targets&lt;/h2>
&lt;p>&lt;a href="https://docs.communityhealthtoolkit.org/apps/reference/targets/#targetsjs">Partner configuration code&lt;/a> can configure targets to appear within the Targets/Analytics tab. Target documents are:&lt;/p>
&lt;ul>
&lt;li>one per analytics reporting period&lt;/li>
&lt;li>updated when the user loads the application or when they view the targets tab&lt;/li>
&lt;li>updated a maximum of once per day&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;_id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;target~2000-01~user-contact-guid~org.couchdb.user:agatha&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;type&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;target&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;user&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;org.couchdb.user:agatha&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;owner&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;user-contact-guid&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;updated_date&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">523435132468&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;targets&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;deaths-this-month&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#a40000">...&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;value&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;pass&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;total&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">15&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#a40000">...&lt;/span>
&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Core: Development Environment</title><link>https://docs.communityhealthtoolkit.org/core/guides/android/development-setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/guides/android/development-setup/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>The following instructions allows you to setup a development environment for the &lt;strong>&lt;a href="https://github.com/medic/cht-android">CHT Android&lt;/a>&lt;/strong> apps, to either contribute to the project or just add a new flavor (branded app). Most of the instructions also applies to the &lt;strong>&lt;a href="https://github.com/medic/cht-gateway">CHT Gateway&lt;/a>&lt;/strong> app (the differences are highlighted in the guide).&lt;/p>
&lt;p>Finally, you will learn how to assemble the app, run the tests, and how to choose the right artifacts when installing or publishing the apps.&lt;/p>
&lt;/div>
&lt;h2 id="requirements">Requirements&lt;/h2>
&lt;ul>
&lt;li>Java 11+ for CHT Android, Java 8+ for CHT Gateway (OpenJDK versions work).&lt;/li>
&lt;li>Android SDK, and optionally Android Studio.&lt;/li>
&lt;li>The &lt;code>adb&lt;/code> command for debugging and get the logs.&lt;/li>
&lt;li>The source code. To run all the tests in the CHT Android app you need to clone also the submodules: &lt;code>git clone --recurse-submodules https://github.com/medic/cht-android.git&lt;/code>.&lt;/li>
&lt;li>The &lt;code>make&lt;/code> command.&lt;/li>
&lt;li>If you are going to build a new flavor (CHT Android), you also need to have installed: &lt;code>head&lt;/code>, &lt;code>xxd&lt;/code>, &lt;code>openssl&lt;/code> and &lt;code>apksigner&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Gradle&lt;/strong> is also used but it&amp;rsquo;s downloaded and installed in the user space the first time &lt;code>make&lt;/code> is executed. You can also build and launch the app with &lt;a href="#android-studio">Android Studio&lt;/a>.&lt;/p>
&lt;p>Bellow are the instructions of how to install and setup some of the tools required.&lt;/p>
&lt;h2 id="install">Install&lt;/h2>
&lt;h3 id="java">Java&lt;/h3>
&lt;p>Java 11+ needs to be installed. The CHT Gateway can be also compiled with Java 8, but you can use the same Java 11 used for the CHT Android apps. The &lt;code>bin/&lt;/code> folder of the JDK must added in the &lt;code>$PATH&lt;/code> environment variable, and it&amp;rsquo;s recommended to have &lt;code>$JAVA_HOME&lt;/code> pointing to the JDK folder as well.&lt;/p>
&lt;p>To install different versions of Java and without the need to have root permissions, checkout &lt;a href="https://sdkman.io/">Sdkman!&lt;/a>, if you are familiar with tools like &lt;code>nvm&lt;/code> or &lt;code>rvm&lt;/code>, this tool is pretty much the same for Java, and the command takes care of adding the selected JDK to the &lt;code>$PATH&lt;/code> variable and to set the &lt;code>$JAVA_HOME&lt;/code> variable when switching across different versions.&lt;/p>
&lt;h3 id="android-studio-and-the-sdk">Android Studio and the SDK&lt;/h3>
&lt;p>Android Studio is the full package: the IDE based on IntelliJ IDEA, the Android SDK and the SDK Manager with the UI to manage different packages visually, while the SDK alone only includes the command line tools like the &lt;code>sdkmanager&lt;/code> CLI.&lt;/p>
&lt;p>You don&amp;rsquo;t need the IDE to build the app or to install a &amp;ldquo;debug&amp;rdquo; version in a device, or get the logs, but it&amp;rsquo;s recommended if you also want to debug the app or modify the code.&lt;/p>
&lt;ul>
&lt;li>Android Studio: download from &lt;a href="https://developer.android.com/studio">https://developer.android.com/studio&lt;/a>&lt;/li>
&lt;li>Command line tools only: download from &lt;a href="https://developer.android.com/studio#command-tools">https://developer.android.com/studio#command-tools&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>If you install Android Studio it&amp;rsquo;s still recommended to download and setup the command line tools separately to be able to use them without the IDE.&lt;/p>
&lt;p>The binary folder of the command also need to be added to the &lt;code>$PATH&lt;/code>, and &lt;code>$ANDROID_HOME&lt;/code> pointing to the root of the SDK. Moreover, the SDK requires to be stored in the &lt;code>$ANDROID_HOME&lt;/code> and inside a folder called &lt;code>latest&lt;/code>.&lt;/p>
&lt;p>Here are the steps from the command line you can follow to install the CLI tools once downloaded the zip file:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ mkdir -p Android/Sdk/cmdline-tools
$ unzip commandlinetools-linux-7583922_latest.zip
$ mv cmdline-tools/ Android/Sdk/cmdline-tools/latest/
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then, to add the environment variables required, you can add the following to your &lt;code>~/.bashrc&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">ANDROID_HOME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#000">$HOME&lt;/span>&lt;span style="color:#4e9a06">/Android/Sdk&amp;#34;&lt;/span>
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">PATH&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#000">$PATH&lt;/span>&lt;span style="color:#4e9a06">:&lt;/span>&lt;span style="color:#000">$ANDROID_HOME&lt;/span>&lt;span style="color:#4e9a06">/cmdline-tools/latest/bin&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="debug-tool-adb">Debug tool &lt;code>adb&lt;/code>&lt;/h3>
&lt;p>Old SDK distributions used to have it pre-packaged, now you have to install it separately. Once installed SDK following the steps above, you can install the latest version of &lt;code>adb&lt;/code> with:&lt;/p>
&lt;pre>&lt;code>$ sdkmanager --install platform-tools
&lt;/code>&lt;/pre>&lt;p>If you also installed Android Studio you can use the &lt;a href="https://developer.android.com/studio/intro/update#sdk-manager">SDK Manager&lt;/a> instead.&lt;/p>
&lt;p>Finally edit again the &lt;code>$PATH&lt;/code> environment variable to add the adb path: &lt;code>$ANDROID_HOME/platform-tools&lt;/code>.&lt;/p>
&lt;h3 id="apksigner">&lt;code>apksigner&lt;/code>&lt;/h3>
&lt;p>This tool is used automatically by the Android SDK for signing APKs, and to check the certificate of a given APK, so chances are that after installing the SDK following the steps above you already have it installed, but not configured in the &lt;code>$PATH&lt;/code> that is needed to manually check APKs signature.&lt;/p>
&lt;p>The CLI is part of other CLI tolls under the &lt;code>build-tools&lt;/code> package, and multiple build tools package can be installed, so check what versions you have under the &lt;code>$ANDROID_HOME/build-tools&lt;/code> folder, and add the most up to date to the &lt;code>$PATH&lt;/code> folder. E.g. if you have the version 30.0.3 installed in you computer, apksigner should be installed at &lt;code>$ANDROID_HOME/build-tools/30.0.3/apksigner&lt;/code>, so add the &lt;code>$ANDROID_HOME/build-tools/30.0.3&lt;/code> folder to the &lt;code>$PATH&lt;/code> variable.&lt;/p>
&lt;p>In case you don&amp;rsquo;t have it installed or want to install a newer version, checkout the versions available with &lt;code>sdkmanager --list&lt;/code>. You will see a table with a list of installed and available packages, not just the build tools.&lt;/p>
&lt;p>To install the version 31.0.0: &lt;code>sdkmanager --install 'build-tools;31.0.0'&lt;/code>. Then update or add it to the &lt;code>$PATH&lt;/code> variable.&lt;/p>
&lt;h2 id="development">Development&lt;/h2>
&lt;h3 id="flavor-selection">Flavor selection&lt;/h3>
&lt;p>&lt;em>Only CHT Android&lt;/em>&lt;/p>
&lt;p>Some &lt;code>make&lt;/code> targets support the flavor as &lt;code>make flavor=[Flavor] [task]&lt;/code>, where &lt;code>[Flavor]&lt;/code> is the branded version with the first letter capitalized. The &lt;code>[task]&lt;/code> is the action to execute: &lt;code>deploy&lt;/code>, &lt;code>assemble&lt;/code>, &lt;code>lint&lt;/code>, etc.&lt;/p>
&lt;p>The default value for &lt;code>flavor&lt;/code> is &lt;code>Unbranded&lt;/code>, e.g. executing &lt;code>make deploy&lt;/code> will assemble and install that flavor, while executing &lt;code>make flavor=Medicmobilegamma deploy&lt;/code> will do the same for the &lt;em>Medicmobilegamma&lt;/em> brand.&lt;/p>
&lt;p>See the &lt;a href="https://github.com/medic/cht-android/blob/master/Makefile">Makefile&lt;/a> for more details.&lt;/p>
&lt;h3 id="build-and-assemble">Build and assemble&lt;/h3>
&lt;p>To build and assemble the CHT Gateway use &lt;code>make build&lt;/code>.&lt;/p>
&lt;p>For CHT Android app use:&lt;/p>
&lt;pre>&lt;code>$ make assemble
&lt;/code>&lt;/pre>
&lt;p>The command above builds and assembles the &lt;em>debug&lt;/em> and &lt;em>release&lt;/em> APKs of the Unbranded version of the app.&lt;/p>
&lt;p>Each APK will be generated and stored in &lt;code>build/outputs/apk/[flavor]/[debug|release]/&lt;/code>, for example after assembling the &lt;em>Medicmobilegamma&lt;/em> flavor with &lt;code>make flavor=Medicmobilegamma assemble&lt;/code>, the &lt;em>release&lt;/em> versions of the APKs generated are stored in &lt;code>build/outputs/apk/medicmobilegamma/release/&lt;/code>.&lt;/p>
&lt;p>To assemble other flavors, use the following command: &lt;code>make flavour=[Flavor] assemble&lt;/code>. See the &lt;a href="#flavor-selection">Flavor selection&lt;/a> section for more details about &lt;code>make&lt;/code> commands.&lt;/p>
&lt;p>To create the &lt;code>.aab&lt;/code> bundle file, use &lt;code>make bundle&lt;/code>, although signed versions are generated when &lt;a href="https://docs.communityhealthtoolkit.org/core/guides/android/releasing/">releasing&lt;/a>, and the Play Store requires the AAB to be signed with the right key.&lt;/p>
&lt;p>To clean the APKs and compiled resources: &lt;code>make clean&lt;/code>.&lt;/p>
&lt;h3 id="testing">Testing&lt;/h3>
&lt;p>To execute unit tests and static analysis, run: &lt;code>make test&lt;/code>.&lt;/p>
&lt;p>To generate a unit test coverage report, run: &lt;code>make test-coverage&lt;/code>.&lt;/p>
&lt;p>Find the generated report in:
&lt;code>build/reports/jacoco/makeUnbrandedDebugUnitTestCoverageReport/html/index.html&lt;/code>&lt;/p>
&lt;h4 id="static-checks">Static checks&lt;/h4>
&lt;p>&lt;em>Only CHT Android&lt;/em>&lt;/p>
&lt;p>To only execute the &lt;strong>linter checks&lt;/strong>, run: &lt;code>make lint&lt;/code>.&lt;/p>
&lt;h4 id="instrumentation-tests">Instrumentation Tests&lt;/h4>
&lt;p>&lt;em>Only CHT Android&lt;/em>&lt;/p>
&lt;p>The UI tests run on a device.&lt;/p>
&lt;ol>
&lt;li>Uninstall previous versions of the app, otherwise an &lt;code>InstallException: INSTALL_FAILED_VERSION_DOWNGRADE&lt;/code> can cause tests to fail.&lt;/li>
&lt;li>Select English as default language in the device.&lt;/li>
&lt;li>Ensure you meet all the &lt;a href="#requirements">Requirements&lt;/a>.&lt;/li>
&lt;li>Execute: &lt;code>make test-ui-all&lt;/code>.&lt;/li>
&lt;/ol>
&lt;h4 id="shell-tests">Shell tests&lt;/h4>
&lt;p>&lt;em>Only CHT Android&lt;/em>&lt;/p>
&lt;p>The project has bash tests that verify the Make targets used to create and manage the keystores used to sign the apps. Use &lt;code>make test-bash-keystore&lt;/code> to run them. In CI they are executed in Linux and MacOS VMs.&lt;/p>
&lt;p>If you get an error like &lt;code>make: ./src/test/bash/bats/bin/bats: Command not found&lt;/code>, it&amp;rsquo;s because you cloned the project without the &lt;code>--recurse-submodules&lt;/code> git argument. Execute first &lt;code>git submodule update --init&lt;/code> to clone
the submodules within the cht-android folder.&lt;/p>
&lt;h4 id="connecting-to-the-server-locally">Connecting to the server locally&lt;/h4>
&lt;p>&lt;em>Only CHT Android&lt;/em>&lt;/p>
&lt;p>Refer to the &lt;a href="https://github.com/medic/cht-core/blob/master/DEVELOPMENT.md#testing-locally-with-devices">CHT Core Developer Guide&lt;/a>.&lt;/p>
&lt;h3 id="android-studio">Android Studio&lt;/h3>
&lt;p>The &lt;a href="https://developer.android.com/studio">Android Studio&lt;/a> can be used to build and launch the app instead. Be sure to select the right flavor from the &lt;em>Build Variants&lt;/em> dialog (see &lt;a href="https://developer.android.com/studio/run#changing-variant">Change the build variant&lt;/a>). To launch the app in an emulator, you need to uncomment the code that has the strings for the &lt;code>x86&lt;/code> or the &lt;code>x86_64&lt;/code> architecture in the &lt;code>android&lt;/code> / &lt;code>splits&lt;/code> / &lt;code>include&lt;/code> sections of the &lt;code>build.gradle&lt;/code> file.&lt;/p>
&lt;h3 id="artifact-formats">Artifact formats&lt;/h3>
&lt;p>When building the app there are two output formats you can use: Android App Bundle or APK.&lt;/p>
&lt;h4 id="android-app-bundles">Android App Bundles&lt;/h4>
&lt;p>&lt;em>Only CHT Android&lt;/em>&lt;/p>
&lt;p>The &lt;a href="https://github.com/medic/cht-android/blob/master/.github/workflows/publish.yml">publish&lt;/a> script in CI produces multiple AABs for publishing to the &lt;strong>Google Play Store&lt;/strong>, so the generated &lt;code>.aab&lt;/code> files need to be uploaded instead of the &lt;code>.apk&lt;/code> files if the Play Store require so. Old apps published for the first time before Aug 1, 2021 can be updated with the APK format.
If distributing AABs via the Play Store, upload all AABs and it will automatically choose the right one for the target device. The AABs are named as follows: &lt;code>cht-android-{version}-{brand}-release.aab&lt;/code>.&lt;/p>
&lt;h4 id="apks">APKs&lt;/h4>
&lt;p>For compatibility with a wide range of devices, the &lt;a href="https://github.com/medic/cht-android/blob/master/.github/workflows/publish.yml">publish&lt;/a> script in CI produces multiple APKs. The two variables are the instruction set used by the device&amp;rsquo;s CPU, and the supported Android version. When sideloading the application, it is essential to pick the correct APK or the application may crash.&lt;/p>
&lt;p>If distributing APKs via the Play Store, upload all APKs and it will automatically choose the right one for the target device.&lt;/p>
&lt;p>To help you pick which APK to install, you can find information about the version of Android and the CPU in the About section of the phone&amp;rsquo;s settings menu.&lt;/p>
&lt;p>The APKs are named as follows: &lt;code>cht-android-{version}-{brand}-{instruction-set}-release.apk&lt;/code>.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Instruction set&lt;/th>
&lt;th>Android version&lt;/th>
&lt;th>Notes&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>arm64-v8a&lt;/code>&lt;/td>
&lt;td>5+&lt;/td>
&lt;td>Preferred. Use this APK if possible.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>armeabi-v7a&lt;/code>&lt;/td>
&lt;td>5+&lt;/td>
&lt;td>Built as support for older devices, ignore if possible.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Core: Feature Releases</title><link>https://docs.communityhealthtoolkit.org/core/releases/feature_releases/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/feature_releases/</guid><description>
&lt;p>To build and iterate on new features at a pace that is faster than our regular release cycle, some features are released in a &lt;em>Feature Release&lt;/em>. Feature Releases are based on the most recent release and only include improvements related to a feature being developed. These releases are tested to be production-ready so that new features can be studied with CHT partners in a live deployment, with the aim of getting the feature ready for wider use in an upcoming release.&lt;/p>
&lt;h2 id="release-names">Release names&lt;/h2>
&lt;p>A Feature Release can easily be identified by its version, which follows the pattern of &lt;code>{BASE-RELEASE-NUMBER}-FR-{FEATURE-NAME}&lt;/code>. For example, if the latest release is &lt;code>3.10.1&lt;/code> then the Feature Release for speedier upgrades would be &lt;code>3.10.1-FR-speedier-upgrades&lt;/code>. When this feature is found to be successful and ready for wider distribution it will be included in the next release.&lt;/p>
&lt;h2 id="upgrades">Upgrades&lt;/h2>
&lt;p>Once the feature is ready for widespread use it will be included in a regular CHT release. Projects using the feature version can be upgraded as soon as practical to get back on to a fully supported release.&lt;/p></description></item><item><title>Core: Offline-First in the CHT</title><link>https://docs.communityhealthtoolkit.org/core/overview/offline-first/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/overview/offline-first/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>CHT applications are designed to be used equally well in areas with no internet connectivity, slow or unreliable internet connectivity, and good internet connectivity. Achieving reliable performance and powerful features requires diligence and strict adherence to the principles of Offline-First development.&lt;/p>
&lt;p>In this page we&amp;rsquo;ll cover why and how we achieve this in the CHT.&lt;/p>
&lt;h2 id="why-this-is-important">Why this is important&lt;/h2>
&lt;p>The CHT is designed to improve healthcare in the hardest to reach communities. While some users have a strong internet connection, to be as inclusive as possible we optimise for Care Teams with connections that are intermittent, unreliable, expensive, and low bandwidth. To achieve this the CHT is designed to be offline first, which, as the name suggests, means the application never relies on an internet connection for day to day tasks.&lt;/p>
&lt;p>Caveat: a small set of use cases require a decent internet connection, but these are limited to:&lt;/p>
&lt;ul>
&lt;li>Logging in&lt;/li>
&lt;li>Initial download of the application and data&lt;/li>
&lt;li>Changing your own password&lt;/li>
&lt;li>Most administrative tasks such as creating new users&lt;/li>
&lt;li>Data analytics over large data sets&lt;/li>
&lt;/ul>
&lt;h2 id="requirements">Requirements&lt;/h2>
&lt;h3 id="code">Code&lt;/h3>
&lt;p>The CHT uses a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers">Service Worker&lt;/a> to store the code needed to start up and run which is best practice for caching web applications. The CHT Core Framework code is downloaded when the user visits the login page for the first time and completes silently in the background while the user logs in.&lt;/p>
&lt;p>The code includes JavaScript, CSS, HTML, fonts, and images. It doesn&amp;rsquo;t contain any private information so it&amp;rsquo;s safe to download and cache it without authentication. It also doesn&amp;rsquo;t contain deployment specific configuration (covered in detail &lt;a href="#data">below&lt;/a>).&lt;/p>
&lt;p>The CHT Core Framework checks for updates to the code by attempting to connect to the server in the background. The user isn&amp;rsquo;t notified if this check fails or times out, so they can continue to complete workflows without interruption. When an update is found the new code is downloaded and the service worker cache is updated. The user is prompted to reload to start using the new version of the application, but this can be dismissed if they are busy with a patient or don&amp;rsquo;t want to lose their progress if they are midway through an action like creating a contact or completing a form. Either way, the update will be automatically applied the next time the application starts up.&lt;/p>
&lt;h3 id="data">Data&lt;/h3>
&lt;p>Once the application has started up it needs data to be useful. This data falls into two categories:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Configuration&lt;/strong> specific to a single deployment such as forms, task definitions, places, and hierarchies.&lt;/li>
&lt;li>&lt;strong>Patient data&lt;/strong> such as personal details, information about visits, reports, tasks, and messages.&lt;/li>
&lt;/ul>
&lt;p>Both of these types of data are cached on the device because they are required for the user to do their job. The CHT Core Framework uses &lt;a href="https://pouchdb.com/">PouchDB&lt;/a> to store the data on the device&amp;rsquo;s disk. Once cached, when the application starts up the code is executed, which reads the data, allowing the user to do their job regardless of the quality of their internet connection.&lt;/p>
&lt;p>If the user creates new patient data by registering a family or completing a task the application stores this in the phone&amp;rsquo;s cache and attempts to submit this to the server. Periodically the application checks to see if there is new data on the server that is relevant to the user and if so, it updates the cache. This process of sending and receiving data updates is called &lt;a href="https://docs.communityhealthtoolkit.org/apps/guides/performance/replication/">replication&lt;/a>, and is performed without interrupting the user from their work.&lt;/p>
&lt;h2 id="faqs-from-cht-contributors">FAQs from CHT contributors&lt;/h2>
&lt;h3 id="q-should-i-rely-on-request-failure-handling">Q: Should I rely on request failure handling?&lt;/h3>
&lt;p>A: No. This only works well when the user has a strong connection, or if the user is completely offline and the request fails immediately. It&amp;rsquo;s impossible to know for sure how long the request will take, so users with poor connectivity may end up waiting forever. If this request is essential to doing their job they will be unable to move on. It is important to handle request failures gracefully, but it doesn&amp;rsquo;t make a request offline first.&lt;/p>
&lt;h3 id="q-should-i-rely-on-a-request-timeout">Q: Should I rely on a request timeout?&lt;/h3>
&lt;p>A: No. This attempts to mitigate the problem by unblocking the user eventually. The problem is setting the timeout length correctly - if it&amp;rsquo;s too short then the request won&amp;rsquo;t succeed, but if it&amp;rsquo;s too long the user will be required to wait. Experience suggests the timeout for a simple request would have to be around a minute to allow the request to succeed for most users, but a minute is far too long to expect a user to wait. Almost all requests should have a timeout, but that is not sufficient to make a request offline first.&lt;/p>
&lt;h3 id="q-should-i-rely-on-a-spinner-or-loading-bar">Q: Should I rely on a spinner or loading bar?&lt;/h3>
&lt;p>A: No. Much like the timeout solution, this is an attempt to mitigate the problem in this case by giving the user more information about the request. Regardless of the UX, blocking user interaction while waiting for a response is not offline first and therefore not appropriate for the CHT. Showing UX elements when loading is still recommended for local requests, user initiated server requests, and other potentially slow operations.&lt;/p>
&lt;h3 id="q-how-can-i-check-if-the-user-is-authenticated">Q: How can I check if the user is authenticated?&lt;/h3>
&lt;p>A: It is not possible to know for certain if a user has an active session without getting a response from the server. The CHT caches some data to hint at whether the session is still active, for example the session expiry date. However, the only way to be certain is to connect to the server, which is not offline first. This has been implemented in the CHT by checking the status code on background requests such as replication, and instructing the user to login when necessary.&lt;/p>
&lt;h3 id="q-should-i-rely-on-apis-which-report-device-connection-status">Q: Should I rely on APIs which report device connection status?&lt;/h3>
&lt;p>A: No. There are &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Navigator/onLine">APIs available&lt;/a> which report whether the device is online with reasonable reliability. Unfortunately these APIs don&amp;rsquo;t reliably report whether the connection is slow, whether the connection will be held until the request completes, or whether the CHT server is available. This means that even if the browser API reports that the device is online the code will still make a request that may fail or wait indefinitely for a response. These APIs can be useful but must be used in conjunction with Offline-First principles, for example, the CHT uses the &amp;ldquo;online&amp;rdquo; event listener as a prompt to attempt replication in the background.&lt;/p>
&lt;h3 id="q-should-i-add-a-feature-that-requires-a-connection">Q: Should I add a feature that requires a connection?&lt;/h3>
&lt;p>A: Maybe. There are some things that cannot be done offline first because they either require server interaction (eg: authentication during login) or they need to access data that cannot be cached locally (eg: deployment-wide analytics). Every effort should be made to find a way to implement the feature using Offline-First principles, and trade-offs discussed with senior CHT contributors. If the feature truly needs to be online first then the UX needs to be designed so that the user understands the feature requires an internet connection.&lt;/p>
&lt;h2 id="further-reading">Further reading&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://alistapart.com/article/offline-first/">Designing Offline-First Web Apps&lt;/a> by A List Apart&lt;/li>
&lt;li>&lt;a href="https://hasura.io/blog/design-guide-to-offline-first-apps/">A Design Guide for Building Offline First Apps&lt;/a> by Hasura&lt;/li>
&lt;li>&lt;a href="https://blog.couchdb.org/2017/09/19/couchdb-takes-medic-mobile-to-the-front-lines-of-healthcare-work/">CouchDB takes CHT to the front lines of healthcare work&lt;/a> by CouchDB&lt;/li>
&lt;/ul></description></item><item><title>Core: Technical Roadmap</title><link>https://docs.communityhealthtoolkit.org/core/overview/technical-roadmap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/overview/technical-roadmap/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>The technical roadmap shows planned architectural and process changes for development of the CHT. Feedback and suggestions are welcome either directly on this page, or on the &lt;a href="https://forum.communityhealthtoolkit.org/">CHT Forum&lt;/a>.&lt;/p>
&lt;iframe src="https://technicalroadmap.communityhealthtoolkit.org" frameborder="0" width="100%" height="500px">&lt;/iframe></description></item><item><title>Core: Data Flows for Analytics</title><link>https://docs.communityhealthtoolkit.org/core/overview/data-flows-for-analytics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/overview/data-flows-for-analytics/</guid><description>
&lt;p>In this section, we focus on how data flows through the various components of the Community Health Toolkit. The CHT is built to support the delivery of quality community health care at the last mile. The CHT is designed to work in areas with low connectivity, which means it is an &lt;a href="https://docs.communityhealthtoolkit.org/core/overview/offline-first/">Offline-First&lt;/a> toolkit for care provision. The architectural and technology choices in the stack are mostly guided by this principle, which will be evident in the discussion of the data management pipeline.&lt;/p>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>&lt;img src="data-flows.png" alt="Data Flows">&lt;/p>
&lt;p>At a high level:&lt;/p>
&lt;ul>
&lt;li>Data are collected from the device of a health worker;&lt;/li>
&lt;li>Data are pushed to an online instance from where data are available to other health workers, supervisors, and decision makers;&lt;/li>
&lt;li>Data are transferred to a relational database (PostgreSQL) using &lt;a href="https://github.com/medic/medic-couch2pg">couch2pg&lt;/a> and made available for impact monitoring, data science projects, and visualizations;&lt;/li>
&lt;li>Access to PostreSQL is given to relevant parties at this level, for example members of the Research &amp;amp; Learning team for impact monitoring and data science;&lt;/li>
&lt;li>Visualization platforms, such as &lt;a href="https://www.klipfolio.com/">Klipfolio&lt;/a>, are then connected to PostgreSQL from where program managers and other partner representatives can access visualizations of their data for decision-making&lt;/li>
&lt;/ul>
&lt;h2 id="details-of-the-data-flow">Details of the data flow&lt;/h2>
&lt;p>The layout detailed here is specific to how Medic supports its CHT partners at the moment. It is replicable and can be deployed as is or tweaked independent of Medic either by modifying or replacing pieces of it with other options.&lt;/p>
&lt;h3 id="current-infrastructure">Current infrastructure&lt;/h3>
&lt;p>We look at this in three general phases.&lt;/p>
&lt;h4 id="1-data-collection">1. Data Collection&lt;/h4>
&lt;p>Data is collected in the community at the point of care, i.e. the community health worker interacting with the toolkit. These tools and their corresponding data stores are::-&lt;/p>
&lt;ul>
&lt;li>Mobile app -&amp;gt; PouchDB&lt;/li>
&lt;li>Webapp -&amp;gt; PouchDB / CouchDB&lt;/li>
&lt;li>Text forms / sms -&amp;gt; SMS gateway / SMS aggregator -&amp;gt; CouchDB&lt;/li>
&lt;/ul>
&lt;p>The mobile app and webapp, when deployed for offline first use, use a local database namely PouchDB. Similar to CouchDB, it is a document-oriented database. The data collected in PouchDB is synced to an online CouchDB upon the user connecting to the internet. Local storage is not applicable to SMS; instead, an &lt;a href="https://github.com/medic/cht-gateway">SMS gateway&lt;/a> or an SMS aggregator (for example &lt;a href="https://africastalking.com">Africa&amp;rsquo;s Talking&lt;/a>) is used to help get the data to an online CouchDB instance.&lt;/p>
&lt;p>Ultimately all the data ends up in a CouchDB instance deployed in the cloud whether through data synchronization with PouchDB local to the health workers devices, use of SMS aggregators or gateway. It should be mentioned that you can have a deployment supported by all of webapp, mobile app and SMS and have all the data end up in the same CouchDB instance.&lt;/p>
&lt;h4 id="2-data-transformation">2. Data Transformation&lt;/h4>
&lt;p>We use &lt;a href="https://github.com/medic/medic-couch2pg">couch2pg&lt;/a> to move data from CouchDB to a relational database, PostgreSQL in this case. The choice of PostgreSQL for analytics dashboard data sources is to allow use of the more familiar SQL querying. It is an open source tool that can be &lt;a href="https://github.com/medic/medic-couch2pg#user-content-installation-steps-if-applicable">easily deployed&lt;/a>. When deployed the service uses &lt;a href="https://docs.couchdb.org/en/stable/api/database/changes.html">CouchDB&amp;rsquo;s changes feed&lt;/a> which allows capturing of everything happening in CouchDB in incremental updates. It is run and monitored by the operating system where it is configured to fetch data at a configurable interval.&lt;/p>
&lt;p>Data copied over to PostgreSQL is first stored as raw json (document) making use of PostgreSQL&amp;rsquo;s jsonb data type to create an exact replica of a CouchDB database. From this, default views are created at deployment of the service and refreshed during every subsequent run. Additional custom materialized views created later are also refreshed at this time.&lt;/p>
&lt;p>Custom materialized views and functions are added specific to a deployment&amp;rsquo;s needs. Generally the following naming convention is recommended:&lt;/p>
&lt;ul>
&lt;li>&lt;em>formview&lt;/em> as a view of raw forms&lt;/li>
&lt;li>&lt;em>useview&lt;/em> as a view of form data supporting a use case as defined by design&lt;/li>
&lt;li>&lt;em>contactview&lt;/em> as a view of people and places&lt;/li>
&lt;li>Database functions are used as a way to join as much relevant data as possible for easier querying in analytics or dashboard visualizations.&lt;/li>
&lt;/ul>
&lt;p>Data in the views and functions mentioned in this section is as accurate as the accuracy of the SQL queries. Best practice is to begin the process of defining these objects at design in order to align analytics and dashboards requirements with workflows being deployed.&lt;/p>
&lt;h4 id="3-data-use">3. Data Use&lt;/h4>
&lt;p>The data in PostgreSQL is mostly either used by direct querying or via dashboard visualizations for impact monitoring and data driven-decision making. Database visualizations are built scoped to the requirements of supporting a successful deployment. The work of our Research &amp;amp; Learning team, specifically data science, is supported at the PostgreSQL level through updated contactviews, formviews, useviews and functions with access to these provided to relevant parties as and when needed. Our use of data follows our Privacy &amp;amp; Data Protection policy and is in accordance to agreements with our CHT partners.&lt;/p>
&lt;p>As mentioned previously, formviews are built to present data in a structure similar to the data collection tool (form) used. Useviews are tailored to align with a use case, mostly using the formviews as the data sources. These are fundamentally guided by design of the workflows and should be interpreted in the context of the design materials including a document explaining the definitions of variables used.&lt;/p>
&lt;p>The objects present here are not limited to views and functions. Additional tables can be added, for example providing mappings or supporting operations external to the functions available in the toolkit. In short, there is no limitation to the utility that can be added this level to support analytics and dashboards. That said, measures are taken to ensure controlled access, reliability and timely access of the data by the various parties. Some of these measures are:&lt;/p>
&lt;ul>
&lt;li>Roles and users allocation and deallocation done by specific roles within partner technical teams with support from Medic as needed;&lt;/li>
&lt;li>Access control management is left to the partner technical teams where possible;&lt;/li>
&lt;li>Dashboard data source refresh intervals set to align with project needs;&lt;/li>
&lt;li>Update of the data sources monitored to ensure updating works as expected;&lt;/li>
&lt;li>Review of the dashboards as part of the design process;&lt;/li>
&lt;li>Qualitative design activities to interrogate trends observed in the dashboards and iterate on them if need be;&lt;/li>
&lt;/ul>
&lt;h3 id="beyond-our-current-pipeline">Beyond Our Current Pipeline&lt;/h3>
&lt;p>The &lt;a href="https://github.com/medic/cht-core">cht-core&lt;/a> is mostly data collection tools and is the first component of the data management pipeline. It is the core part of a deployment but the rest of the tools can be easily replaced with other preferred options. It also helps that couch2pg is an open source tool which provides the opportunity for collaboration to extend its functionality to support other implementations. Klipfolio, the tool that we currently use for visualizations, is a proprietary tool but there are many open source options, such as &lt;a href="https://superset.incubator.apache.org/">Apache Superset&lt;/a> that are worth exploring and building into future iterations of our impact monitoring and analytics support for the CHT.&lt;/p>
&lt;h2 id="backup">Backup&lt;/h2>
&lt;p>The machines running each of CouchDB and PostgreSQL instances are backed up daily.&lt;/p></description></item><item><title>Core: Releasing</title><link>https://docs.communityhealthtoolkit.org/core/guides/android/releasing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/guides/android/releasing/</guid><description>
&lt;p>All Medic&amp;rsquo;s android projects automatically build, sign, and release builds via Github Actions or Travis. The following guide applies to any of these apps, although the last 2 are in maintenance mode (links pointing to the release sections):&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/medic/cht-android/releases">cht-android&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/cht-gateway/releases">cht-gateway&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/medic-collect/releases">medic-collect&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/rdt-capture/releases">rdt-capture&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="alpha-for-release-testing">Alpha for release testing&lt;/h2>
&lt;ol>
&lt;li>Make sure all issues for this release have passed AT and been merged into &lt;code>master&lt;/code>. You can also create an alpha release from a feature branch, to provide the needed &lt;code>.apk&lt;/code> files to the QA team.&lt;/li>
&lt;li>Create a git tag starting with &lt;code>v&lt;/code> and ending with the alpha version, e.g. &lt;code>git tag v1.2.3-alpha.1&lt;/code> and push the tag to GitHub (&lt;code>git push --tags&lt;/code>). For features branches, you can add the name of the branch or whatever keyword helps to identify the the release, e.g. &lt;code>v1.2.3-alpha.dark-theme.4&lt;/code>.&lt;/li>
&lt;li>Creating the tag will trigger the building and signing of the app in CI. The release-ready APKs are available for side-loading from the Releases section in the project (e.g. &lt;a href="https://github.com/medic/cht-android/releases">CHT-Android Releases&lt;/a>), along with the AABs that may be required by the Google Play Store.&lt;/li>
&lt;li>&lt;strong>Side-Load&lt;/strong>: for testing internally, or apps that are not published in the Play Store like Collect and Gateway: Navigate to the GitHub Releases page (linked above) and download the relevant APKs for distribution.&lt;/li>
&lt;li>Announce the release in &lt;em>#quality-assurance&lt;/em>.&lt;/li>
&lt;/ol>
&lt;h2 id="production-release">Production release&lt;/h2>
&lt;ol>
&lt;li>Repeat step 2-3 from the above &lt;a href="#alpha-for-release-testing">alpha release section&lt;/a> with the naming convention &lt;code>v&amp;lt;major&amp;gt;.&amp;lt;minor&amp;gt;.&amp;lt;patch&amp;gt;&lt;/code>.&lt;/li>
&lt;li>The CI build for the tag will create a new draft release on GitHub. Include the release notes from the CHANGELOG in the description of the release and publish the release on GitHub.&lt;/li>
&lt;li>&lt;a href="https://docs.communityhealthtoolkit.org/core/guides/android/publishing/">Publish&lt;/a> in the Play Store, F-Droid or whatever channel is used for publishing. For the CHT-Android app, the &amp;ldquo;reference&amp;rdquo; apps (&lt;code>medicmobilegamma&lt;/code> and &lt;code>unbranded&lt;/code>) must be published in the Play Store.&lt;/li>
&lt;li>Announce the release on the &lt;a href="https://forum.communityhealthtoolkit.org">CHT forum&lt;/a>, under the &amp;ldquo;Product - Releases&amp;rdquo; category.&lt;/li>
&lt;/ol>
&lt;h2 id="new-flavor-release">New flavor release&lt;/h2>
&lt;p>&lt;em>Only CHT Android&lt;/em>&lt;/p>
&lt;p>If the release only contains a new flavor but is based on the last version, tag it with the same version that the last one plus a number suffix separated with a &lt;code>-&lt;/code>, e.g. if the last version was &lt;code>v1.2.3&lt;/code>, tag it as &lt;code>v1.2.3-1&lt;/code>. In this case there is no need to publish again the reference apps in the Play Store, or to announce the release in the forum if isn&amp;rsquo;t relevant.&lt;/p></description></item><item><title>Core: Publishing</title><link>https://docs.communityhealthtoolkit.org/core/guides/android/publishing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/guides/android/publishing/</guid><description>
&lt;p>Once &lt;a href="https://docs.communityhealthtoolkit.org/core/guides/android/releasing/">released&lt;/a> the app, there are many different ways to publish the binaries for installation.&lt;/p>
&lt;h3 id="google-play-store">Google Play Store&lt;/h3>
&lt;p>The Play Store has the advantage of being installed on all Android phones by default. This makes it very easy for users to install your app, which makes it the approach we recommend for most applications.&lt;/p>
&lt;p>One of the downsides is it can be more difficult to get your app published and it may be removed in future if it&amp;rsquo;s found to not comply with future requirements.&lt;/p>
&lt;p>Follow these instructions to &lt;a href="https://support.google.com/googleplay/android-developer/answer/9859751?hl=en">publish your app&lt;/a>. In the &lt;a href="https://play.google.com/console">Google Play Console&lt;/a>, for each flavor to publish, create a new &lt;code>Production&lt;/code> release:&lt;/p>
&lt;ul>
&lt;li>Upload app bundles (from the GitHub Release) for the flavor&lt;/li>
&lt;li>Use the new cht-android version as the Release name&lt;/li>
&lt;li>Add a one sentence summary of the CHANGELOG entry as the Release notes.&lt;/li>
&lt;/ul>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Published apps are not immediately available to users on the Play Store. Confirm, via the Google Play Console, that the release is available before officially announcing it (this could take hours or days).
&lt;/div>
&lt;h4 id="new-app-in-the-play-store">New App in the Play Store&lt;/h4>
&lt;p>Remember that when the app is created in the Play Store, it&amp;rsquo;s required to choose the way the app will be signed by Google: we upload the signed AAB files, but then Google creates optimized versions of the app in .apk format. The app has to be configured to use the same signing and upload signatures by Google. Choose to upload a &amp;ldquo;Java keystore&amp;rdquo;, the Play Console will require a file encrypted with a tool named PEPK, that file is &lt;code>&amp;lt;brand&amp;gt;_private_key.pepk&lt;/code> generated when following the instructions of &lt;a href="https://docs.communityhealthtoolkit.org/core/guides/android/branding/">New brand&lt;/a> (the button to upload the &lt;code>.pepk&lt;/code> in the Play Console may say &amp;ldquo;Upload generated ZIP&amp;rdquo; although the PEPK file doesn&amp;rsquo;t look like a .zip file).&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
New apps cannot longer be uploaded with the APK format in the Play Store. Apps created before Aug 1, 2021 can still be updated with &lt;code>.apk&lt;/code> files, but new ones needs to be uploaded with the Android App Bundle format (&lt;code>.aab&lt;/code>). Checkout the &lt;a href="https://docs.communityhealthtoolkit.org/core/guides/android/development-setup/#artifact-formats">Artifact formats&lt;/a> section.
&lt;/div>
&lt;h3 id="side-loading">Side loading&lt;/h3>
&lt;p>This method gives an app developer full control over installation. It is also possible to do the installation without an internet connection which makes it ideal for remote installation, or to save bandwidth when performing multiple installs.&lt;/p>
&lt;ol>
&lt;li>In the phone settings &lt;a href="https://developer.android.com/distribute/marketing-tools/alternative-distribution#unknown-sources">select the option&lt;/a> to &amp;ldquo;opt in for installing unknown apps&amp;rdquo;.&lt;/li>
&lt;li>Download the correct APK on to the phone. It&amp;rsquo;s important to select the right APK for the instruction set and Android version, as documented &lt;a href="https://docs.communityhealthtoolkit.org/core/guides/android/development-setup/#apks">in this table&lt;/a>. This is likely easiest done by using the phone&amp;rsquo;s browser to navigate to the download page.&lt;/li>
&lt;li>After downloading, you should be prompted to install the APK.&lt;/li>
&lt;/ol>
&lt;h3 id="f-droid">F-Droid&lt;/h3>
&lt;p>F-Droid is a free open source application store which gives the app developer more control over the listing. As it isn&amp;rsquo;t installed on Android devices by default it takes a little more effort to set up originally, but is easier than manually sideloading.&lt;/p>
&lt;p>We are still investigating the viability of this distribution method, but in the meantime you can learn more on their &lt;a href="https://f-droid.org">website&lt;/a>.&lt;/p>
&lt;h3 id="mobile-device-management">Mobile Device Management&lt;/h3>
&lt;p>This gives the IT administrator full control over which applications are installed on the devices in the program. MDM is recommended when you want complete control over the software and configuration.&lt;/p>
&lt;p>There are several providers to choose from with a range of features and prices so it is recommend to do your own research and pick the one that&amp;rsquo;s right for you.&lt;/p></description></item><item><title>Core: Sentinel Transitions</title><link>https://docs.communityhealthtoolkit.org/core/overview/transitions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/overview/transitions/</guid><description>
&lt;p>A transition is javascript code that runs when a document is changed. A
transition can edit the changed doc or do anything server side code can do for
that matter.&lt;/p>
&lt;p>Transitions are run in series, not in parallel:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>For a given change, you can expect one transition to be finished before the
next runs.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>You can expected one change to be fully processed by all transitions before
the next starts being processed.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Transitions obey the following rules:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>has a &lt;code>filter(doc)&lt;/code> function that accepts the changed document as an argument and
returns &lt;code>true&lt;/code> if it needs to run/be applied.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>a &lt;code>onMatch(change, db, auditDb, callback)&lt;/code> function than will run on changes
that pass the filter.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>can have an &lt;code>init()&lt;/code> function to do any required setup and throw Errors on invalid
configuration.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>has an &lt;code>onChange(change, db, audit, callback)&lt;/code> function that makes changes to
the &lt;code>change.doc&lt;/code> reference (copying is discouraged). &lt;code>db&lt;/code> and &lt;code>audit&lt;/code> are
handles to let you query those DBs. More about &lt;code>callback&lt;/code> below.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>It is not necessary for an individual transition to save the changes to &lt;code>change.doc&lt;/code> to the db: the doc will be saved once, after all the transitions have edited it.
If an individual transition saves the document provided at &lt;code>change.doc&lt;/code>, it takes responsibility re-attaching the newly saved document (with new seq etc) at &lt;code>change.doc&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>guarantees the consistency of a document.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>runs serially and in any order. A transition is free to make async calls but
the next transition will only run after the previous transitions&amp;rsquo;s callback
is called. If your transition is dependent on another transition then it will
run on the next change. Code your transition to support two changes rather
than require a specific ordering. You can optimize your ordering but don&amp;rsquo;t
require it. This keeps configuration simpler.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>is repeatable, it can run multiple times on the same document without
negative effect. You can use the &lt;code>transitions&lt;/code> property on a document to
determine if a transition has run.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Callback arguments:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>callback(err, needsSaving)&lt;/p>
&lt;p>&lt;code>needsSaving&lt;/code> is true if the &lt;code>change.doc&lt;/code> needs to be saved to db by the transition runner. For instance the transition has edited the &lt;code>change.doc&lt;/code> in memory.
&lt;code>err&lt;/code> if truthy, the error will be added to the &lt;code>changes.doc&lt;/code> in memory. (Note that if &lt;code>needsSaving&lt;/code> is falsy, the doc will not be saved, so that error will not be persisted).&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Regardless whether the doc is saved or not, the transitions will all be run (unless one crashes!).&lt;/p>
&lt;p>When your transition encounters an error, there are different ways to deal with it. You can :&lt;/p>
&lt;ul>
&lt;li>finish your transition with &lt;code>callback(someError, true)&lt;/code>. This will save the error to &lt;code>change.doc&lt;/code>.&lt;/li>
&lt;li>finish your transition with &lt;code>callback(someError, false)&lt;/code>. The error will be logged to the sentinel log. This will not save the error on the &lt;code>change.doc&lt;/code>, so there will be no record that this transition ran. That particular &lt;code>change&lt;/code> will not go through transitions again, but if the same doc has another change in the future, since there is no record of the erroring transition having run, it will be rerun.&lt;/li>
&lt;li>crash sentinel. When sentinel restarts, since that &lt;code>change&lt;/code> did not record a successful processing, it will be reprocessed. Transitions that did not save anything to the &lt;code>change.doc&lt;/code> will be rerun.&lt;/li>
&lt;/ul></description></item><item><title>Core: How To Manage Translations</title><link>https://docs.communityhealthtoolkit.org/core/overview/translations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/overview/translations/</guid><description>
&lt;p>Apps built with CHT Core are localized so that users can use it in the language of their choice. It is currently available in English, French, Hindi, Nepali, Spanish, and Swahili. The goal of this doc is to help our team manage these and future translations.&lt;/p>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>Like the rest of our code, the translation files live in our GitHub repo. These translation files are &lt;a href="https://en.wikipedia.org/wiki/.properties">properties&lt;/a> files, which are a series of keys and their corresponding values. We use the English file as our default, and as such contains the entire set of keys. If any key is missing from another language file the English value is used.&lt;/p>
&lt;p>In order to collaboratively edit the translations we use POEditor.com. Translators can be given access to specific languages so that we can more effectively edit language text to be included in CHT Core. Once the text is ready it can be exported from POEditor to GitHub and included in the next release of our app.&lt;/p>
&lt;p>Note that &amp;ldquo;keys&amp;rdquo; in .properties files are referred to as &lt;code>terms&lt;/code> in POEditor.&lt;/p>
&lt;h2 id="adding-new-languages">Adding new languages&lt;/h2>
&lt;p>New languages must be added and configured in several places:&lt;/p>
&lt;ul>
&lt;li>&lt;em>In GitHub&lt;/em>
&lt;ul>
&lt;li>Create a new &lt;a href="https://github.com/medic/cht-core/tree/master/ddocs/medic/_attachments/translations">ddocs/medic/_attachments/translations/messages-XX.properties&lt;/a> file, replacing XX with the 2 or 3 letter language code.&lt;/li>
&lt;li>Add the language to the &lt;a href="https://github.com/medic/cht-core/blob/master/api/src/translations.js#L8">&lt;code>LOCAL_NAME_MAP&lt;/code> in api&lt;/a>. Use the language code for the key, and the local name followed by the English name for the language in brackets, eg: &amp;ldquo;fr: &amp;lsquo;Français (French)'&amp;quot;.&lt;/li>
&lt;li>Import the moment language pack in the &lt;a href="https://github.com/medic/cht-core/blob/3.11.x/webapp/src/ts/main.ts#L23">main.ts file&lt;/a>. If moment doesn&amp;rsquo;t provide the required language pack you may need to contribute it upstream to the moment library.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;em>In POEditor&lt;/em>
&lt;ul>
&lt;li>In the &lt;a href="https://poeditor.com/projects/view?id=33025">CHT Core project&lt;/a>, add the language&lt;/li>
&lt;li>Add translations for a new language in the POEditor app&lt;/li>
&lt;li>Export file from POEditor to GitHub, as described below&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="adding-new-keys">Adding new keys&lt;/h2>
&lt;p>In order to trace the addition of new terms and also updates to existing translations,
the default translation file (messages-en.properties) must be updated directly.
Our GitHub repo provides with a &lt;a href="https://github.com/medic/cht-core/tree/master/scripts/poe">command line tool (CLI)&lt;/a> to
import updates into the POEditor app.
If you don&amp;rsquo;t have an API token, please contact a Medic developer. Please do not disclose this API token to anyone else.&lt;/p>
&lt;h3 id="translating-static-text">Translating static text&lt;/h3>
&lt;p>All text in the app is internationalised.&lt;/p>
&lt;ul>
&lt;li>Pick a key.
&lt;ul>
&lt;li>First check if an appropriate key already exists in messages-en.properties (medic/config/standard/translations).&lt;/li>
&lt;li>Otherwise create a new key and default English value. Keys must be all lower case, dot separated, and descriptive but not verbose. The values should include as much text as possible (eg: trailing punctuation), and must not contain any markup. Don&amp;rsquo;t add any values for other languages as this will be done later in the POEditor app.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Use the translation. In angular this is done using angular-translate, and ideally using the &lt;a href="http://angular-translate.github.io/docs/#/guide/05_using-translate-directive">translate directive&lt;/a> to reduce the number of watchers, eg: &lt;code>&amp;lt;h3 translate&amp;gt;date.incorrect.title&amp;lt;/h3&amp;gt;&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h3 id="translating-help-pages">Translating help pages&lt;/h3>
&lt;p>Because help pages are too large to manage easily through the standard translation mechanism, and we want to include lots of markup, help pages are translated by providing md documents for each language. This isn&amp;rsquo;t yet up and running so ask for help.&lt;/p>
&lt;h3 id="translating-configurations">Translating configurations&lt;/h3>
&lt;p>Much of the app is configurable (eg: forms and schedules). Because the specifics of the configuration aren&amp;rsquo;t known during development time these can&amp;rsquo;t be provided via messages. Instead we allow configurers to provide a map of locale to value for each translated property. Then use the &lt;code>translateFrom&lt;/code> filter to translate from the configured map using the user&amp;rsquo;s language.&lt;/p>
&lt;h2 id="modifying-any-existing-translation-values">Modifying any existing translation values&lt;/h2>
&lt;p>To be done &lt;em>only&lt;/em> by updating messages-en.properties, importing to POEditor through the CLI tool and updating the other language translations through the POEditor app.&lt;/p>
&lt;h2 id="modifying-or-removing-translation-keys">Modifying or removing translation keys:&lt;/h2>
&lt;p>To be done &lt;em>only&lt;/em> by updating messages-en.properties and importing to POEditor through the CLI tool.&lt;/p>
&lt;h2 id="exporting-changes-from-poeditor-to-github">Exporting changes from POEditor to GitHub&lt;/h2>
&lt;p>To be done &lt;em>only&lt;/em> by exporting all translations through the CLI tool.
If you don&amp;rsquo;t have an API token, please contact a Medic developer. Please do not disclose this API token to anyone else.&lt;/p></description></item><item><title>Core: Releasing</title><link>https://docs.communityhealthtoolkit.org/core/guides/releasing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/guides/releasing/</guid><description>
&lt;h2 id="cht-core">CHT core&lt;/h2>
&lt;p>&lt;a href="https://github.com/medic/cht-core/issues/new/choose">Create an issue&lt;/a> for either a Major/Minor or Patch release issue template and assign it to the release manager to follow the process.&lt;/p>
&lt;h2 id="cht-conf">cht-conf&lt;/h2>
&lt;p>Follow the &lt;a href="https://github.com/medic/cht-conf/#user-content-releasing">instructions in the readme&lt;/a>.&lt;/p>
&lt;h2 id="android-apps">Android apps&lt;/h2>
&lt;p>Follow the instructions in the &lt;a href="https://docs.communityhealthtoolkit.org/core/guides/android/releasing/">Android &amp;gt; Releasing&lt;/a> section.&lt;/p></description></item><item><title>Core: Updating Dependencies</title><link>https://docs.communityhealthtoolkit.org/core/guides/update-dependencies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/guides/update-dependencies/</guid><description>
&lt;p>Every minor release we update dependencies to get the latest fixes and improvements. We do this early in the release cycle so that we have some more time to find regressions and issues. This is done on all folders with a package.json, including:&lt;/p>
&lt;ul>
&lt;li>cht-core
&lt;ul>
&lt;li>/ (root)&lt;/li>
&lt;li>/admin&lt;/li>
&lt;li>/api&lt;/li>
&lt;li>/sentinel&lt;/li>
&lt;li>/shared-libs/*&lt;/li>
&lt;li>/webapp&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>cht-conf&lt;/li>
&lt;/ul>
&lt;h2 id="steps">Steps&lt;/h2>
&lt;ol>
&lt;li>Checkout and pull the latest default branch - get the latest code&lt;/li>
&lt;li>&lt;code>git checkout -b &amp;quot;&amp;lt;issue&amp;gt;-update-dendencies&amp;quot;&lt;/code> - make a branch&lt;/li>
&lt;/ol>
&lt;p>Then for each folder go through these steps.&lt;/p>
&lt;ol>
&lt;li>&lt;code>npm ci&lt;/code> - update your local node_modules to match expected&lt;/li>
&lt;li>&lt;code>npm outdated&lt;/code> - report on any dependencies which aren&amp;rsquo;t at the latest&lt;/li>
&lt;li>&lt;code>npm install --save[-dev] package@version&lt;/code> - install the latest version (be careful and read the release notes if the new version is a major change from the current)&lt;/li>
&lt;li>&lt;code>npm dedupe&lt;/code> - remove duplicated dependencies&lt;/li>
&lt;li>&lt;code>npm audit fix&lt;/code> - automatically fix any nested dependencies with vulnerabilities&lt;/li>
&lt;li>&lt;code>npm audit&lt;/code> - get a report on any remaining vulnerabilities and manually scan it to see if there&amp;rsquo;s anything else you can do&lt;/li>
&lt;/ol>
&lt;h2 id="problems">Problems&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Don&amp;rsquo;t update &lt;code>bootstrap&lt;/code> to 4+ as it has many breaking changes. One day we will either raise an issue to upgrade it or migrate off it, but that is outside the scope of this change.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Don&amp;rsquo;t update &lt;code>bootstrap-daterangepicker&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Don&amp;rsquo;t update &lt;code>select2&lt;/code> as the latest patch always seems to fail.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Don&amp;rsquo;t update &lt;code>jquery&lt;/code> to 3.6.0+ as the &lt;code>select2&lt;/code> search input looses focus on click event, this is an &lt;a href="https://github.com/select2/select2/issues/5993">open issue&lt;/a> in their repository.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>CHT-Core&amp;rsquo;s webapp is using Enketo and jQuery library, at the same time Enketo internally uses a specific version of jQuery. Make sure webapp installs the same jQuery version than the one Enketo uses internally: &lt;code>3.2.x&lt;/code>.&lt;/p>
&lt;p>Do this by checking the jquery entry in &lt;code>./webapp/package.json&lt;/code> matches &lt;code>./webapp/node_modules/enketo-core/package.json&lt;/code>:&lt;/p>
&lt;pre>&lt;code>$ grep '&amp;quot;jquery&amp;quot;' ./webapp/package.json
&amp;quot;jquery&amp;quot;: &amp;quot;3.2.x&amp;quot;,
$ grep '&amp;quot;jquery&amp;quot;' ./webapp/node_modules/enketo-core/package.json
&amp;quot;jquery&amp;quot;: &amp;quot;3.2.x&amp;quot;,
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>Make sure the version of &lt;code>api/enketo-xslt&lt;/code> is the same as &lt;code>webapp/enketo-core/enketo-transformer/enketo-xslt&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Don&amp;rsquo;t update &lt;code>lodash/core&lt;/code> since 4.17.21 is failing, this is an &lt;a href="https://github.com/lodash/lodash/issues/4904">open issue&lt;/a> in their repository.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Don&amp;rsquo;t update &lt;code>helmet&lt;/code> since it is not supporting NodeJS 8 anymore. Its minimum is NodeJS 10+.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If you have trouble upgrading any other dependency and you think it&amp;rsquo;ll be challenging to fix it then raise a new issue to upgrade just that dependency. Don&amp;rsquo;t hold up all the other upgrades you&amp;rsquo;ve made.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="troubleshooting">Troubleshooting&lt;/h2>
&lt;h3 id="npm-errno--17">npm errno -17&lt;/h3>
&lt;p>If &lt;code>npm ci&lt;/code> errors with &amp;ldquo;errno -17&amp;rdquo; in shared-libs you may need to manually remove the nested dependencies from the package-lock.json. This needs move investigation to work out why this is happening.&lt;/p>
&lt;h3 id="select2-is-not-a-function">select2 is not a function&lt;/h3>
&lt;p>If you get &lt;code>TypeError: &amp;quot;$(...).select2 is not a function&amp;quot;&lt;/code> then either:&lt;/p>
&lt;ol>
&lt;li>You bumped select2. For some reason this breaks it.&lt;/li>
&lt;li>You have multiple jquery libraries and select2 is getting attached to one but not the other. Make sure the jquery versions in enketo-core and webapp match and you&amp;rsquo;ve &lt;code>run dedupe&lt;/code> to remove the enketo-core copy.&lt;/li>
&lt;/ol></description></item><item><title>Core: Fixing E2E Tests</title><link>https://docs.communityhealthtoolkit.org/core/guides/fixing-e2e-tests/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/guides/fixing-e2e-tests/</guid><description>
&lt;h1 id="how-to-fix-e2e-tests">How to fix e2e tests&lt;/h1>
&lt;p>End to end (e2e) tests can be really difficult to debug - sometimes they fail seemingly at random, and sometimes they only fail on certain environments (eg: ci but not locally). This can make reproducing and reliably fixing the issue challenging, so here are some tips to help!&lt;/p>
&lt;h2 id="read-the-protractor-logs">Read the protractor logs&lt;/h2>
&lt;p>Read the failure carefully - it often has really good info but sometimes it&amp;rsquo;s just hard to find. Most importantly it tells you exactly the line in the test that failed and you can look that up in the source to see what protractor was trying to do. The error message itself is also really useful. Also sometimes one error causes the next, so always start with the first test failure before looking at the others.&lt;/p>
&lt;h3 id="known-failure-patterns">Known failure patterns&lt;/h3>
&lt;ul>
&lt;li>Can&amp;rsquo;t click on an element because another element would get the click. This usually means a modal dialog was being shown. 90% of the time this is the update notification modal which means some settings change has been detected after the test started execution.&lt;/li>
&lt;li>Stale element. This means the DOM element has been removed after protractor found it on the page but before you tried to do something with it. I generally try to get protractor to find the element just before I need it to reduce the chance of this happening.&lt;/li>
&lt;/ul>
&lt;h2 id="other-logs">Other logs&lt;/h2>
&lt;p>The API and Sentinel logs are sometimes useful, particularly if API has crashed. These are available locally under &lt;code>/tests/logs/&lt;/code> and for CI builds &lt;a href="https://s3.console.aws.amazon.com/s3/buckets/medic-e2e/">on AWS&lt;/a>.&lt;/p>
&lt;h2 id="screenshots">Screenshots&lt;/h2>
&lt;p>We automatically take screenshots when a test fails and store it locally in &lt;code>/tests/results/&lt;/code> and for CI builds &lt;a href="https://s3.console.aws.amazon.com/s3/buckets/medic-e2e/">on AWS&lt;/a>. These can be particularly useful if a dialog was blocking a click.&lt;/p>
&lt;h2 id="running-just-the-failing-test">Running just the failing test&lt;/h2>
&lt;h3 id="option-1">Option 1&lt;/h3>
&lt;p>Running e2e tests can be quite slow so to save time modify the &lt;code>specs&lt;/code> property of &lt;code>/tests/base.conf.js&lt;/code> so it only finds your test. You can also change &lt;code>describe&lt;/code> and &lt;code>it&lt;/code> to &lt;code>xdescribe&lt;/code> and &lt;code>xit&lt;/code> to skip specific tests.&lt;/p>
&lt;h3 id="option-2">Option 2&lt;/h3>
&lt;p>Alternatively you can run API in test mode using:&lt;/p>
&lt;pre>&lt;code>API_PORT=4988 COUCH_URL=http://admin:pass@localhost:5984/medic-test node server.js
&lt;/code>&lt;/pre>&lt;p>Then grep for just the tests you want to run:&lt;/p>
&lt;pre>&lt;code>protractor /home/kenn/webapp/tests/e2e.tests.conf.js --specs='/home/kenn/webapp/tests/e2e/api/controllers/_changes.spec.js' --grep=&amp;quot;should allow DB admins to POST to _changes&amp;quot;
&lt;/code>&lt;/pre>&lt;h3 id="option-3">Option 3&lt;/h3>
&lt;p>Use the &amp;ldquo;Protractor test runner&amp;rdquo; extension for VSCode.&lt;/p>
&lt;h2 id="watching-the-test-run">Watching the test run&lt;/h2>
&lt;p>Running the tests locally with &lt;code>grunt e2e-debug&lt;/code> will allow you to watch it run but if you interact with the page the test will fail in unexpected ways. Furthermore the browser will close after a short timeout so you won&amp;rsquo;t be able to inspect the console or DOM. To do this, force quit the process running the test before it tears down and you will be able to navigate around the app, use Chrome dev tools, and inspect the docs in the database to (hopefully) work out what&amp;rsquo;s going wrong.&lt;/p></description></item><item><title>Core: Building CHT Android Flavors</title><link>https://docs.communityhealthtoolkit.org/core/guides/android/branding/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/guides/android/branding/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>This tutorial will take you through building a CHT Android Application off the existing wrapper.&lt;/p>
&lt;p>The cht-android application is a thin wrapper to load the CHT Core Framework web application in a WebView.&lt;/p>
&lt;p>You will be adding a new android flavor based off the &lt;a href="https://github.com/medic/cht-android">CHT Android&lt;/a>.&lt;/p>
&lt;/div>
&lt;h2 id="brief-overview-of-key-concepts">Brief Overview of Key Concepts&lt;/h2>
&lt;p>The CHT Android is a native Android container for the Community Health Toolkit (CHT). The repo contains &amp;ldquo;flavored&amp;rdquo; configurations, where each &amp;ldquo;flavor&amp;rdquo; or &amp;ldquo;brand&amp;rdquo; is an app. All apps share the same code and features, but can be customized, hard-coding a specific CHT deployment and have a partner specific logo and display name.&lt;/p>
&lt;h2 id="add-a-new-brand">Add a new Brand&lt;/h2>
&lt;p>Adding a new &lt;em>&amp;ldquo;brand&amp;rdquo;&lt;/em> or &lt;em>&amp;ldquo;flavor&amp;rdquo;&lt;/em> requires the following steps:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Check you meet the &lt;strong>&lt;a href="#1-required-resources">Required Resources&lt;/a>&lt;/strong>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Add the &lt;strong>&lt;a href="#2-new-brand">New Brand&lt;/a>&lt;/strong> in the source code.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>&lt;a href="#3-generate-a-new-keystore">Generate a new keystore&lt;/a>&lt;/strong> if there is no one.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>&lt;a href="#4-test-locally-the-keystore">Test locally&lt;/a>&lt;/strong> and create a pull request with the changes.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>&lt;a href="#5-release-the-new-flavor">Release&lt;/a>&lt;/strong> the new flavor.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>&lt;a href="#6-publish-the-app">Publish&lt;/a>&lt;/strong> in the Play Store or whatever channel.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Below are more instructions for each step.&lt;/p>
&lt;h3 id="1-required-resources">1. Required Resources&lt;/h3>
&lt;p>To proceed you need to have ready the following:&lt;/p>
&lt;ul>
&lt;li>The URL of your CHT server so users don&amp;rsquo;t have to type it in post install.&lt;/li>
&lt;li>The app logo and title.&lt;/li>
&lt;li>Translations for your supported languages (most flavors don&amp;rsquo;t need to customize translations though).&lt;/li>
&lt;/ul>
&lt;p>Also be sure to have a working &lt;strong>&lt;a href="https://docs.communityhealthtoolkit.org/core/guides/android/development-setup/">Development Environment&lt;/a>&lt;/strong>.&lt;/p>
&lt;h4 id="play-store-assets">Play Store assets&lt;/h4>
&lt;p>If you are going to publish the app in the &lt;strong>Play Store&lt;/strong>, Google will require to provide the following to list the app:&lt;/p>
&lt;ul>
&lt;li>A description of the app.&lt;/li>
&lt;li>A shorter description (80 characters).&lt;/li>
&lt;li>Logo 512x512px, typically a version of the partner logo e.g. square design icons.&lt;/li>
&lt;li>A background image.&lt;/li>
&lt;li>Screenshots.&lt;/li>
&lt;/ul>
&lt;p>Google is constantly changing the requirments to publish in the Play Store, it&amp;rsquo;s a good practice to check in advance whether all the requirements are met (checkout &lt;em>&lt;a href="https://support.google.com/googleplay/android-developer/answer/9866151">Add preview assets&amp;hellip;&lt;/a>&lt;/em>).&lt;/p>
&lt;h5 id="test-data">Test data&lt;/h5>
&lt;p>When publishing for the first time in the Play Store, a reviewer from Google will try to check whether the permission requested by the app follows the Play Store rules. The CHT Android app has enabled by default location request permissions, and the workflow to request the permission follows the strict rules imposed by Google, but they won&amp;rsquo;t be aware that your &lt;em>flavored&lt;/em> app is based on the CHT Android, so you have to provide Google with instructions of how to test the app, specifically how to test the location request.&lt;/p>
&lt;p>To do so, give them instructions of how to login with the app (with a real username and password), and the basic steps to reach the location request, like open up a form.&lt;/p>
&lt;p>Once approved you can delete the &amp;ldquo;test&amp;rdquo; user, Google conduct the tests only the first time, or when a new permission request is added to the app.&lt;/p>
&lt;h3 id="2-new-brand">2. New Brand&lt;/h3>
&lt;p>Each branded app has an identifier (&lt;em>id&lt;/em>) that is used to identify and configure it in different parts of the source code and when invoking some commands. In the instructions below we will use as example the id &lt;strong>&lt;code>new_brand&lt;/code>&lt;/strong>.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Add &lt;code>productFlavors { &amp;lt;new_brand&amp;gt; { ... } }&lt;/code> in &lt;a href="https://github.com/medic/cht-android/blob/master/build.gradle">build.gradle&lt;/a>, e.g.:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-groovy" data-lang="groovy"> &lt;span style="color:#000">new_brand&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">dimension&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;brand&amp;#39;&lt;/span>
&lt;span style="color:#000">applicationId&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;org.medicmobile.webapp.mobile.new_brand&amp;#39;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Add icons, strings etc. in the &lt;code>src/&amp;lt;new_brand&amp;gt;&lt;/code> folder. It&amp;rsquo;s required to place there at least the &lt;code>src/new_brand/res/values/strings.xml&lt;/code> file with the name of the app and the URL of the CHT instance:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-xml" data-lang="xml">&lt;span style="color:#8f5902;font-style:italic">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34;?&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;resources&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;string&lt;/span> &lt;span style="color:#c4a000">name=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;app_name&amp;#34;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;gt;&lt;/span>New Brand&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/string&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;string&lt;/span> &lt;span style="color:#c4a000">name=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;app_host&amp;#34;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;gt;&lt;/span>new_brand.app.medicmobile.org&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/string&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/resources&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Enable automated builds of the APKs and AABs: add the &lt;code>new_brand&lt;/code> flavor in &lt;a href="https://github.com/medic/cht-android/blob/master/.github/workflows/publish.yml">.github/workflows/publish.yml&lt;/a>. The &lt;em>Unpack secrets &amp;hellip;&lt;/em> task unpacks and decrypts the secret file with the keystore (next section), The &lt;em>Assemble &amp;hellip;&lt;/em> task takes care of generating the &lt;code>.apk&lt;/code> files for sideloading, and the &lt;em>Bundle &amp;hellip;&lt;/em> task is responsible of generating the &lt;code>.aab&lt;/code> files for publishing in the Play Store (you can skip the last if you are not going to publish in the Play Store):&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yml" data-lang="yml">&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>Unpack&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>secrets&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>new_brand&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">env&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">ANDROID_SECRETS_KEY&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>${{&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>secrets.ANDROID_SECRETS_KEY_NEW_BRAND&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>}}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">ANDROID_SECRETS_IV&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>${{&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>secrets.ANDROID_SECRETS_IV_NEW_BRAND&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>}}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">run&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>make&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>org=new_brand&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>keydec&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>Assemble&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>new_brand&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">uses&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>maierj/fastlane-action@v1&lt;span style="color:#0000cf;font-weight:bold">.4.0&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">with&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">lane&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>build&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">options&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#39;{ &amp;#34;flavor&amp;#34;: &amp;#34;new_brand&amp;#34; }&amp;#39;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">env&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">ANDROID_KEYSTORE_PATH&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>new_brand.keystore&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">ANDROID_KEYSTORE_PASSWORD&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>${{&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>secrets.ANDROID_KEYSTORE_PASSWORD_NEW_BRAND&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>}}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">ANDROID_KEY_PASSWORD&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>${{&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>secrets.ANDROID_KEY_PASSWORD_NEW_BRAND&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>}}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>Bundle&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>new_brand&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">uses&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>maierj/fastlane-action@v1&lt;span style="color:#0000cf;font-weight:bold">.4.0&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">with&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">lane&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>bundle&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">options&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#39;{ &amp;#34;flavor&amp;#34;: &amp;#34;new_brand&amp;#34; }&amp;#39;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">env&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">ANDROID_KEYSTORE_PATH&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>new_brand.keystore&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">ANDROID_KEYSTORE_PASSWORD&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>${{&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>secrets.ANDROID_KEYSTORE_PASSWORD_NEW_BRAND&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>}}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">ANDROID_KEY_PASSWORD&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>${{&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>secrets.ANDROID_KEY_PASSWORD_NEW_BRAND&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>}}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The variables in the &lt;code>env&lt;/code> sections point to a keystore and the passwords to unlock the keystore that will be generated in the following steps, but it&amp;rsquo;s important to follow the name convention, in the example all the variables that are configured in Github Actions end with the suffix &lt;code>_NEW_BRAND&lt;/code>, these variables need to be added in the cht-android repo settings by a manager of Medic.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="3-generate-a-new-keystore">3. Generate a new keystore&lt;/h3>
&lt;p>Each branded app created needs its own keystore to sign the binaries for releasing.&lt;/p>
&lt;p>Since the &lt;code>.aab&lt;/code> files generated here are signed with the same key you generated, the files and key can be uploaded to the Play Store later and any file generated locally following the steps above will be compatible with any installation made from the Play Store.&lt;/p>
&lt;p>The keystore files are placed into a compressed and encrypted file in the &lt;a href="https://github.com/medic/cht-android/tree/master/secrets">secrets/&lt;/a> folder. In our case the file will be &lt;code>secrets/secrets-new_brand.tar.gz.enc&lt;/code>, and the content inside when the file is decrypted is:&lt;/p>
&lt;ul>
&lt;li>&lt;code>new_brand.keystore&lt;/code>: the Java keystore with a signature key inside that is always called &lt;code>medicmobile&lt;/code>. It&amp;rsquo;s used to sign the APKs and the bundles, and the one that Google will use to sign the optimized APKs that generates in the Play Store.&lt;/li>
&lt;li>&lt;code>new_brand_private_key.pepk&lt;/code>: a PEPK file is an encrypted file that contains inside the &lt;code>medicmobile&lt;/code> key from the keystore above, ready to be uploaded to the Play Store the first time the app is registered in the Play Console. The file is only used there, but kept in the compressed file as a backup.&lt;/li>
&lt;/ul>
&lt;p>Don&amp;rsquo;t worry to follow all the name conventions and how to generate these files, you can create all them in one step: the new keystore, the passwords and the PEPK file with &lt;code>make org=new_brand keygen&lt;/code>.&lt;/p>
&lt;p>Executing the command will check that you have the necessary tooling installed, and ask you the information about the certificate like the organization name, organization unit, etc. The command also takes care of picking random passwords that meet the security requirements, and then compresses the key files and finally encrypt the &lt;code>.tar.gz&lt;/code> file into the &lt;code>.enc&lt;/code> file. At the end of the execution, the script will also show the list of environment variables that you have to setup in CI (Github Actions) and locally in order to sign the apps with the new keystore. Below is an example of executing it to create the keystore for our &amp;ldquo;new_brand&amp;rdquo;:&lt;/p>
&lt;pre>&lt;code>$ make org=new_brand keygen
Verifying the following executables are in the $PATH: java keytool openssl ...
keytool -genkey -storepass dd8668... -v -keystore new_brand.keystore -alias medicmobile -keyalg RSA -keysize 2048 -validity 9125
What is your first and last name?
[Unknown]:
What is the name of your organizational unit?
[Unknown]: New Brand
What is the name of your organization?
[Unknown]: Medic Mobile
What is the name of your City or Locality?
[Unknown]: San Fran... ...
Is CN=Unknown, OU=New Brand, O=Medic Mobile, L=San Francisco, ST=CA, C=US correct?
[no]: y
Generating 2,048 bit RSA key pair and self-signed certificate (SHA256withRSA) with a validity of 9,125 days
for: CN=Unknown, OU=New Brand, O=Medic Mobile, L=San Francisco, ST=CA, C=US
[Storing new_brand.keystore]
... ...
####################################### Secrets! #######################################
# #
# The following environment variables needs to be added to the CI environment #
# (Github Actions), and to your local environment if you also want #
# to sign APK or AAB files locally: #
# #
export ANDROID_KEYSTORE_PASSWORD_NEW_BRAND=dd8668...
export ANDROID_KEY_PASSWORD_NEW_BRAND=dd8668...
export ANDROID_SECRETS_IV_NEW_BRAND=88d9c2dea7a9...
export ANDROID_SECRETS_KEY_NEW_BRAND=2824d02d2bc221f5844b8fe1d928211dcbbc...
export ANDROID_KEYSTORE_PATH_NEW_BRAND=new_brand.keystore
export ANDROID_KEY_ALIAS_NEW_BRAND=medicmobile
#
# The file secrets/secrets-new_brand.tar.gz.enc was created and has to be added to the git
# repository (don't worry, it's encrypted with some of the keys above). #
# NOTE: *keep the environment variables secret !!* #
# #
########################################### End of Secrets ###################################
&lt;/code>&lt;/pre>&lt;p>The &lt;em>Secrets!&lt;/em> section at the end is as important as the &lt;code>secrets/secrets-new_brand.tar.gz.enc&lt;/code> file generated, because as it says above, it needs to be configured in CI.&lt;/p>
&lt;p>Use a safe channel to send the environment variables to the manager in charge, like a password manager, and keep them locally at least for testing, storing in a script file that is safe in your computer.&lt;/p>
&lt;p>About the file &lt;code>secrets/secrets-new_brand.tar.gz.enc&lt;/code>, as the last paragraph in the console says: &lt;em>has to be added to the git repository (don&amp;rsquo;t worry, it&amp;rsquo;s encrypted with some of the keys above)&lt;/em>.&lt;/p>
&lt;p>If you want to start over because some of the parameters were wrong, just execute &lt;code>make org=new_brand keyrm-all&lt;/code> to clean all the files generated. Once committed the &lt;code>.enc&lt;/code> file, you can delete the uncompressed and unencrypted version with &lt;code>make org=new_brand keyrm&lt;/code>, it will delete the &lt;code>new_brand.keystore&lt;/code>, &lt;code>new_brand_private_key.pepk&lt;/code>, and the unencrypted &lt;code>.tar.gz&lt;/code> files, that are safer kept in the &lt;code>.tar.gz.enc&lt;/code> file.&lt;/p>
&lt;h3 id="4-test-locally-the-keystore">4. Test locally the keystore&lt;/h3>
&lt;p>&lt;strong>Want to check the keystore?&lt;/strong> here are a few things you must test before upload to the repo:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>To decrypt the content like CI does to sign the app, execute: &lt;code>make org=new_brand keydec&lt;/code>, it will decrypt and decompress the files removed in the step above. Remember that the environment variables printed in the console needs to be loaded in the CLI. Note that all the variables above end with the suffix &lt;code>_NEW_BRAND&lt;/code>, as the id of the app that we pass through the &lt;code>org&lt;/code> argument in lowercase, but if Make found the same variables defined without the prefix, they take precedence over the suffix ones.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Execute &lt;code>make org=new_brand keyprint&lt;/code> to see the certificate content, like the org name, the certificate fingerprints, etc.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Sign your app! try locally to build the app with the certificate. To create the .apk files run: &lt;code>make org=new_brand flavor=New_brand assemble&lt;/code>. The &amp;ldquo;release&amp;rdquo; files signed should be placed in &lt;code>build/outputs/apk/new_brand/release/&lt;/code>. To ensure the files were signed with the right signature execute &lt;code>make keyprint-apk&lt;/code>, it will check the certificate of the first apk file under the &lt;code>build/&lt;/code> folder:&lt;/p>
&lt;pre>&lt;code>$ make keyprint-apk
apksigner verify -v --print-certs build/outputs/apk/new_brand/release/cht-android-SNAPSHOT-new_brand-arm64-v8a-release.apk
... ...
Verified using v2 scheme (APK Signature Scheme v2): true
... ...
Signer #1 certificate DN: CN=Unknown, OU=New Brand, O=Medic Mobile, L=San Francisco, ST=CA, C=US
Signer #1 certificate SHA-256 digest: 7f072b...
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ol>
&lt;p>Also do the same for the bundle format: build and verify, despite the AAB are not useful for local development. In our example, execute first &lt;code>make org=new_brand flavor=New_brand bundle&lt;/code>, and then &lt;code>make keyprint-bundle&lt;/code> to see the signature of one of the &lt;code>.aab&lt;/code> files generated.&lt;/p>
&lt;p>Because the files generated here are signed with the same key that you are going to use in CI, and the files produced in CI will be uploaded to the Play Store later, any file generated locally following the steps above will be compatible with any installation made from the Play Store, means that if a user install the app from the Play Store, and then we want to replace the installation with an alpha version generated in CI or a local version generated in dev environment, it will work without requiring the user to uninstall the app and lost the data.&lt;/p>
&lt;h3 id="5-release-the-new-flavor">5. Release the new flavor&lt;/h3>
&lt;p>Once you have your pull request approved in the cht-android repo, it&amp;rsquo;s recommended to create an alpha version before merge it to master and do the final release.&lt;/p>
&lt;p>Checkout the &lt;a href="https://docs.communityhealthtoolkit.org/core/guides/android/releasing/#new-flavor-release">Release&lt;/a> page, where it&amp;rsquo;s explained the different stages and instructions for releasing. The last section &lt;em>&amp;ldquo;New flavor release&amp;rdquo;&lt;/em> has special instructions of how to release a new brand.&lt;/p>
&lt;h3 id="6-publish-the-app">6. Publish the app&lt;/h3>
&lt;p>The last step is to publish it in the Play Store, or whatever option best suit your needs. Checkout the &lt;a href="https://docs.communityhealthtoolkit.org/core/guides/android/publishing/">Publishing&lt;/a> page to see all the options available and instructions.&lt;/p></description></item><item><title>Core: Using NPM</title><link>https://docs.communityhealthtoolkit.org/core/guides/using-npm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/guides/using-npm/</guid><description>
&lt;h2 id="npm-orgs">npm Orgs&lt;/h2>
&lt;p>We use npm Orgs to organize our npm packages. It provides a centralized way
to manage a team&amp;rsquo;s published npm packages and permissions. Here are some
guidelines when using this service.&lt;/p>
&lt;p>See npm&amp;rsquo;s &lt;a href="https://docs.npmjs.com/orgs/">Orgs docs&lt;/a> for more information.&lt;/p>
&lt;p>Our organization is &lt;code>medic&lt;/code> or using npm&amp;rsquo;s notation, &lt;code>@medic&lt;/code>.&lt;/p>
&lt;p>We also created &lt;code>@medicmobile&lt;/code> but it&amp;rsquo;s not currently in use, it was created to
reserve the namespace.&lt;/p>
&lt;h3 id="adding-a-package">Adding a Package&lt;/h3>
&lt;p>When you publish an npm module on npmjs.com, add it to the developers team
under the &lt;code>@medic&lt;/code> org.&lt;/p>
&lt;p>This can be done using the web interface:&lt;/p>
&lt;ul>
&lt;li>Login to npmjs.com then Navigate to &lt;a href="https://www.npmjs.com/org/medic/team/developers">Medic Developer&amp;rsquo;s Team&lt;/a>
and add your package there.&lt;/li>
&lt;/ul>
&lt;p>Or command line:&lt;/p>
&lt;ul>
&lt;li>Change your directory to where the package&amp;rsquo;s &lt;code>package.json&lt;/code> lives, then run:&lt;/li>
&lt;/ul>
&lt;pre>&lt;code>npm access grant read-write medic:developers
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>Then &lt;code>npm access&lt;/code> should show the updated permissions for the team members.&lt;/li>
&lt;/ul>
&lt;pre>&lt;code>$ npm access ls-collaborators
{
&amp;quot;mandric&amp;quot;: &amp;quot;read-write&amp;quot;,
&amp;quot;estellecomment&amp;quot;: &amp;quot;read-write&amp;quot;,
&amp;quot;garethbowen&amp;quot;: &amp;quot;read-write&amp;quot;,
&amp;quot;scdf&amp;quot;: &amp;quot;read-write&amp;quot;,
&amp;quot;alxndrsn&amp;quot;: &amp;quot;read-write&amp;quot;,
}
&lt;/code>&lt;/pre>&lt;h3 id="using-an-org-scoped-package">Using an Org Scoped Package&lt;/h3>
&lt;p>A scope should be specified when a published package is a fork of an existing
package, but otherwise scope is not needed since there is no conflict with the
registry.&lt;/p>
&lt;p>For example if you fork &lt;code>moment&lt;/code> and you can&amp;rsquo;t get your changes merged upstream
and need to publish a new package then modify the package name (in
package.json) to specify a organizational scope, like &lt;code>@medic/moment&lt;/code> and publish it.&lt;/p>
&lt;p>For more info see &lt;a href="https://docs.npmjs.com/creating-and-publishing-an-org-scoped-package">Publishing an Org Scoped Package&lt;/a>.&lt;/p></description></item><item><title>Core: Developing on Windows</title><link>https://docs.communityhealthtoolkit.org/core/guides/using-windows/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/guides/using-windows/</guid><description>
&lt;p>We don&amp;rsquo;t actively support development on Windows, instead preferring MacOS or Linux.&lt;/p>
&lt;p>However, Microsoft has recently been stabilizing their &lt;a href="https://docs.microsoft.com/en-us/windows/wsl/about">Windows Subsystem for Linux&lt;/a>, which appears to work reasonably well for development.&lt;/p>
&lt;p>Installation instructions are mostly the same as they written in &lt;a href="https://github.com/medic/cht-core/blob/master/README.md">the README&lt;/a> with a couple of caveats as of time of writing (2019-07-25), noted below.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Both the Windows Subsystem for Linux and Medic&amp;rsquo;s support for developing in it is very much in beta. These are advanced instructions, expect some understanding of linux and may not always work. Be patient and raise bugs as you find them!
&lt;/div>
&lt;h2 id="installing-ubuntu-in-the-windows-subsystem-for-linux">Installing Ubuntu in the Windows Subsystem for Linux.&lt;/h2>
&lt;p>For the rest of this document we&amp;rsquo;re going to presume that you&amp;rsquo;re using Ubuntu (18.04) in WSL. Medic probably works on all distributions, but Ubuntu is likely the best supported.&lt;/p>
&lt;p>First, follow Microsoft&amp;rsquo;s &lt;a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10">instructions on enabling and installing linux&lt;/a>. At the end of this process you should have a linux terminal.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
For the rest of this tutorial &lt;strong>in linux&lt;/strong> means code executing or performing actions in the WSL, while &lt;strong>in Windows&lt;/strong> means code executing or performing actions in Windows natively.
&lt;/div>
&lt;h2 id="couchdb">CouchDB&lt;/h2>
&lt;p>As of writing CouchDB wouldn&amp;rsquo;t autostart (due to systemd not existing?), and wasn&amp;rsquo;t manually starting due to erlang errors.&lt;/p>
&lt;p>Luckily, there is a perfectly working CouchDB installation for Windows:&lt;/p>
&lt;ul>
&lt;li>Download from &lt;a href="https://couchdb.apache.org/#download">CouchDB&lt;/a> and install the Windows version. This will create a Windows service.&lt;/li>
&lt;li>Run it either by directly executing &lt;code>C:\CouchDB\bin\couchdb.cmd&lt;/code> or by starting the service&lt;/li>
&lt;/ul>
&lt;p>Then go to &lt;code>http://localhost:5984/_utils/#/setup&lt;/code> in Windows and do the single node setup. Once done head back to linux and confirm it works:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$: curl http://localhost:5984/
&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;couchdb&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;Welcome&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;version&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;2.3.1&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;git_sha&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;c298091a4&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;uuid&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;5f60350abaaa11c0131a5630e83ae979&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;features&amp;#34;&lt;/span>:&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;pluggable-storage-engines&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;scheduler&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;vendor&amp;#34;&lt;/span>:&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;name&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;The Apache Software Foundation&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">}}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="installing-npm">Installing NPM&lt;/h2>
&lt;p>Start your WSL instance (Ubuntu), not WSL as they take you to two different default directories.&lt;/p>
&lt;p>The default &lt;code>npm&lt;/code> in linux is really old and doesn&amp;rsquo;t have &lt;code>npm ci&lt;/code>, which we need.&lt;/p>
&lt;p>Instead use &lt;a href="https://github.com/nvm-sh/nvm">nvm&lt;/a> to install &lt;code>nvm install 11.3&lt;/code> .&lt;/p>
&lt;h2 id="checking-out-the-code">Checking out the code&lt;/h2>
&lt;p>We used git that&amp;rsquo;s preinstalled with Ubuntu to check out the code.&lt;/p>
&lt;p>You can checkout cht code inside WSL itself. You can checkout anywhere you have write access. We&amp;rsquo;ll checkout inside /home/username/medic directory.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$: mkdir ~/medic &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#204a87">cd&lt;/span> ~/medic
$: git clone https://github.com/medic/cht-core.git
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="setup-environment-variables">Setup Environment Variables&lt;/h2>
&lt;p>Using &lt;code>.bashrc&lt;/code> works as expected, and so is a good place to put exports:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># Medic stuff&lt;/span>
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">COUCH_URL&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>http://admin:pass@localhost:5984/medic
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">COUCH_NODE_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>couchdb@localhost
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="everything-else">Everything else&lt;/h2>
&lt;p>&lt;code>npm ci&lt;/code> should just work once you&amp;rsquo;ve installed a latest version of node via nvm as noted above.&lt;/p>
&lt;p>You won&amp;rsquo;t have grunt already installed, so install it by executing following command:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$: npm i -g grunt-cli
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Also install xstproc in your WSL:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$: sudo apt-get update
$: sudo apt-get install xsltproc
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now you can build the web app.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$: &lt;span style="color:#204a87">cd&lt;/span> ~/medic/cht-core/
$: npm ci
$: grunt
&lt;/code>&lt;/pre>&lt;/div>&lt;p>From this point, follow the setup guide from &lt;code>Enabling a secure CouchDB&lt;/code> section in &lt;a href="https://github.com/medic/cht-core/blob/master/DEVELOPMENT.md">Development Guide&lt;/a>.&lt;/p>
&lt;p>To get multiple linux terminals (so you can run &lt;code>grunt&lt;/code>, &lt;code>api&lt;/code> and &lt;code>sentinel&lt;/code> at the same time) either install and use something like Tmux, or if you click &lt;code>Ubuntu&lt;/code> in the Windows start menu again it will open up a new terminal in the same linux instance.&lt;/p>
&lt;p>Once you&amp;rsquo;re done with the default instructions and have api running, check if it works by going to http://localhost:5988 in Chrome or Firefox.&lt;/p>
&lt;h2 id="editing-code">Editing Code&lt;/h2>
&lt;p>If you want to make changes to your code or contribute to our community health toolkit, you can do so by editing code from your favorite editor. If you editor supports UNC path, you can access and edit files inside WSL from &lt;code>\\wsl$\Ubuntu\&amp;lt;cht-core-location&amp;gt;&lt;/code>. If you use Visual Studio Code, it&amp;rsquo;s even easier to edit your code. Just navigate to where you have checked out cht-core and type &lt;code>code .&lt;/code> This will download VS Code Server for Ubuntu and open the project in Visual Studio Code in windows.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$: &lt;span style="color:#204a87">cd&lt;/span> ~/medic/cht-core
$: code .
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="problems">Problems?&lt;/h2>
&lt;p>As none of our code developers use Windows as a development environment daily this solution may not be as stable as directly using MacOS or Linux. If you encounter issues please let a developer know&lt;/p></description></item><item><title>Core: 0.x release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/0.4.15-and-earlier/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/0.4.15-and-earlier/</guid><description>
&lt;h2 id="0415">0.4.15&lt;/h2>
&lt;p>&lt;em>March 2, 2017&lt;/em>&lt;/p>
&lt;ul>
&lt;li>Fixed potential race condition with medic-gateway. Issue: medic-projects/issues/1243&lt;/li>
&lt;li>Bumped libphonenumber to make phone number validation more up to date. Issue: medic-projects/issues/1005&lt;/li>
&lt;/ul>
&lt;h2 id="0414">0.4.14&lt;/h2>
&lt;p>&lt;em>December 16, 2016&lt;/em>&lt;/p>
&lt;ul>
&lt;li>Bug fix for medic-gateway sending scheduled messages. Issue: #2535&lt;/li>
&lt;/ul>
&lt;h2 id="0413">0.4.13&lt;/h2>
&lt;p>&lt;em>October 21, 2016&lt;/em>&lt;/p>
&lt;ul>
&lt;li>Option to set birthdate using days old instead of weeks. Issue: #2756&lt;/li>
&lt;li>The week/month is off by 2 in the Reporting Rates analytics dashboard. Issue: #2781&lt;/li>
&lt;li>Remove socket limit in medic-api. Issue: #2632&lt;/li>
&lt;/ul>
&lt;h2 id="0412">0.4.12&lt;/h2>
&lt;p>&lt;em>July 21, 2016&lt;/em>&lt;/p>
&lt;ul>
&lt;li>Fixed bug in reporting rates for weekly time unit. #2429&lt;/li>
&lt;li>Log warnings in sentinel when ID collisions happen. #1898&lt;/li>
&lt;li>Support integration with &lt;a href="https://github.com/medic/medic-gateway">medic-gateway&lt;/a> for sending and receiving SMS medic-api#69&lt;/li>
&lt;/ul>
&lt;h2 id="0411">0.4.11&lt;/h2>
&lt;p>&lt;em>February 4, 2016&lt;/em>&lt;/p>
&lt;ul>
&lt;li>Security fix for leaking auth info.&lt;/li>
&lt;/ul>
&lt;h2 id="0410">0.4.10&lt;/h2>
&lt;p>&lt;em>Nov 16, 2015&lt;/em>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Added support for Outgoing Deny List, a comma separated list of phone numbers
or strings to deny outgoing service to. #750&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fixed bug in records export. #1273&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fixed bugs in uniqueWithin validation. medic-sentinel#74&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Added link to Help page in main menu.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="049">0.4.9&lt;/h2>
&lt;p>&lt;em>Aug 26, 2015&lt;/em>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Fixed bug on node 0.12 in felix-couchdb. #1145&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Improved error handling when notifications (start/stop) configs are
misconfigured. #1144&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fixed bug in &lt;code>exists&lt;/code> validation where it fails on some unicode characters. #1147&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fixed Reporting Rates interface that was neglected and broken. #1030&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fixed bug in exporting data by date, it&amp;rsquo;s now inclusive. #1104&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="048">0.4.8&lt;/h2>
&lt;p>&lt;em>July 14, 2015&lt;/em>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Added SMS parser fixes from dev branch:&lt;/p>
&lt;ul>
&lt;li>parse string fields with exclamation marks&lt;/li>
&lt;li>compact textforms format handles quotes in quotes&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Fixed export bug when using lowercase form codes. Please re-upload your forms
so they are formatted correctly. #998&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fixed bug where exporting yields same result with or without date
filter. #1059, #1031&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="047">0.4.7&lt;/h2>
&lt;p>&lt;em>June 16, 2015&lt;/em>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Fixed ODK forms list bug when the list is empty. Issue #886&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fixed compact textforms parser bug with exclamation points. Issue #989&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fixed bug in compact textforms parser we ignored fields with uppercase
letters in the key of the form definition. Issue #991&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fixed bug when creating record with empty message. Issue #990&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Moved raw message to bottom of report body. Issue: #927&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="046">0.4.6&lt;/h2>
&lt;p>&lt;em>June 4, 2015&lt;/em>&lt;/p>
&lt;ul>
&lt;li>Improved boolean expression evaluation in registration configuration.&lt;/li>
&lt;/ul>
&lt;h2 id="045">0.4.5&lt;/h2>
&lt;p>&lt;em>May 28, 2015&lt;/em>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Fixed bug in schedules editor for LMP (last menstrual period) based
schedules. #973&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Initial support for messages, records and forms API. See
&lt;a href="https://github.com/medic/medic-api/blob/master/API_v1.md">https://github.com/medic/medic-api/blob/master/API_v1.md&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="044">0.4.4&lt;/h2>
&lt;p>&lt;em>May 21, 2015&lt;/em>&lt;/p>
&lt;ul>
&lt;li>Added support for a new messages parser we&amp;rsquo;re calling Javarosa prefixed with
the &lt;code>J1&lt;/code> format code.&lt;/li>
&lt;/ul>
&lt;h2 id="043">0.4.3&lt;/h2>
&lt;p>&lt;em>February 26, 2015&lt;/em>&lt;/p>
&lt;h3 id="features">Features&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Major UI enhancements #370&lt;/p>
&lt;ul>
&lt;li>Inbox Style with advanced search bar&lt;/li>
&lt;li>Admin Panels&lt;/li>
&lt;li>Mobile device support&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Configurable date format #577&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Built-in ANC Analytics #586&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Easy user feedback mechanism #19&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Added help and tour&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Refactored build process, added grunt, bower and jshint.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>No forms are included by default. You must upload your forms. As usual
configuration (settings and forms) persists through upgrades.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Added new translations&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Default auto-replies&lt;/p>
&lt;/li>
&lt;li>
&lt;p>There are now two ways to export stuff: 1) from the reports screen click on
export, or 2) on the Configuration &amp;gt; Export screen. The former is simplified
and has no way of changing facility, form, or file format. The latter is
functionally equivalent to 0.4.2.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="upgrade-notes">Upgrade Notes&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>CouchDB Lucene &amp;gt;= 1.0.2&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Gardener &amp;gt;= 1.1.0&lt;/p>
&lt;/li>
&lt;li>
&lt;p>New &lt;a href="https://github.com/medic/medic-os/blob/3aedf0622eb0669aee2e5bbfba95a42faf05b9da/platform/packages/medic-core/settings/medic-core/nginx/nginx.conf">Nginx configuration&lt;/a>, close or redirect port 5984, proxy all requests through medic-api.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="042">0.4.2&lt;/h2>
&lt;p>&lt;em>September 4, 2014&lt;/em>&lt;/p>
&lt;ul>
&lt;li>Fixed bug: When searching for a patient identifier using the free-text search feature, results were not returned properly. Index the field appropriately.&lt;/li>
&lt;/ul>
&lt;h2 id="041">0.4.1&lt;/h2>
&lt;p>&lt;em>July 31, 2014&lt;/em>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Minor UI clean up.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Allow hash symbol to separate form code and data in structured textform message.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Modified build to bundle npm dependencies with attached node modules.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="040">0.4.0&lt;/h2>
&lt;p>&lt;em>July 10, 2014&lt;/em>&lt;/p>
&lt;h3 id="new-features">New Features&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>User interface for common settings and translations #484&lt;/p>
&lt;/li>
&lt;li>
&lt;p>User interface to configure basic ANC messaging workflows #487&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Nodejs module for API calls and to handle audit transactions&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Better language support on messages throughout configuration. e.g. you can
define a reminder schedule using multiple languages and the right language
will be used based on the locale of the message. #486&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Added support to configure locales through settings screen #491&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Added support for custom forms and uploading JSON form definitions #283&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Supporting old/obsolete settings via migrations during restore #501&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Support minute setting for scheduled hours configuration&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Reduced files size of design doc by minifying javascript and combining files&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Added support for unique validations across multiple fields. #412&lt;/p>
&lt;/li>
&lt;li>
&lt;p>External IDs can be added to facilities on the facility page. #503&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Added &lt;code>columns&lt;/code> query parameter to allow callers to messages and data_records
exports to retrieve specific columns in a specific order. #503&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Added Patient ID field to default data record export&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Allow specifying of task columns in message export.&lt;/p>
&lt;p>To include the group column, include the parameter &lt;code>columns=[&amp;quot;task.group&amp;quot;]&lt;/code>
(and any other columns you need, eg: &lt;code>patient_id&lt;/code>). #432&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Allow range searches on number fields in lucene. #481&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="bug-fixes">Bug fixes&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Fixed bug stopping district admins from being able to delete documents. #509&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Corrected language Nepalese to Nepali&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fixed too many requests for app_settings #511&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fixed saving user password, was getting reset/wiped #509&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Render facilities controls on all facilities tabs. #338&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="deprecated-and-backwards-incompatible-changes">Deprecated and Backwards Incompatible changes&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>deprecated &lt;code>exclude_cols&lt;/code> parameter for export integrations. Migrate
applications to use the &lt;code>columns&lt;/code> parameter instead.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>No forms are included by default, you must upload your forms. As usual
configuration (settings and forms) persists through upgrades.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="0311">0.3.11&lt;/h2>
&lt;p>&lt;em>June 19, 2014&lt;/em>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Fixed bug where scheduled messages were out of order on Chrome #527&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fixed bug where app settings was ignored, and the app reverted to defaults. #524&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Added delivery form to generic ANC forms.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Modified behavior of patient reports when &lt;code>silence_for&lt;/code> option is empty we
clear the entire schedule instead of a group.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fixed notifications to add the configured response #508&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fixed bug and added support for multiple schedules in schedule silencing&lt;/p>
&lt;p>When &lt;code>silence_for&lt;/code> is specified we should only silence/clear one group, I
introduced a bug a few commits ago that would ignore the group and
silence/clear based on date. Use the &lt;code>silence_for&lt;/code> window to match and
clear the first group.&lt;/p>
&lt;p>Also added support for comma separate string on &lt;code>silence_type&lt;/code> option.
In the MCH case we have two schedules that can be generated depending on
the form submission/registration: ANC Reminders and ANC Reminders LMP.
Now both schedules can be cleared with a single ANCV settings entry.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="0310">0.3.10&lt;/h2>
&lt;p>&lt;em>June 12, 2014&lt;/em>&lt;/p>
&lt;ul>
&lt;li>updated intrahealth-senegal forms&lt;/li>
&lt;/ul>
&lt;h2 id="039">0.3.9&lt;/h2>
&lt;p>&lt;em>May 22, 2014&lt;/em>&lt;/p>
&lt;ul>
&lt;li>fixed a bug in settings parser, to conform to the latest app-settings
changes, otherwise configs never get triggered.&lt;/li>
&lt;/ul>
&lt;h2 id="038">0.3.8&lt;/h2>
&lt;p>&lt;em>May 22, 2014&lt;/em>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>fixed bug in messages export filters to include all data records,
unstructured messages were being ignored. #502&lt;/p>
&lt;/li>
&lt;li>
&lt;p>added support for app-settings kanso package.&lt;/p>
&lt;p>Saving settings in dashboard was too slow for use because entire ddoc was
being updated. Using app-settings API fixes that.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="037">0.3.7&lt;/h2>
&lt;p>&lt;em>May 13, 2014&lt;/em>&lt;/p>
&lt;ul>
&lt;li>Modified KEMRI form fields to be ordered the same as KEMR form.&lt;/li>
&lt;/ul>
&lt;h2 id="036">0.3.6&lt;/h2>
&lt;p>&lt;em>April 28, 2014&lt;/em>&lt;/p>
&lt;ul>
&lt;li>Fixed bug in updating duplicate scheduled reports #483&lt;/li>
&lt;/ul>
&lt;h2 id="035">0.3.5&lt;/h2>
&lt;p>&lt;em>April 16, 2014&lt;/em>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Major bug fix that was introduced in 0.3.3 where visit reports do not get processed.&lt;/p>
&lt;p>Fixed accept_patient_reports transition so it calls db for readonly actions
instead of audit.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Allow analytics role to download messages and forms. Issue: #477&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Updated user management to show role for analytics user. Issue: #478&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Initial version of forms for Miraclefeet India&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="034">0.3.4&lt;/h2>
&lt;p>&lt;em>April 14, 2014&lt;/em>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>translate strings on user mgmt facilities select list #474&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Change ordering of messages export format for better readability based on
when the state is triggered. #475&lt;/p>
&lt;p>From: Received, Sent, Pending, Scheduled Cleared, Muted
To: Received, Scheduled, Pending, Sent, Cleared, Muted&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="033">0.3.3&lt;/h2>
&lt;p>&lt;em>April 10, 2014&lt;/em>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Fixed spreadsheet keyboard navigation. #448&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Validate &amp;lsquo;Everyone at x&amp;rsquo; for at least one valid phone number. #333&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Audit support for data records and facility data #415&lt;/p>
&lt;p>Also includes support for export of audit data as XML or CSV file.&lt;/p>
&lt;p>Note: Only new records and record edits will have an audit log entry. So
this means your audit log will only contain changes to records after the
upgrade.&lt;/p>
&lt;p>Similarly browsing old revision will stop working for old records because
they lack audit log entries. If this is a major problem for you let us
know and we can add backwards compatible revision browsing in the next
release.&lt;/p>
&lt;p>This has been released as a standalone re-useable module for Node and
browser environments: &lt;a href="https://github.com/medic/couchdb-audit">https://github.com/medic/couchdb-audit&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Added support for compact version of TextForms format #428&lt;/p>
&lt;p>In compact Textforms fields are delimited by spaces and determined by order.
So no hashes or field keys are required like in classic TextForms format.
If your field value has spaces in it then it must be surrounded by quotes
unless it is the last field.&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;pre>&lt;code> REG 4165550000 John Smith
REG &amp;quot;John Smith&amp;quot; 4165550000
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Include state change timestamps and patient_id in messages export #453&lt;/p>
&lt;p>Old Columns:&lt;/p>
&lt;p>Record UUID, Reported Date, From, Clinic Contact Name, Clinic Name, Health
Center Contact Name, Health Center Name, District Hospital Name, Message
Type, Message State, Message Timestamp/Due, Message UUID, Sent By, To
Phone, Message Body&lt;/p>
&lt;p>New Columns:&lt;/p>
&lt;p>Record UUID, Patient ID, Reported Date, Reported From, Clinic Contact Name,
Clinic Name, Health Center Contact Name, Health Center Name, District
Hospital Name, Message Type, Message State, Received Timestamp, Sent
Timestamp, Pending Timestamp, Scheduled Timestamp, Cleared Timestamp, Muted
Timestamp, Message UUID, Sent By, To Phone, Message Body&lt;/p>
&lt;p>Note: These are the default column labels and they are configurable.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Disable facility select and show loading message until data is loaded. #452&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Updated font-awesome to 3.2.1 to get extra icons&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fixed Help button on the spreadsheet. #455&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fixed spreadsheet duplicate rendering when quickly switching tabs. #362 #450&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Added permissions checks to export lists functions. #456&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fixed bug where facility spreadsheet update records when field value is
unchanged. #457&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fixed bug where registrations was not using db-wide unique IDs. medic-sentinel#54&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fixed duplicate records on ID search #430&lt;/p>
&lt;/li>
&lt;li>
&lt;p>User Management UX refactor #385, #380, #462, #380, #379, #378, #377, #429&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fixed bug on facilities screen where delete functions would stack up and
inadvertantly delete a facility. #469&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="032">0.3.2&lt;/h2>
&lt;p>_March 11, 2014 _&lt;/p>
&lt;ul>
&lt;li>
&lt;p>fixed facilities spreadsheet bug #451 in Chrome&lt;/p>
&lt;/li>
&lt;li>
&lt;p>minor user interface tweaks on deletion of facilities modal&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="031">0.3.1&lt;/h2>
&lt;p>_March 3, 2014 _&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Fixed a bug where the facilities spreadsheet was holding focus so sending a message doesn&amp;rsquo;t work. #440&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Added Bulk Messaging support, so you can send messages to multiple recipients. #333&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fixed bug to include incoming messages in messages export. #436&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fixed bug where it is possible to send a message twice by double clicking the submit button&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fixed bug where we failed to retrieve settings on port 80 #438&lt;/p>
&lt;p>This was experienced when proxying to couchdb because http proxying will
decode the URL including docid of the show parameter, so the show
returns 404. Solution is to always double URL encode if the show docid
contains special characters.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Confirm with user before deleting facility so they can&amp;rsquo;t be deleted by accident. #371&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Added unique Patient ID validation support. #411 medic-sentinel/pull/50&lt;/p>
&lt;p>Use unique(&amp;lsquo;patient_id&amp;rsquo;) in your registration validation rules to validate
new form submissions that are setting the patient ID values via forms.&lt;/p>
&lt;p>Validation rules may consist of Pupil.js rules and custom rules. These
cannot be combined as part of the same rule.&lt;/p>
&lt;p>Not OK:&lt;/p>
&lt;pre>&lt;code> rule: &amp;quot;regex('[0-9]{5}') &amp;amp;&amp;amp; unique('patient_id')&amp;quot;
&lt;/code>&lt;/pre>
&lt;p>OK:&lt;/p>
&lt;pre>&lt;code> rule: &amp;quot;regex('[0-9]{5}') &amp;amp;&amp;amp; max(11111)&amp;quot;
&lt;/code>&lt;/pre>
&lt;p>If for example you want to validate that patient_id is 5 numbers and it
is unique (or some other custom validation) you need to define two
validation configs/separate rules in your settings. Example validation
settings:&lt;/p>
&lt;pre>&lt;code>[
{
property: &amp;quot;patient_id&amp;quot;,
rule: &amp;quot;regex('[0-9]{5}')&amp;quot;,
message: &amp;quot;Invalid: Patient ID {{patient_id}} must be 5 numbers.&amp;quot;
},
{
property: &amp;quot;patient_id&amp;quot;,
rule: &amp;quot;unique('patient_id')&amp;quot;,
message: &amp;quot;Invalid: Patient ID {{patient_id}} must be unique.&amp;quot;
}
]
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>Added Conditional Alerts feature. #437 medic-sentinel/issue/52&lt;/p>
&lt;p>Configure the Alerts section of the App Settings to send a message when an
incoming message meets the configured condition.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="030-beta39-bugfix">0.3.0-beta.39 (bugfix)&lt;/h2>
&lt;p>&lt;em>February 25, 2014&lt;/em>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Fixed textforms whitespace parser bug when using form list field types. #431&lt;/p>
&lt;p>Textforms parser wasn&amp;rsquo;t trimming space correctly on a field value, so if
you had a list defined using those values they would never get matched.&lt;/p>
&lt;p>Textforms was only matching numeric values of length 2 or more, so if
you submitted a one digit number you would not get a numeric match.&lt;/p>
&lt;p>Also if the value didn&amp;rsquo;t match numeric or a date format then the
whitespace was not being trimmed correctly.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="030-beta38-debug">0.3.0-beta.38 (debug)&lt;/h2>
&lt;p>&lt;em>February 13, 2014&lt;/em>&lt;/p>
&lt;ul>
&lt;li>added logging calls to help debug and identify whitespace parsing bug #431&lt;/li>
&lt;/ul>
&lt;h2 id="030-beta37">0.3.0-beta.37&lt;/h2>
&lt;p>&lt;em>January 21, 2014&lt;/em>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Fixes to user roles (@marc)&lt;/p>
&lt;p>Matches Transitional V2 in
&lt;a href="https://docs.google.com/a/medicmobile.org/spreadsheet/ccc?key=0Ao9l2yegOFn7dEJRTEw1Z3RmZm0wTEo4Nk92NjVocnc">https://docs.google.com/a/medicmobile.org/spreadsheet/ccc?key=0Ao9l2yegOFn7dEJRTEw1Z3RmZm0wTEo4Nk92NjVocnc&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Added support for Kemri Muvuku Form (KEMR)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Added exclude_cols query param to csv/xml form exports. #421&lt;/p>
&lt;p>For example inlude &lt;code>exclude_cols=1,5&lt;/code> in your query parameters to
remove the first and fifth column of an export.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>bugfix on export query params and UX adjustments&lt;/p>
&lt;p>Made English CSV export default. SpreadsheetML can be a little buggy
because we&amp;rsquo;re using HTML entities (not valid XML).&lt;/p>
&lt;p>Disabled default month value in exports screen since record count does
not reflect the export row totals displayed. It&amp;rsquo;s probably better UX to
have the user set the date knowing they are doing something than having a
default that doesn&amp;rsquo;t make sense with the totals on the screen and having
to guess why that is.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Added timezone support to exports #394&lt;/p>
&lt;p>Render page contents first and then load the fields data since that was
holding up the page load.&lt;/p>
&lt;p>Indexing _id as &lt;code>uuid&lt;/code> in field index so you can search for
&lt;code>uuid:10366976d62ab9a31257b2fad16113ee&lt;/code> now and it shows up in avaialble
fields index. For some reason I think underscore prefixed fields do
show up in fields listing on Lucene for some reason.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fixed poor loading on search help #422&lt;/p>
&lt;/li>
&lt;/ul>
&lt;ul>
&lt;li>
&lt;p>added timezone support to exports #394&lt;/p>
&lt;p>Now dates in the exported spreadsheet should include your locale timezone. Controlled by the &lt;code>tz&lt;/code> query param.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;ul>
&lt;li>
&lt;p>Added new Messages Export and removed message data from Forms Export&lt;/p>
&lt;p>New http endpoint &lt;code>/export/messages&lt;/code> to get messages export. Records are
always latest first (reverse cronological). Message export will include
all records (valid and invalid), the point of the messages export is to
give you access to all your message data, including outgoing error
messages.&lt;/p>
&lt;p>&lt;strong>Warning&lt;/strong>: the following URLs are no longer supported:&lt;/p>
&lt;pre>&lt;code>/{form}/data_records.csv
/{form}/data_records.xml
/form_data_records.xml
/form_data_records.csv
&lt;/code>&lt;/pre>&lt;p>Use &lt;code>/export/forms/{form}&lt;/code> path instead.&lt;/p>
&lt;p>&lt;strong>Warning&lt;/strong>: Existing form data export format has changed. Included UUID of
the related record so data among the two spreadsheets (messages and form
data) can be correlated if need be. Also removed the message
data/columns from form data export. A record can be found via UUID by
using &lt;code>uuid:&amp;lt;the uuid string&amp;gt;&lt;/code> in the search box.&lt;/p>
&lt;p>Changed default column name of &amp;ldquo;From&amp;rdquo; to &amp;ldquo;Reported From&amp;rdquo;. Note if this
shouldn&amp;rsquo;t change if you have an existing install since it is generated
based on your translation settings.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;pre>&lt;code> The NEW columns (added UUID column and removed message data):
Record UUID
Reported Date
Reported From
Clinic Contact Name
Clinic Name
Health Center Contact Name
Health Center Name
District Hospital Name
[columns for form fields data depending on form]
The OLD columns:
Reported Date
From
Clinic Contact Name
Clinic Name
Health Center Contact Name
Health Center Name
District Hospital Name
[columns for form fields data depending on form]
Incoming Message
Responses
Outgoing Messages
Scheduled Tasks
&lt;/code>&lt;/pre>&lt;h2 id="0122">0.1.22&lt;/h2>
&lt;ul>
&lt;li>Major improvements in scheduled reminder support in Sentinel.&lt;/li>
&lt;li>Support for Twilio in Sentinel.&lt;/li>
&lt;li>Minor refactor of records screen:
&lt;ul>
&lt;li>added counters to show sent/scheduled messages in records rows.&lt;/li>
&lt;li>displaying scheduled tasks in records expanded view&lt;/li>
&lt;li>added RC Code column&lt;/li>
&lt;li>combined facility data into one column&lt;/li>
&lt;li>improved contact info column, made more prominent by moving clinic contact info and phone together and into second column.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Removed auto-reply messages from form submission that use sentinel/scheduler so only one response is sent on a new form submission.&lt;/li>
&lt;li>Fixed bug: Only update records of type &amp;lsquo;data_record&amp;rsquo; on records screen&lt;/li>
&lt;li>Preserve css (expando visibility) when row is replaced in records.&lt;/li>
&lt;li>Use serial_number instead of patient_id for ohw_registration.&lt;/li>
&lt;li>Fixed bug in textforms parser where 01234 was parsed as 1234 and added test.&lt;/li>
&lt;li>Fixed unit tests for ONOT and ORPT form updates.&lt;/li>
&lt;li>Fixed/Added tests for ohw emergency report (OEMR) responses.&lt;/li>
&lt;li>Added PNC test for ohw emergency report (OEMR).&lt;/li>
&lt;li>Fixed ohw notifications transition to set correct muted value.&lt;/li>
&lt;li>Fixed OHW birth report (OBIR) logic and added tests.&lt;/li>
&lt;/ul>
&lt;h2 id="0121">0.1.21&lt;/h2>
&lt;ul>
&lt;li>Fixed bug: regression from error handling refactor where assigning a record a new facility did not clear &lt;code>facility_not_found&lt;/code> errors.&lt;/li>
&lt;li>Fixed bug: months based reporting valid value was not being passed through view.&lt;/li>
&lt;li>Fixed regression: returning &lt;code>form_invalid&lt;/code> response when &lt;code>form_invalid_custom&lt;/code> error is found.&lt;/li>
&lt;li>Fixed NYAA form custom validation.&lt;/li>
&lt;li>Added ability to do bulk deletes and facility updates.&lt;/li>
&lt;li>Fixed bug where record is created as valid if callback request is not completed due to disconnection or phone running out of battery. Records are initialized as invalid.&lt;/li>
&lt;/ul>
&lt;h2 id="0120">0.1.20&lt;/h2>
&lt;ul>
&lt;li>HTTP callbacks refactor, now records are created on first HTTP POST.&lt;/li>
&lt;li>Tests refactor, replaced some redundant/large tests with more specific ones.&lt;/li>
&lt;li>Error handling refactor, now clients should not get system messages.&lt;/li>
&lt;li>Updated JSON forms to include Carlos Slim test forms.&lt;/li>
&lt;li>SMSSync 2.0 support: parsing of new timestamp format.&lt;/li>
&lt;li>Bundled SMSSync 2.0.1-hcb (&lt;a href="https://github.com/mandric/SMSSync/wiki/HTTP-Callbacks">http-callbacks&lt;/a>) build.&lt;/li>
&lt;li>&amp;lsquo;null&amp;rsquo; form key in filters to find records without a form definition.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Upgrade Notes&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>If you upgrade the gateway without upgrading Kujua the timestamps from the messages will not get parsed. So messages will get a timestamp assigned to them by Kujua, which reflect the time the record was created in Kujua rather than the actual time the report/message was sent.&lt;/li>
&lt;/ul>
&lt;h2 id="0119">0.1.19&lt;/h2>
&lt;ul>
&lt;li>Fixed wifi lock bug in SMSSync #54.&lt;/li>
&lt;li>Updated docs with new SMSSync build instructions&lt;/li>
&lt;li>Fixed labels names and stat placement on Health Center and District reporting screens.&lt;/li>
&lt;li>Added help panel to spreadsheet to explain key bindings.&lt;/li>
&lt;li>Form revisions for OHW and CDC Nepal&lt;/li>
&lt;/ul>
&lt;h2 id="0118">0.1.18&lt;/h2>
&lt;ul>
&lt;li>Fixed bug in records screen where 1 row was not getting rendered until a scroll.&lt;/li>
&lt;li>Refactored messaging, supporting &lt;code>messages_task&lt;/code> in json forms.&lt;/li>
&lt;li>Fixed bug where non-districts showing up in districts filter.&lt;/li>
&lt;li>Keep Kujua Reporting files in-tact so it can be activated with config.&lt;/li>
&lt;li>Added validations, messages and ref id labels to forms on gateway testing doc.&lt;/li>
&lt;li>Added autocomplete=off to error missing phone form in records screen.&lt;/li>
&lt;li>Added css for pointer hover to icon-exclamation-sign.&lt;/li>
&lt;li>Renamed &lt;code>use-sentinel&lt;/code> to &lt;code>use_sentinel&lt;/code> to be consistent in JSON forms.&lt;/li>
&lt;li>Added basic unstructured message support.&lt;/li>
&lt;li>Fixed bug in records during edit row function where reported date get munged.&lt;/li>
&lt;li>Added spreadsheet feature so children get updated when a parent facility is changed.&lt;/li>
&lt;li>Fixed bug where using wrong label on main analytics screen.&lt;/li>
&lt;li>Always create records, even on empty or unstructured messages.&lt;/li>
&lt;li>SMS response messaging refactor, added response messages to gateway testing doc.&lt;/li>
&lt;li>Fixed hard coded URL paths in reporting tests.&lt;/li>
&lt;/ul>
&lt;h2 id="0117">0.1.17&lt;/h2>
&lt;ul>
&lt;li>Renamed &lt;code>reference_field&lt;/code> property on forms to &lt;code>facility_reference&lt;/code>.&lt;/li>
&lt;li>Allow phone number to match on any facility type not just clinics.&lt;/li>
&lt;/ul>
&lt;h2 id="0116">0.1.16&lt;/h2>
&lt;ul>
&lt;li>Tell user to login on 403 template.&lt;/li>
&lt;li>Added record detail to analytics screen expand div.&lt;/li>
&lt;li>Added configuration entries for reporting rates/analytics.&lt;/li>
&lt;li>Made labels more configurable.&lt;/li>
&lt;li>Added Kujua Sentinel support for reminders and alerts.&lt;/li>
&lt;li>Updated spreadsheet columns to use config for labels.&lt;/li>
&lt;li>Added support for form_invalid_custom error codes.&lt;/li>
&lt;li>Introduced &lt;code>reference_field&lt;/code> on forms.&lt;/li>
&lt;li>Fixed kujua reporting views to better handle undefined clinic object in facility data.&lt;/li>
&lt;li>Make it clear in HC reporting screen that contact name/phone is undefined.&lt;/li>
&lt;li>Use &lt;code>__dirname&lt;/code> in sentinel so it can be launched from any directory.&lt;/li>
&lt;li>Added page for reminder logs.&lt;/li>
&lt;li>Fixed district filtering support.&lt;/li>
&lt;li>Added lockRows option to spreadsheet.&lt;/li>
&lt;li>Fixed bug in XML spreadsheet output where true boolean value shows as 0.&lt;/li>
&lt;li>Added support in sentinel to update children when a facility is edited.&lt;/li>
&lt;li>Fixed bug on delete and editRow modal window.&lt;/li>
&lt;li>Hide all nav items except docs when logged out.&lt;/li>
&lt;li>Removed console references and added JSON.stringify to logger call.&lt;/li>
&lt;/ul>
&lt;h2 id="0115">0.1.15&lt;/h2>
&lt;ul>
&lt;li>Saving responses to record and displaying in records screen.&lt;/li>
&lt;li>Added timezone offset to reported date in exports and data records screen.&lt;/li>
&lt;li>Added datepicker to filter exports by date.&lt;/li>
&lt;li>Added support for custom form validation functions&lt;/li>
&lt;li>Show better error message for other codes like missing_fields&lt;/li>
&lt;li>Fixed buttons in data records screen&lt;/li>
&lt;li>Added Kujua Reporting package for easy switching of analytics features&lt;/li>
&lt;li>Improved test coverage for missing fields, cleaned/fixed up tests.&lt;/li>
&lt;li>Fixed form parsing for fields defined as sub-objects and boolean parsing.&lt;/li>
&lt;li>Added cases for sms responses when form is undefined&lt;/li>
&lt;li>Display tooltip on input element focus in spreadsheet&lt;/li>
&lt;li>Added delete on facilities spreadsheet&lt;/li>
&lt;li>Make en/xls default export format&lt;/li>
&lt;li>Custom labels via config.js configuration doc&lt;/li>
&lt;li>Support for records to key on any facility&lt;/li>
&lt;li>Nepalese responses&lt;/li>
&lt;li>VPD field updates&lt;/li>
&lt;li>added additional form definitions&lt;/li>
&lt;/ul>
&lt;h2 id="010-pre4">0.1.0-pre.4&lt;/h2>
&lt;ul>
&lt;li>Parsing refactor to allow for better unstructured and textforms support, #106, #79&lt;/li>
&lt;li>Add validation to spreadsheet with first cut of phone validation. fixes #104&lt;/li>
&lt;li>Direct support for json-form definitions #76&lt;/li>
&lt;li>Added textforms support for tiny labels in form definition&lt;/li>
&lt;li>Generating example messages automatically in Gateway Testing doc&lt;/li>
&lt;li>Fixed textforms parser for Couchbase on OSX #46&lt;/li>
&lt;li>Using complete field keys instead of tiny labels in textforms data record creation #79&lt;/li>
&lt;li>Better generic localized message handling #79&lt;/li>
&lt;li>Added delete feature to spreadsheet rows #97&lt;/li>
&lt;li>Updated install docs to include require_valid_user steps&lt;/li>
&lt;li>Various spreadsheet fixes #103, #98&lt;/li>
&lt;li>Better localized string support in form definitions&lt;/li>
&lt;li>Include national office data to districts on save&lt;/li>
&lt;/ul>
&lt;h2 id="010-pre3">0.1.0-pre.3&lt;/h2>
&lt;ul>
&lt;li>Added Quick Install Doc&lt;/li>
&lt;li>Renamed kujua-export to kujua-base #88&lt;/li>
&lt;li>Added dropdown health centers and districts to spreadsheet #99, #66&lt;/li>
&lt;li>Various facilities spreadsheet bug fixes #92, #91, #94&lt;/li>
&lt;li>Added CouchDB security steps to intall doc #88, #66&lt;/li>
&lt;li>Fixed authorization passthrough for tasks pending #87&lt;/li>
&lt;li>Various data records screen fixes #84, #83, #56&lt;/li>
&lt;li>Updated gateway/SMSSync binary and added S3 link to install docs&lt;/li>
&lt;li>Removed Export branding&lt;/li>
&lt;li>Started on functional tests using zombie.js and vows&lt;/li>
&lt;li>Added health centers and districts spreadsheet&lt;/li>
&lt;li>Added facilties section and spreadsheet editor #63&lt;/li>
&lt;li>Assert forms that pass validation gets saved #78, #75, #46&lt;/li>
&lt;li>Fixed bug where form submission fails if it has extra fields #75&lt;/li>
&lt;li>Fixed 24-hour time display bug&lt;/li>
&lt;li>Added close button to login window #70&lt;/li>
&lt;li>Fixed bug with scroll listener binding to other pages #69&lt;/li>
&lt;/ul>
&lt;h2 id="010-pre2">0.1.0-pre.2&lt;/h2>
&lt;ul>
&lt;li>Better textforms support including validation #46&lt;/li>
&lt;li>Added optional required field to form defs, all field definitions are required by default.&lt;/li>
&lt;li>Close dropdown menus when clicking anywhere on the site #53&lt;/li>
&lt;li>Stream export data instead of collecting it in memory #57&lt;/li>
&lt;li>Added validation step to all new form submissions #73&lt;/li>
&lt;li>Added records filtering by form #56&lt;/li>
&lt;li>Moved data records code to module #69&lt;/li>
&lt;/ul>
&lt;h2 id="010-pre1">0.1.0-pre.1&lt;/h2>
&lt;ul>
&lt;li>added facility columns to export formats #54&lt;/li>
&lt;li>added fr translations for facility names. #54&lt;/li>
&lt;li>The server will not send a response unless a form is recognized.&lt;/li>
&lt;li>Filtering on Districts support&lt;/li>
&lt;li>Added Records section&lt;/li>
&lt;li>Fixed reported date on re-imports, so the dates are preserved based on sent timestamp in sms message.&lt;/li>
&lt;li>Added infinite scroll for viewing records on one page instead of paging.&lt;/li>
&lt;li>Marking empty fields with question marks.&lt;/li>
&lt;li>Marking errors on records that have referral tasks with no recipient defined.&lt;/li>
&lt;li>Real-time updates via changes feed&lt;/li>
&lt;/ul></description></item><item><title>Core: 2.10.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.10.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.10.0/</guid><description>
&lt;h2 id="features">Features&lt;/h2>
&lt;ul>
&lt;li>Use reference to translation keys in app_settings. Issue: #3127&lt;/li>
&lt;li>Add date of birth to person created by SMS. Issue: #3100&lt;/li>
&lt;li>Configure the max number of SMS in multipart SMS. Issue: #3095&lt;/li>
&lt;li>Load messages script fails to use https. Issue: #3081&lt;/li>
&lt;li>Cannot access all fields for contact in select2. Issue: #3069&lt;/li>
&lt;li>Configurable contact summary cards. Issue: #3037&lt;/li>
&lt;li>Display additional information in contact profile. Issue: #2914&lt;/li>
&lt;li>Support additional context for hiding/showing actions. Issue: #2913&lt;/li>
&lt;li>Update Tour. Issue: #2212&lt;/li>
&lt;/ul>
&lt;h2 id="bug-fixes">Bug fixes&lt;/h2>
&lt;ul>
&lt;li>Targets aren&amp;rsquo;t updated when no longer relevant. Issue: #3207&lt;/li>
&lt;li>Task issues for restricted user when a report is deleted on the server. Issue: #3189&lt;/li>
&lt;li>When navigating to the targets tab, I see a flash of the &amp;ldquo;no analytics modules configured&amp;rdquo; message. Issue: #3177&lt;/li>
&lt;li>Update reports when loading the tab. Issue: #3178&lt;/li>
&lt;li>Error after submitting form. Issue: #3157&lt;/li>
&lt;li>Deleted message persists until refresh. Issue: #3003&lt;/li>
&lt;li>Single delete and bulk delete does not immediately remove items from LHS in Reports tab. Issue: #3001&lt;/li>
&lt;li>Tasks list says &amp;ldquo;no tasks found&amp;rdquo; before it&amp;rsquo;s loaded. Issue: #1935&lt;/li>
&lt;li>Labels not translated for generated report fields. Issue: #3154&lt;/li>
&lt;li>Getting 502s after submitting task; Tasks not cleared until refresh. Issue: #3111&lt;/li>
&lt;li>Do not know if patient ID is valid when processing Registrations/Report Actions. Issue: #3082&lt;/li>
&lt;li>Patient contact creation should happen if a patient contact doesn&amp;rsquo;t already exist. Issue: #3115&lt;/li>
&lt;li>Task schedules created using the &lt;code>reported_date&lt;/code> of a report do not show/hide at the expected time. Issue: #3097&lt;/li>
&lt;li>Patients reports accepted even if no person has the &lt;code>patient_id&lt;/code>. Issue: #3075&lt;/li>
&lt;li>Registrations that clear previous registrations also clear themselves. Issue: #3074&lt;/li>
&lt;li>Ensure useful commands is on medic-os $PATH by default. Issue: #2750&lt;/li>
&lt;li>Family Members section header shows on person&amp;rsquo;s profile. Issue: #3108&lt;/li>
&lt;li>Uncaught exception triggers 500 response for subsequent requests. Issue: #3099&lt;/li>
&lt;li>Broken links in app settings. Issue: #3088&lt;/li>
&lt;li>Edit function not working for reports sent by unknown number. Issue: #3087&lt;/li>
&lt;li>SMS reports do not show name in summary. Issue: #3084&lt;/li>
&lt;li>Auto replies and Scheduled SMS are truncated to fit in single SMS. Issue: #3083&lt;/li>
&lt;li>Bubble task count not showing on browser refresh. Issue: #3028&lt;/li>
&lt;li>Scheduled messages not showing accurate date. Issue: #3012&lt;/li>
&lt;li>SMS API sets messages to &lt;code>scheduled&lt;/code> on POST. Issue: #3011&lt;/li>
&lt;li>Scheduled messages not being sent. Issue: #3010&lt;/li>
&lt;li>JavaRosa Parser should give a better error message when form definition on the web app is mismatched with the submitted message using medic collect. Issue: #2638&lt;/li>
&lt;li>Contact &lt;code>person&lt;/code>s don&amp;rsquo;t show up in their places. Issue: #2385&lt;/li>
&lt;li>&lt;code>setup_complete&lt;/code> is set too fast, so setup wizard is likely to be skipped. Issue: #2376&lt;/li>
&lt;li>Submitting a family survey doesn&amp;rsquo;t clear the task. Issue: #2265&lt;/li>
&lt;li>Ages of children showing up strangely. Issue: #2191&lt;/li>
&lt;li>Forms and icons fail to replicate on slow connections. Issue: #2113&lt;/li>
&lt;/ul>
&lt;h2 id="uiux-improvements">UI/UX improvements&lt;/h2>
&lt;ul>
&lt;li>Clickable portion of action is smaller than item. Issue: #3104&lt;/li>
&lt;li>&amp;ldquo;Targets&amp;rdquo; tab blank for admin users. Issue: #3029&lt;/li>
&lt;li>Action button items get lost in RHS. Issue: #3005&lt;/li>
&lt;li>Action button should always be left-most button in FAB. Issue: #3004&lt;/li>
&lt;li>&amp;ldquo;Up&amp;rdquo; button at bottom of place/person pages. Issue: #2894&lt;/li>
&lt;li>Status icon for &lt;code>delivered&lt;/code> is orange instead of green. Issue: #2752&lt;/li>
&lt;li>Display format for phone numbers. Issue: #1930&lt;/li>
&lt;/ul>
&lt;h2 id="performance-improvements">Performance improvements&lt;/h2>
&lt;ul>
&lt;li>medic-api migration to remove couchmark. Issue: #3068&lt;/li>
&lt;li>Extract XML forms into attachments. Issue: #3009&lt;/li>
&lt;/ul></description></item><item><title>Core: 2.10.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.10.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.10.1/</guid><description>
&lt;h2 id="bug-fixes">Bug fixes&lt;/h2>
&lt;ul>
&lt;li>Sending a message from the Messages tab creates a message with uuid equal to database URL. Issue: #3242&lt;/li>
&lt;/ul></description></item><item><title>Core: 2.10.2 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.10.2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.10.2/</guid><description>
&lt;h2 id="bug-fixes">Bug fixes&lt;/h2>
&lt;ul>
&lt;li>Sentinel somehow infinitely loops and continually writes to its metadata file. Issue: #3275&lt;/li>
&lt;li>API crashes after &lt;code>/medic/_bulk_docs&lt;/code> gets called. Issue: #3268&lt;/li>
&lt;/ul></description></item><item><title>Core: 2.10.3 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.10.3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.10.3/</guid><description>
&lt;h2 id="bug-fixes">Bug fixes&lt;/h2>
&lt;ul>
&lt;li>Unicode support for storing enketo xml. Issue: #3308&lt;/li>
&lt;li>Support negative values in xform fields better. Issue: medic/medic-projects#1624&lt;/li>
&lt;li>Trigger enketo calc updates when option names are changed. Issue: #3281&lt;/li>
&lt;li>New Household button missing. Issue: #3132&lt;/li>
&lt;li>Change report form language without requiring refresh. Issue: #3174&lt;/li>
&lt;li>Corrupted translation strings. Issue: #3305&lt;/li>
&lt;/ul>
&lt;h2 id="uiux-improvements">UI/UX improvements&lt;/h2>
&lt;ul>
&lt;li>Show report subject name on patient page. Issue: #3309&lt;/li>
&lt;li>Translate task schedule group titles. Issue: #3283&lt;/li>
&lt;li>Add additional supported moment locales. Issue: #3282&lt;/li>
&lt;li>Translate contact forms. Issue: #3323&lt;/li>
&lt;/ul></description></item><item><title>Core: 2.11.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.11.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.11.0/</guid><description>
&lt;h2 id="migration-notes">Migration notes&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/3230">#3230&lt;/a> changes patient ID generation so it automatically increases the length as needed, up to 13 digits. If you are validating incoming patient_ids in Sentinel, be sure to remove or correct any length restrictions, e.g. &lt;code>^[0-9]{5}$&lt;/code> would become &lt;code>^[0-9]{5,13}$&lt;/code>.&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/3166">#3166&lt;/a> adds a new transition that adds patient_ids to every created person: &lt;code>generate_patient_id_on_people&lt;/code>. Enable this transition if you want to send SMS about patients that may be created through the webapp.&lt;/li>
&lt;/ul>
&lt;h2 id="features">Features&lt;/h2>
&lt;ul>
&lt;li>Drop id_format app setting in favour of auto-lengthening ids. Issue: #3230&lt;/li>
&lt;li>Support for Nepali number characters. Issue: #3192&lt;/li>
&lt;li>Show XForm in User&amp;rsquo;s language. Issue: #3174&lt;/li>
&lt;li>Sentinel needs to support these patient_id use cases. Issue: #3166&lt;/li>
&lt;li>Enable users to export, even if they do not have permission to configure. Issue: #3113&lt;/li>
&lt;li>Support &lt;code>required_message&lt;/code> and &lt;code>required_message&lt;/code> translations in Enketo. Issue: #3056&lt;/li>
&lt;/ul>
&lt;h2 id="bug-fixes">Bug fixes&lt;/h2>
&lt;ul>
&lt;li>namespace-form-fields migration causing Express toString fail. Issue: #3371&lt;/li>
&lt;li>Cannot use Collect with username/password fields. Issue: #3118&lt;/li>
&lt;li>No permissions available for configuration on first run. Issue: #3251&lt;/li>
&lt;li>Fix outdated npm shrinkwrap entry for enketo-core. Issue: #3352&lt;/li>
&lt;li>Set user-agent header in Medic Collect. Issue: #3334&lt;/li>
&lt;li>Buttons in LHS FAB disappear. Issue: #3321&lt;/li>
&lt;li>Analytics tab Hindi text is not aligning properly. Issue: #3297&lt;/li>
&lt;li>Relative times are not translated. Issue: #3282&lt;/li>
&lt;li>Submitting feedback no longer works. Issue: #3273&lt;/li>
&lt;li>Full access users cannot create users, even when they have the appropriate permissions. Issue: #3262&lt;/li>
&lt;li>Sending a message from the Messages tab creates a message with uuid equal to database URL. Issue: #3242&lt;/li>
&lt;li>API does not check if &lt;code>COUCH_NODE_NAME&lt;/code> is set at startup. Issue: #3226&lt;/li>
&lt;li>Support Nepali calendar in outgoing SMS. Issue: #3219&lt;/li>
&lt;li>New reports for same time period do not replace previous ones. Issue: #3160&lt;/li>
&lt;li>API is picky about trailing slashes for SMS endpoint. Issue: #3152&lt;/li>
&lt;li>Couchdb&amp;rsquo;s startup.log does not include timestamps. Issue: #3131&lt;/li>
&lt;li>Exporting feedback crashed api and it didn&amp;rsquo;t come back. Issue: #3107&lt;/li>
&lt;li>Export server logs from webapp does not work. Issue: #3089&lt;/li>
&lt;li>Requesting audit log makes server unresponsive. Issue: #1789&lt;/li>
&lt;li>Unrecognized input type found when trying to reset. Issue: #1655&lt;/li>
&lt;/ul>
&lt;h2 id="uiux-improvements">UI/UX improvements&lt;/h2>
&lt;ul>
&lt;li>Contact profile fields collapse on mobile. Issue: #3306&lt;/li>
&lt;li>Disable cancel buttons when saving. Issue: #1650&lt;/li>
&lt;/ul>
&lt;h2 id="performance-improvements">Performance improvements&lt;/h2>
&lt;ul>
&lt;li>enketo-core package.json is included in inbox.js bundle. Issue: #3293&lt;/li>
&lt;li>Use enketo xml cache for contact forms too. Issue: #3325&lt;/li>
&lt;/ul></description></item><item><title>Core: 2.11.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.11.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.11.1/</guid><description>
&lt;h2 id="bug-fixes">Bug fixes&lt;/h2>
&lt;ul>
&lt;li>Cannot report via SMS about people who are registered in the web app. Issue: #3401&lt;/li>
&lt;li>Results page CSS messed up in v2.11. Issue: #3369&lt;/li>
&lt;li>The user needs an associated contact to create a contact. Issue: #3394&lt;/li>
&lt;li>Error when adding Place with new person. Issue: #3420&lt;/li>
&lt;li>Error after canceling and re-opening any contact creation form. Issue: #3448&lt;/li>
&lt;li>namespace-form-fields migration : report bulk errors. Issue: #3371 (second part)&lt;/li>
&lt;/ul></description></item><item><title>Core: 2.11.2 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.11.2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.11.2/</guid><description>
&lt;h2 id="performance-improvements">Performance improvements&lt;/h2>
&lt;ul>
&lt;li>Slow initial replication for users with lots of docs. Issue: #3508&lt;/li>
&lt;/ul></description></item><item><title>Core: 2.11.3 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.11.3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.11.3/</guid><description>
&lt;h2 id="bug-fixes">Bug fixes&lt;/h2>
&lt;ul>
&lt;li>The namespace-form-fields migration conflicts itself. Issue: #3534&lt;/li>
&lt;li>In the create-patient-contacts migration provide a more complete list of potential patient_name locations. Issue: #3372&lt;/li>
&lt;/ul></description></item><item><title>Core: 2.12.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.12.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.12.0/</guid><description>
&lt;h2 id="features">Features&lt;/h2>
&lt;ul>
&lt;li>Add sync status indicator for offline users. Issue: #3357&lt;/li>
&lt;li>Add gateway message delivery statuses. Issue: #3073&lt;/li>
&lt;li>Add a replication_date property to records. Issue: #2180&lt;/li>
&lt;li>Change patient id generation to store the length of id it&amp;rsquo;s generating. Issues: #3505&lt;/li>
&lt;li>Allow form upload through Form Configuration UI. Issue: #3433&lt;/li>
&lt;/ul>
&lt;h2 id="bug-fixes">Bug fixes&lt;/h2>
&lt;ul>
&lt;li>On small screen, cannot re-open date filter in history tab. Issue: #3467&lt;/li>
&lt;li>Debug section of the About screen has some weird extra text. Issue: #3463&lt;/li>
&lt;li>Medic Gateway runs into document update conflicts while trying to upload sms status. Issue: #3443&lt;/li>
&lt;li>Stop &lt;code>maintain_info_doc&lt;/code> transition from writing sentinel metadata. Issue: #3424&lt;/li>
&lt;li>Webapp does not supply XML forms (XForms) to Collect. Issue: #3390&lt;/li>
&lt;li>Cannot render form in Firefox. Issue: #3354&lt;/li>
&lt;li>False positive error uploading translations. Issue: #3350&lt;/li>
&lt;li>Exporting server logs fails with api 500. Issue: #3209&lt;/li>
&lt;li>AWS EC2 AMI Regression: Does not currently boot. Issue: #3173&lt;/li>
&lt;li>Form exits on Refresh/Reload in Tasks tab. Issue: #3090&lt;/li>
&lt;li>Facility reference code fails to match when using integers and textforms. Issue: #1058&lt;/li>
&lt;/ul>
&lt;h2 id="uiux-improvements">UI/UX improvements&lt;/h2>
&lt;ul>
&lt;li>Bullet displayed incorrectly. Issue: #3020&lt;/li>
&lt;li>File chooser for importing translations should filter for .properties files. Issue: #3474&lt;/li>
&lt;li>Show loading progress when app is starting. Issue: #3384&lt;/li>
&lt;/ul></description></item><item><title>Core: 2.12.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.12.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.12.1/</guid><description>
&lt;h2 id="bug-fixes">Bug fixes&lt;/h2>
&lt;ul>
&lt;li>Improved error messages for SMS endpoint. Issue: #3587&lt;/li>
&lt;li>Allow for empty SMS message Content. Issue: #3656&lt;/li>
&lt;li>Implement 500 item max for bulk delete. Issue: #3605&lt;/li>
&lt;/ul>
&lt;h2 id="security">Security&lt;/h2>
&lt;ul>
&lt;li>Fixed kanso packages that inadvertently cached credentials. Issue: #3648&lt;/li>
&lt;/ul></description></item><item><title>Core: 2.12.2 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.12.2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.12.2/</guid><description>
&lt;h2 id="bug-fixes">Bug fixes&lt;/h2>
&lt;ul>
&lt;li>Accept patient reports for patients created in app. Issue: #3740&lt;/li>
&lt;li>Stop accept_patient_reports transition clearing messages for unrelated registrations. Issue: #3742&lt;/li>
&lt;/ul></description></item><item><title>Core: 2.12.3 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.12.3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.12.3/</guid><description>
&lt;h2 id="bug-fixes">Bug fixes&lt;/h2>
&lt;ul>
&lt;li>Accept messages with empty from or content. See: &lt;a href="https://github.com/medic/medic-api/pull/185">https://github.com/medic/medic-api/pull/185&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Core: 2.12.4 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.12.4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.12.4/</guid><description>
&lt;h2 id="bug-fixes">Bug fixes&lt;/h2>
&lt;ul>
&lt;li>Fix issue with /api/v1/records. Issue: #3770&lt;/li>
&lt;/ul></description></item><item><title>Core: 2.12.5 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.12.5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.12.5/</guid><description>
&lt;h2 id="bug-fixes">Bug fixes&lt;/h2>
&lt;ul>
&lt;li>Fix bug where id generation wouldn&amp;rsquo;t automatically increase id length when it ran out of ids. Issue: #3790&lt;/li>
&lt;/ul></description></item><item><title>Core: 2.13.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.13.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.13.0/</guid><description>
&lt;h2 id="migration-notes">Migration notes&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/2635">#2635&lt;/a> changes the context available to the configured contact summary script. The &lt;code>contact&lt;/code> parameter no longer has information about parents. This information is now in an array called &lt;code>lineage&lt;/code>. More information is available in the &lt;a href="https://github.com/medic/medic-docs/blob/master/configuration/contact-summary.md">configuration documentation&lt;/a>.&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/3546">#3546&lt;/a> changes the implementation of the &lt;code>contact_summary&lt;/code> so instead of declaring the output on the last line of the script, now you have to return the output. Usually this is as easy as adding a return on the last line, so &lt;code>output;&lt;/code> becomes &lt;code>return output;&lt;/code>. More information is available in the &lt;a href="https://docs.communityhealthtoolkit.org/apps/reference/contact-page/#contact-summary">configuration documentation&lt;/a>.&lt;/li>
&lt;/ul>
&lt;h2 id="features">Features&lt;/h2>
&lt;ul>
&lt;li>multi_report_alerts transition added to sentinel. See the documentation in &lt;a href="https://docs.communityhealthtoolkit.org/apps/reference/app-settings/transitions/">cht-docs&lt;/a>. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/3416">#3416&lt;/a>&lt;/li>
&lt;li>Specify which forms can be downloaded using Collect. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/3607">#3607&lt;/a>&lt;/li>
&lt;li>Validate sentinel transition configs at transition load time. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/3585">#3585&lt;/a>&lt;/li>
&lt;li>Information from the contact-summary is now available as input to forms. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/3413">#3413&lt;/a>&lt;/li>
&lt;li>Allow users to enter Bikram Sambat dates in Enketo forms on Android phones. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/3513">#3513&lt;/a>&lt;/li>
&lt;li>Allow users to enter Bikram Sambat dates in Enketo forms in the web app. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/3404">#3404&lt;/a>&lt;/li>
&lt;li>Registration of a person from a report/action form is now possible. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/2912">#2912&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="bug-fixes">Bug fixes&lt;/h2>
&lt;ul>
&lt;li>Couch responds with 200 when a bad app_settings file is uploaded. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/3674">#3674&lt;/a>&lt;/li>
&lt;li>Select All in bulk delete doesn&amp;rsquo;t work. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/3646">#3646&lt;/a>&lt;/li>
&lt;li>Only serve collect-specific XML forms to collect. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/3642">#3642&lt;/a>&lt;/li>
&lt;li>Exporting when filtered by report type exports more reports than are displayed in the web app. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/3615">#3615&lt;/a>&lt;/li>
&lt;li>Bulk delete fails when deleting more than a few hundred records. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/3605">#3605&lt;/a>&lt;/li>
&lt;li>Exporting reports filtered by place results in an empty xml. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/3593">#3593&lt;/a>&lt;/li>
&lt;li>Requesting forms should respond with 4xx on client error. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/3569">#3569&lt;/a>&lt;/li>
&lt;li>Can&amp;rsquo;t view contacts for restricted user. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/3517">#3517&lt;/a>&lt;/li>
&lt;li>Bad error message when associated contact is not available in the local DB. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/3499">#3499&lt;/a>&lt;/li>
&lt;li>Gardener bug on startup when module_name is undefined. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/3481">#3481&lt;/a>&lt;/li>
&lt;li>Reports list showing when user doesn&amp;rsquo;t have proper permission. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/3452">#3452&lt;/a>&lt;/li>
&lt;li>select2 in a repeat group does not work as expected in an Xform. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/3430">#3430&lt;/a>&lt;/li>
&lt;li>{{patient_name}} not found when patient was created by xform. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/3419">#3419&lt;/a>&lt;/li>
&lt;li>Search doesn&amp;rsquo;t work in Nepali or with accented characters. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/3392">#3392&lt;/a>&lt;/li>
&lt;li>Remove nested contacts. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/2635">#2635&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="uiux-improvements">UI/UX improvements&lt;/h2>
&lt;ul>
&lt;li>Sync status cut off in mobile view. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/3703">#3703&lt;/a>&lt;/li>
&lt;li>Hide Collect XForms from filter list in History tab. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/3625">#3625&lt;/a>&lt;/li>
&lt;li>Split the form configuration page into JSON and XML tabs. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/3559">#3559&lt;/a>&lt;/li>
&lt;li>Wrap text in tasks list. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/3525">#3525&lt;/a>&lt;/li>
&lt;li>Task summary screen looks ugly on desktop. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/3521">#3521&lt;/a>&lt;/li>
&lt;li>Send Report dropdown menu items are misaligned. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/3469">#3469&lt;/a>&lt;/li>
&lt;li>Disable tasks tour for admins. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/3144">#3144&lt;/a>&lt;/li>
&lt;li>Confirmation popup should not show on &amp;lsquo;Error loading form&amp;rsquo;. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/3045">#3045&lt;/a>&lt;/li>
&lt;li>&amp;lsquo;May lose data&amp;rsquo; warning displayed when form has no fields. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/1601">#1601&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="performance-improvements">Performance improvements&lt;/h2>
&lt;ul>
&lt;li>Remove modules.js attachment. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/3684">#3684&lt;/a>&lt;/li>
&lt;li>Use alternative pagination method for running batched migrations. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/3553">#3553&lt;/a>&lt;/li>
&lt;li>The read status of documents is now stored in a user specific database to reduce unnecessary doc updates. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/2418">#2418&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="security">Security&lt;/h2>
&lt;ul>
&lt;li>Password validation so when creating or updating users the new passwords have to be at least 8 characters long and reasonably complex. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/1472">#1472&lt;/a>&lt;/li>
&lt;li>Don&amp;rsquo;t eval() user input. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/3546">#3546&lt;/a>&lt;/li>
&lt;li>Set &lt;code>Secure&lt;/code> setting on AuthSession cookie for HTTPS pages. Issue: &lt;a href="https://github.com/medic/medic-webapp/issues/3182">#3182&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Core: 2.13.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.13.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.13.1/</guid><description>
&lt;h2 id="bug-fixes">Bug fixes&lt;/h2>
&lt;ul>
&lt;li>Fix bug in extract-person-contacts migration introduced in 2.13.0 &lt;a href="https://github.com/medic/medic-webapp/issues/4031">#4031&lt;/a>&lt;/li>
&lt;li>Remove the now invalid erlang migrations &lt;a href="https://github.com/medic/medic-webapp/issues/4033">#4033&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Core: 2.13.2 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.13.2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.13.2/</guid><description>
&lt;h2 id="bug-fixes">Bug fixes&lt;/h2>
&lt;ul>
&lt;li>Force outputs to recalc on form load &lt;a href="https://github.com/medic/medic-webapp/issues/4111">#4111&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Core: 2.13.3 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.13.3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.13.3/</guid><description>
&lt;h2 id="improvements">Improvements&lt;/h2>
&lt;ul>
&lt;li>Bump libphonenumber to the latest&lt;/li>
&lt;/ul></description></item><item><title>Core: 2.13.4 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.13.4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.13.4/</guid><description>
&lt;h2 id="improvements">Improvements&lt;/h2>
&lt;ul>
&lt;li>Bump libphonenumber for Nepal Smart Telecom.&lt;/li>
&lt;/ul></description></item><item><title>Core: 2.13.5 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.13.5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.13.5/</guid><description>
&lt;h2 id="bug-fixes">Bug fixes&lt;/h2>
&lt;ul>
&lt;li>Update Notification transition crashes sentinel if the patient id is misconfigured. &lt;a href="https://github.com/medic/medic-webapp/issues/4121">#4121&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Core: 2.13.6 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.13.6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.13.6/</guid><description>
&lt;h2 id="performance-improvements">Performance improvements&lt;/h2>
&lt;ul>
&lt;li>Drastically improve performance of form loading when the patient context is used, and that context is very large (e.g. you&amp;rsquo;re including lineages). &lt;a href="https://github.com/medic/medic-webapp/issues/4430">#4430&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Core: 2.13.7 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.13.7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.13.7/</guid><description>
&lt;h2 id="performance-improvements">Performance improvements&lt;/h2>
&lt;ul>
&lt;li>Various PouchDB performance improvements were backported from 2.14. This includes increasing the PouchDB version and removing our use of pouchdb-worker.&lt;/li>
&lt;/ul></description></item><item><title>Core: 2.14.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.14.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.14.0/</guid><description>
&lt;p>Additional release notes are available &lt;a href="../images/2.14.0.pdf">here&lt;/a>.&lt;/p>
&lt;h2 id="migration-notes">Migration notes&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/3449">#3449&lt;/a>: We included a feature which makes it unnecessary to use a &lt;code>repeat-relevant&lt;/code> node in Enketo forms to workaround a bug which created an empty child. This node should now be removed.&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/3629">#3629&lt;/a>: We added more configurable text to the target widgets. Also, configuring an array of target titles is now deprecated in favor specifying a single translation key. Reconfigure your targets to specify values for &lt;code>translation_key&lt;/code>, &lt;code>subtitle_translation_key&lt;/code>, and &lt;code>percentage_count_translation_key&lt;/code> properties. &lt;a href="https://docs.communityhealthtoolkit.org/apps/reference/targets/">Full documentation&lt;/a>.&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/3818">#3818&lt;/a>: We changed the way groups of scheduled messages are silenced when using &lt;code>silence_for&lt;/code>. Previously, only the first group found to be in the silence window was silenced. Now, all groups are.&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/4134">#4134&lt;/a>: Review use of &lt;code>calculate=&amp;quot;.&amp;quot;&lt;/code> in all forms. If you have any XForm with with &lt;code>calculate=&amp;quot;.&amp;quot;&lt;/code> you will need to modify the corresponding XLSForm, reconvert, and upload. The changes to make are:
&lt;ul>
&lt;li>From &lt;em>type&lt;/em> &lt;code>calculate&lt;/code> to &lt;code>string&lt;/code>&lt;/li>
&lt;li>Make sure the &lt;em>calculation&lt;/em> column is &lt;strong>empty&lt;/strong>&lt;/li>
&lt;li>Have the &lt;em>appearance&lt;/em> as &lt;code>hidden&lt;/code>&lt;/li>
&lt;li>The &lt;em>label&lt;/em> can be &lt;code>NO_LABEL&lt;/code> to avoid warnings and bloat in the form&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="features">Features&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/3096">#3096&lt;/a>: Allow users to take a photo while filling in an xform in Enketo and upload the photo with the form.&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/3459">#3459&lt;/a>: Add format-date-tr() to our custom xpath functions to support translations of days and months in xforms.&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/3450">#3450&lt;/a>: Show the logout button in the hamburger menu for android users who have the new &lt;code>can_log_out_on_android&lt;/code> permission set.&lt;/li>
&lt;/ul>
&lt;h2 id="bug-fixes">Bug fixes&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/3944">#3944&lt;/a>: Unread reports bubble not working with deleted docs.&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/3563">#3563&lt;/a>: Sentinel scheduling EDDs on a Sunday for all ANC registrations.&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/3821">#3821&lt;/a>: Export api doesn&amp;rsquo;t handle errors during export gracefully.&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/4111">#4111&lt;/a>: Enketo or-output never shows initial value.&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/4166">#4166&lt;/a>: People created via sentinel transitions are not replicated.&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/4200">#4200&lt;/a>: Sentinel nulls out parent when multiple docs generated from one form submission.&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/4201">#4201&lt;/a>: PNC schedule is not generated when a delivery report is submitted.&lt;/li>
&lt;/ul>
&lt;h2 id="uiux-improvements">UI/UX improvements&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/3945">#3945&lt;/a>: Update the icons used for contacts.&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/3904">#3904&lt;/a>: Make &lt;code>user type&lt;/code> required in the edit user screen.&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/3758">#3758&lt;/a>: Title of form is misaligned in list of reports and reports detail pane.&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/3736">#3736&lt;/a>: Configurable profile field UI changes.&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/3735">#3735&lt;/a>: Reports content row improvements.&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/3734">#3734&lt;/a>: Tasks content row improvements.&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/3732">#3732&lt;/a>: Message content row improvements.&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/3731">#3731&lt;/a>: Update content row UI for consistency &amp;amp; improved readability.&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/3720">#3720&lt;/a>: Improve display of icons in configurable profile cards.&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/3719">#3719&lt;/a>: Person &amp;amp; place profile page UI changes.&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/3704">#3704&lt;/a>: Improve password strength validation error messages.&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/3629">#3629&lt;/a>: Update target widget cards and targets page layout.&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/3597">#3597&lt;/a>: Update fonts to Noto.&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/3561">#3561&lt;/a>: Display required fields when creating a &amp;ldquo;restricted to a place&amp;rdquo; user.&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/2522">#2522&lt;/a>: Percentage target values are confusing.&lt;/li>
&lt;/ul>
&lt;h2 id="performance-improvements">Performance improvements&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/3950">#3950&lt;/a>: Remove stats collection in API as it&amp;rsquo;s no longer used.&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/3913">#3913&lt;/a>: Sentinel&amp;rsquo;s fetchHydratedDoc function should use only fetch contacts that aren&amp;rsquo;t already present in the lineage list.&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/4174">#4174&lt;/a>: Remove WebWorker for improved client database performance.&lt;/li>
&lt;/ul>
&lt;h2 id="security">Security&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/3873">#3873&lt;/a>: Escape output to defend against javascript injection.&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/3239">#3239&lt;/a>: Accessing webapp without logging in is possible.&lt;/li>
&lt;/ul></description></item><item><title>Core: 2.14.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.14.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.14.1/</guid><description>
&lt;h2 id="performance-improvements">Performance improvements&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/4430">#4430&lt;/a>: Drastically improve performance of form loading when the patient context is used, and that context is very large (e.g. you&amp;rsquo;re including lineages).&lt;/li>
&lt;/ul></description></item><item><title>Core: 2.14.2 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.14.2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.14.2/</guid><description>
&lt;h2 id="bug-fixes">Bug fixes&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/3099">#3099&lt;/a>: Uncaught exception triggers 500 response for subsequent requests.&lt;/li>
&lt;/ul></description></item><item><title>Core: 2.14.3 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.14.3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.14.3/</guid><description>
&lt;h2 id="bug-fixes">Bug fixes&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/4457">#4457&lt;/a>: The z-score enketo widget is not usable.&lt;/li>
&lt;li>&lt;a href="https://github.com/medic/medic-webapp/issues/4460">#4460&lt;/a>: Uncaught Exception: write after end error.&lt;/li>
&lt;/ul></description></item><item><title>Core: 2.15.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.15.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.15.0/</guid><description>
&lt;h2 id="whats-new">What&amp;rsquo;s New&lt;/h2>
&lt;h3 id="view-clinic-places-in-places-filter">View &amp;lsquo;clinic&amp;rsquo; Places in Places Filter&lt;/h3>
&lt;p>&lt;em>You might have noticed that for SMS projects, CHW areas went missing from the places filter in the Reports tab. Good news! They are back.&lt;/em>&lt;/p>
&lt;p>When we started having CHWs log into the Medic app and register families, the places filter on the reports page became crowded with thousands of families, creating a performance issue. To get around that issue, we removed &lt;code>'clinic'&lt;/code> level places from this filter drop-down so that users would only see health centers and CHW areas, no families. This meant that no one could filter by family, but that wasn&amp;rsquo;t a needed feature.&lt;/p>
&lt;h4 id="filter-bar-place-filter-highlighted">Filter bar, place filter highlighted&lt;/h4>
&lt;p>&lt;img src="../images/2.15.0-3902-1.png" alt="image">&lt;/p>
&lt;p>However, as we started using version 2 with our SMS projects, we needed the ability to filter by CHW area. In those projects, CHW areas are the &lt;code>'clinic'&lt;/code> level places. In order to avoid further performance issues for projects that register families, we made this a configurable option.&lt;/p>
&lt;p>&lt;img src="../images/2.15.0-3902-2.png" alt="image">&lt;/p>
&lt;p>The default is to show only the &lt;code>district_hospital&lt;/code> and &lt;code>health_center&lt;/code> levels in the places filter. If you only want to see those two levels, there is no need to change your config. However, if you want to see the &lt;code>clinic&lt;/code> places as well, you will need to add the following anywhere in your &lt;code>app_settings.json&lt;/code> file:&lt;/p>
&lt;pre>&lt;code> &amp;quot;place_hierarchy_types&amp;quot;: [&amp;quot;district_hospital&amp;quot;, &amp;quot;health_center&amp;quot;, &amp;quot;clinic&amp;quot;],
&lt;/code>&lt;/pre>&lt;p>&lt;strong>DO NOT&lt;/strong> display &lt;code>clinic&lt;/code> places if your project is registering families as this will cause performance issues with admin or program manager (full access) users rendering the reports page.&lt;/p>
&lt;p>[&lt;a href="https://github.com/medic/medic-webapp/issues/3902">#3902&lt;/a>]&lt;/p>
&lt;h3 id="just-in-time-messages">Just-in-Time Messages&lt;/h3>
&lt;p>&lt;em>Just-in-time messages are available just in time for you to get those messages to that CHW who changed her phone number last week. And if she got any messages in the wrong language, we&amp;rsquo;ve got you covered.&lt;/em>&lt;/p>
&lt;p>Previously, the phone number and outgoing message language were set at the time that a schedule was created. If a CHW changed her phone number, only new registrations would go to the new phone number. Any schedules that were ongoing would still send messages to her old phone number.&lt;/p>
&lt;p>With this new feature, any updates to phone numbers are reflected in real time for any scheduled messages that are not yet pending or sent. In addition, if there are messages in your schedule going to the nurse or a CHW supervisor and they have to change their phone number, any messages in existing schedules that are going to be sent to them in the future will go to the new numbers.&lt;/p>
&lt;p>&lt;img src="../images/2.15.0-3627-1.png" alt="image">&lt;/p>
&lt;p>After updating Elizabeth&amp;rsquo;s phone number, you&amp;rsquo;ll see the following. Note that the auto-reply will have been sent to her old phone number because it was sent immediately after registration. If you look at the outgoing messages, you&amp;rsquo;ll see that all have been updated to use Elizabeth&amp;rsquo;s new number.&lt;/p>
&lt;p>&lt;img src="../images/2.15.0-3627-2.png" alt="image">&lt;/p>
&lt;p>This improvement also affects outgoing message language. If the outgoing message language is changed, all future messages, including those in ongoing schedules, will be sent in the new language. So if a CHW registers a pregnancy and the outgoing messages are generated in English initially, if the project changes the outgoing language to Swahili, any remaining messages will be sent out in Swahili.&lt;/p>
&lt;p>&lt;img src="../images/2.15.0-3627-3.png" alt="image">&lt;/p>
&lt;p>These changes will occur as soon as you reload the report(s) affected by the update. You should see the new phone number appear as the recipient of any future scheduled messages. The future scheduled messages should also be in the new language for outgoing messages, if you&amp;rsquo;ve updated that.&lt;/p>
&lt;p>In order for this feature to work for both phone number and translation updates, you must make sure your config:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Uses only translation keys for ALL outgoing messages&lt;/strong>, including scheduled messages, auto-replies, and notifications. You must remove ALL message arrays and replace with translation keys.&lt;/li>
&lt;li>&lt;strong>Uses the correct alias for each message recipient for all scheduled messages&lt;/strong>. We are no longer recommending that you use &lt;code>reporting_unit&lt;/code> as the message recipient for message schedules. Instead, use &lt;code>clinic&lt;/code> (to send to the patient&amp;rsquo;s CHW), &lt;code>health_center&lt;/code> (to send to the nurse / primary contact of the health center), or &lt;code>district&lt;/code> (to send to the primary contact at the district level). This will help ensure that phone numbers are updated in real time. Using &lt;code>reporting_unit &lt;/code>for auto-replies and notifications is completely fine as these go out immediately after a report is received. The exception to this might be in cases where both nurses and CHWs are confirming visits and/or deliveries via SMS and you want to notify the CHW.&lt;/li>
&lt;/ol>
&lt;p>&lt;a href="#improved-nurse-enabled-workflows-on-sms">More on this below&lt;/a>.&lt;/p>
&lt;p>Your config will look something like this (**See the Standard &lt;code>&lt;a href="https://github.com/medic/medic-projects/blob/master/standard/app_settings.json">app_settings.json&lt;/a>&lt;/code> file for a full example)&lt;/strong>:&lt;/p>
&lt;pre>&lt;code>{
&amp;quot;name&amp;quot;: &amp;quot;ANC Reminders LMP&amp;quot;,
&amp;quot;translation_key&amp;quot;: &amp;quot;schedule.anc_lmp&amp;quot;,
&amp;quot;summary&amp;quot;: &amp;quot;&amp;quot;,
&amp;quot;description&amp;quot;: &amp;quot;&amp;quot;,
&amp;quot;start_from&amp;quot;: &amp;quot;lmp_date&amp;quot;,
&amp;quot;messages&amp;quot;: [
{
&amp;quot;translation_key&amp;quot;: &amp;quot;messages.schedule.anc.reminder&amp;quot;,
&amp;quot;group&amp;quot;: 1,
&amp;quot;offset&amp;quot;: &amp;quot;12 weeks&amp;quot;,
&amp;quot;send_day&amp;quot;: &amp;quot;monday&amp;quot;,
&amp;quot;send_time&amp;quot;: &amp;quot;09:00&amp;quot;,
&amp;quot;recipient&amp;quot;: &amp;quot;clinic&amp;quot;
},
{
&amp;quot;translation_key&amp;quot;: &amp;quot;messages.schedule.anc.followup&amp;quot;,
&amp;quot;group&amp;quot;: 1,
&amp;quot;offset&amp;quot;: &amp;quot;13 weeks&amp;quot;,
&amp;quot;send_day&amp;quot;: &amp;quot;monday&amp;quot;,
&amp;quot;send_time&amp;quot;: &amp;quot;10:00&amp;quot;,
&amp;quot;recipient&amp;quot;: &amp;quot;clinic&amp;quot;
}, …
&lt;/code>&lt;/pre>&lt;p>[&lt;a href="https://github.com/medic/medic-webapp/issues/3627">#3627&lt;/a>]&lt;/p>
&lt;h3 id="reports-tab-shows-patient-name">Reports Tab Shows Patient Name&lt;/h3>
&lt;p>&lt;em>Have you been wondering why your CHW has been pregnant 58 times? Now you&amp;rsquo;ll be able to see the patient name associated with the pregnancy from the main list of the Reports tab.&lt;/em>&lt;/p>
&lt;p>Previously, the Reports tab displayed the name of the person who submitted a particular report. We received feedback that it was more useful to display the name of the patient, so we have updated the reports list and the report detail page to show the patient&amp;rsquo;s name at the top.&lt;/p>
&lt;p>In the reports list, we show the patient&amp;rsquo;s name first so that a CHW or manager can easily see which patient the report is about. Next is the type of form, which is the same as in previous versions. Below the name of the form, we have included the patient&amp;rsquo;s hierarchy so that it&amp;rsquo;s easy to see at a glance which CHW area that patient belongs to.&lt;/p>
&lt;p>&lt;img src="../images/2.15.0-4053-1.png" alt="image">&lt;/p>
&lt;p>If you then click on a report, you get to the report detail view, which again shows the patient&amp;rsquo;s name at the top. Below is the name of the form, which is the same as in previous versions. After the form name is the patient&amp;rsquo;s hierarchy, so it&amp;rsquo;s clear which CHW area the patient belongs to. Finally, we list the person who sent the report and that person&amp;rsquo;s phone number. In this case it&amp;rsquo;s the CHW, Brandon Bone, but it could also be a nurse or another person in the health system. If the phone number does not match anyone in the Medic system, it will simply show the phone number of the person who submitted the report with no name listed.&lt;/p>
&lt;p>&lt;img src="../images/2.15.0-4053-2.png" alt="image">&lt;/p>
&lt;p>[&lt;a href="https://github.com/medic/medic-webapp/issues/4053">#4053&lt;/a>]&lt;/p>
&lt;h3 id="export-to-csv">Export to CSV&lt;/h3>
&lt;p>&lt;em>Ever use our export to XML feature? Nope? We didn&amp;rsquo;t either. Now you can export to CSV for all of your data analysis needs. Get your pivot table on!&lt;/em>&lt;/p>
&lt;p>Starting in 2.15.0, you can now export data directly from the Medic webapp in CSV format. You can choose to export all records or you may use the filters on the reports page to export a subset of reports. Whatever is appearing when you click Export is what will download, so if some filters have been applied before clicking Export, then your CSV will only include the reports that fit your filter criteria. Every export will include all forms and all fields, so if you download more than one type of form, you may find that you have a lot of columns, but this is just to ensure that we have a column for each field in each form since forms have different field names. Only admins can export because exporting returns all reports so it&amp;rsquo;s only available to users who are allowed to access all data. \&lt;/p>
&lt;p>Note that after you click Export, it may take 10 seconds or so before the Export starts downloading, so be patient! [&lt;a href="https://github.com/medic/medic-webapp/issues/3594">#3594&lt;/a>]&lt;/p>
&lt;h3 id="fine-grained-time-on-reports-list">Fine-Grained Time on Reports List&lt;/h3>
&lt;p>&lt;em>At 15:02 on June 6th, we made it possible for you to see the exact time your reports came in.&lt;/em>&lt;/p>
&lt;p>Starting in 2.15.0, reports received today show the exact time. This makes it easier to see how many reports have come in today at a glance. This way you can see if the gateway is working properly. Once you get to the next day, reports will use relative times and dates as they had prior to this change.&lt;/p>
&lt;p>&lt;img src="../images/2.15.0-3613.png" alt="image">&lt;/p>
&lt;p>[&lt;a href="https://github.com/medic/medic-webapp/issues/3613">#3613&lt;/a>]&lt;/p>
&lt;h3 id="updated-styling-for-tasks-due-today">Updated Styling for Tasks Due Today&lt;/h3>
&lt;p>&lt;em>Now you have no excuse not to complete your tasks, especially if you hate the color blue.&lt;/em>&lt;/p>
&lt;p>We made a small update to the Tasks list so that tasks due today are easier to find in the list. Starting in 2.15.0, tasks due today now have bold, blue due dates. This helps to distinguish them from tasks due in the past, which are bold and red, and tasks due in the future, which are still gray and regular weight.&lt;/p>
&lt;p>&lt;img src="../images/2.15.0-4000.png" alt="image">&lt;/p>
&lt;p>[&lt;a href="https://github.com/medic/medic-webapp/issues/4000">#4000&lt;/a>]&lt;/p>
&lt;h3 id="updated-icon-for-chw-area">Updated Icon for CHW Area&lt;/h3>
&lt;p>&lt;em>Wondering what that petri dish icon was for? We&amp;rsquo;re experimenting with a new icon for CHW areas.&lt;/em>&lt;/p>
&lt;p>Please swap out for your projects! The new icon is available in medic-projects and we&amp;rsquo;ll be shipping it as the default icon starting in 2.16.0.&lt;/p>
&lt;p>&lt;img src="../images/2.15.0-chw-area-icon.png" alt="image">&lt;/p>
&lt;h3 id="new-date-filter">New Date Filter&lt;/h3>
&lt;p>&lt;em>Now you can format dates on condition cards in the way that most of the world talks about them: date then month. Up next: how to get the US on the metric system?&lt;/em>&lt;/p>
&lt;p>We added a new date filter to provide more flexibility in how dates are displayed in condition cards. Now you can display dates like birthdates or EDDs in the format shown below (DD Month). This makes the date easier to read at a glance. If you want your date to show up in this format, use the &lt;code>dayMonth&lt;/code> filter for date fields in your &lt;code>contact-summary.js&lt;/code> file.&lt;/p>
&lt;p>&lt;img src="../images/2.15.0-3721.png" alt="image">&lt;/p>
&lt;p>[&lt;a href="https://github.com/medic/medic-webapp/issues/3721">#3721&lt;/a>]&lt;/p>
&lt;h3 id="improved-nurse-enabled-workflows-on-sms">Improved Nurse-Enabled Workflows on SMS&lt;/h3>
&lt;p>&lt;em>Nurses are busy and can&amp;rsquo;t always sit down in front of the webapp. We&amp;rsquo;re now able to notify a CHW of when a nurse submits a patient report via SMS.&lt;/em>&lt;/p>
&lt;p>This feature is an enhancement for SMS workflows where nurses are confirming visits or deliveries using Textforms or Collect. We&amp;rsquo;ve made it possible for the CHW to receive an SMS notification when a nurse confirms a visit or delivery via SMS. The diagram below describes how the messages would flow.&lt;/p>
&lt;p>&lt;img src="../images/2.15.0-3412.png" alt="image">&lt;/p>
&lt;p>To help make configuration easier, we have some new aliases available (&lt;a href="#just-in-time-messages">mentioned earlier in this doc&lt;/a>). The new aliases are &lt;code>clinic&lt;/code>, &lt;code>health_center&lt;/code>, and &lt;code>district&lt;/code> and they are calculated off of the patient. The &lt;code>clinic&lt;/code> is the CHW area, so the message goes to the CHW; &lt;code>health_center&lt;/code> is the facility level, so the message goes to the primary contact of the health facility; and &lt;code>district&lt;/code> is the district hospital level, so the message goes to the primary contact of the district hospital.&lt;/p>
&lt;p>If your project has both the CHW and the nurse confirming visits, you&amp;rsquo;ll want to send only an auto-reply when the CHW reports a visit but you&amp;rsquo;ll want to send both an auto-reply and a notification when the nurse reports a visit so that the nurse knows the visit report was received and the CHW knows the patient went to the facility. You can use a &lt;code>bool_expr&lt;/code> on the CHW notification so that it only goes out when it&amp;rsquo;s a nurse sending in the visit confirmation.&lt;/p>
&lt;p>[&lt;a href="https://github.com/medic/medic-webapp/issues/3412">#3412&lt;/a>]&lt;/p>
&lt;h3 id="updated-enketo-ui">Updated Enketo UI&lt;/h3>
&lt;p>&lt;em>UI fairy dust alert! We made forms prettier.&lt;/em>&lt;/p>
&lt;p>Starting in 2.15.0, Enketo forms have a larger font for the questions, more space between questions, and larger clickable areas for radio buttons and checkboxes. On Desktop, all forms have a header that persists for all pages of the form so that the user knows which form she is filling in.&lt;/p>
&lt;p>&lt;img src="../images/2.15.0-3961-1.png" alt="image">&lt;/p>
&lt;h4 id="before">Before&lt;/h4>
&lt;p>&lt;img src="../images/2.15.0-3961-2.png" alt="image">&lt;/p>
&lt;h4 id="after">After&lt;/h4>
&lt;p>&lt;img src="../images/2.15.0-3961-3.png" alt="image">&lt;/p>
&lt;p>[&lt;a href="https://github.com/medic/medic-webapp/issues/3961">#3961&lt;/a>]&lt;/p>
&lt;h3 id="allow-users-to-compare-translations-to-translation-keys">Allow Users to Compare Translations to Translation Keys&lt;/h3>
&lt;p>&lt;em>We&amp;rsquo;re making it easier to keep track of what you&amp;rsquo;re translating so we&amp;rsquo;re all speaking the same language, even when we&amp;rsquo;re not.&lt;/em>&lt;/p>
&lt;p>In 2.15.0, we added an option to the left side drop-down so that you can display the translation keys. This makes it easier to know what you are translating and where it will appear in the app. It also allows PMs to more easily update translations for scheduled messages, targets, and tasks titles, among other things.&lt;/p>
&lt;p>&lt;img src="../images/2.15.0-3022.png" alt="image">&lt;/p>
&lt;p>[&lt;a href="https://github.com/medic/medic-webapp/issues/3022">#3022&lt;/a>]&lt;/p>
&lt;h3 id="death-reporting">Death Reporting&lt;/h3>
&lt;p>&lt;em>More than a feature, we&amp;rsquo;re now supporting death reporting workflows which allow a user to report a death, another user to confirm that death, and all users to see which family members are deceased on both person and household profiles. Also includes the ever-popular &amp;ldquo;resurrection&amp;rdquo; feature which allows us to undo a death.&lt;/em>&lt;/p>
&lt;p>Our app now supports an expanded workflow for death reporting. The sketch below outlines the basic death reporting workflow that can be done on SMS or in our app, or with a combination of both app and SMS. Some health systems may not require a confirmation of the death by someone other than the CHW, or the person doing the confirmations may not be a user of our tools. In that case, the workflow can be simplified to just step one, where the CHW reports the death.&lt;/p>
&lt;p>Step one (death report) can be submitted by the CHW via SMS or the mobile app. Once the death report is submitted, the manager or nurse can get an SMS notification or a task to follow up with the community to confirm the death (until the supervisor app is built, the manager/nurse would need access to patient reports in order to get this task). The manager or nurse would then confirm the death and submit a death confirmation report. Once the death is confirmed, the person is marked as deceased in the app.&lt;/p>
&lt;p>&lt;img src="../images/2.15.0-3956-1.png" alt="image">&lt;/p>
&lt;p>There are a few things that can happen when someone is marked as deceased. First, the app can update a person&amp;rsquo;s profile to make it clear the person is deceased. It can also automatically update the family (or CHW area for SMS projects) profile to separate any deceased people from other people in the family or area. Finally, any deceased people will appear at the bottom of search results. &lt;strong>Tech leads&lt;/strong>: make sure you also configure all tasks so that they are cleared when a person is confirmed to be deceased. The app will add a &lt;code>date_of_death&lt;/code> field to the person&amp;rsquo;s doc once the death is confirmed.&lt;/p>
&lt;p>&lt;img src="../images/2.15.0-3956-2.png" alt="image">&lt;/p>
&lt;p>What happens if a death is confirmed but it turns out to have been done in error? We also support a workflow for undoing a death. A CHW can request a correction and if the nurse or manager agrees that a correction is needed, she can undo the death. This reverses all of the profile changes noted above.&lt;/p>
&lt;p>To configure a death reporting workflow, you will need:&lt;/p>
&lt;ul>
&lt;li>Death report form&lt;/li>
&lt;li>Death confirmation form&lt;/li>
&lt;li>Request correction form&lt;/li>
&lt;li>Undo death form&lt;/li>
&lt;li>Task or SMS notification for nurse or manager to confirm the death&lt;/li>
&lt;li>Task or SMS notification for nurse or manager to undo the death&lt;/li>
&lt;li>New configuration for all person-level tasks so that they clear as soon as the death confirmation form is submitted if that form indicates the person is actually deceased&lt;/li>
&lt;li>Enable the &lt;code>death_reporting&lt;/code> Sentinel transition&lt;/li>
&lt;li>A &lt;code>death_reporting&lt;/code> property in &lt;code>app_settings&lt;/code> so that you can indicate which form should confirm deaths and which form should undo deaths&lt;/li>
&lt;/ul>
&lt;p>Here&amp;rsquo;s an example of what you would add to &lt;code>app_settings&lt;/code> to get the profile updates to work:&lt;/p>
&lt;pre>&lt;code>&amp;quot;transitions&amp;quot;: {
&amp;quot;death_reporting&amp;quot;: true
},
&amp;quot;death_reporting&amp;quot;: {
&amp;quot;mark_deceased_forms&amp;quot;: [
&amp;quot;death_confirmation&amp;quot;
],
&amp;quot;undo_deceased_forms&amp;quot;: [
&amp;quot;undo_death&amp;quot;
]
}
&lt;/code>&lt;/pre>&lt;p>The Sentinel transition simply adds a date of death of the person to their profile doc. Currently, it will be the &lt;code>reported_date&lt;/code> of the death confirmation form. This is not currently customizable, but you can choose to display the date the CHW entered as the date of death on the person&amp;rsquo;s profile. We are planning to improve this in 2.16.0 by allowing you to use a &lt;code>date_of_death&lt;/code> field in your death confirmation form as the date that is transferred to the person&amp;rsquo;s doc. If you want to record dates of death for people but not have the profiles update, just use the transition and don&amp;rsquo;t add the &lt;code>death_reporting&lt;/code> property to &lt;code>app_settings&lt;/code>.&lt;/p>
&lt;p>[&lt;a href="https://github.com/medic/medic-webapp/issues/3956">#3956&lt;/a>]&lt;/p>
&lt;h3 id="report-linkages">Report Linkages&lt;/h3>
&lt;p>&lt;em>Please accept our apology&amp;hellip; We know you loved showing off your SQL skills, but we&amp;rsquo;ve made it easier to link certain forms together in PostgreSQL with the addition of a few new fields.&lt;/em>&lt;/p>
&lt;p>We&amp;rsquo;ve added some new fields to reports to help make it easier to write queries in analytics. You&amp;rsquo;ll need to run sentinel transitions for these to work. All of these fields can be added to SMS forms and some can be added to app forms. Here&amp;rsquo;s a list of what&amp;rsquo;s been added:&lt;/p>
&lt;ul>
&lt;li>Any report that runs the &lt;code>registration&lt;/code> transition and invokes the &lt;code>add_patient&lt;/code> (or deprecated &lt;code>add_patient_id&lt;/code>) trigger will create a patient doc with a &lt;code>source_id&lt;/code> field referencing the report and a &lt;code>created_by&lt;/code> field referencing the ID of the contact who submitted the report.
&lt;ul>
&lt;li>This makes it possible to know who created each person and links the person to the form used to register them.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Any report that clears a schedule either via the &lt;code>accept_patient_reports&lt;/code> transition or the &lt;code>clear_schedule&lt;/code> trigger in the &lt;code>registration&lt;/code> transition will have the ID of the latest matching registration recorded in the &lt;code>registration_id&lt;/code> field.
&lt;ul>
&lt;li>If you register a pregnancy and then submit a V form, the V form will have a &lt;code>registration_id &lt;/code>which is the ID of the most recent pregnancy registration.&lt;/li>
&lt;li>If you submit a D form for a pregnancy that was previously registered, the D form will have a &lt;code>registration_id&lt;/code> which is the ID of the most recent pregnancy registration.&lt;/li>
&lt;li>This also applies to any other schedule that is generated by registering a patient (PNC, Immunizations, etc.). Any visit form will have the ID of the most recent registration.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Any scheduled message that is cleared before being sent will have a &lt;code>cleared_by&lt;/code> field with the report that caused the task to be cleared.
&lt;ul>
&lt;li>If you register a pregnancy and receive the first visit reminder (Please remind Janet to go to the clinic for ANC), then submit a V form, the second reminder (Did Janet attend her visit?) would be cleared. That reminder would have a &lt;code>cleared_by&lt;/code> field which is the ID of the V form.&lt;/li>
&lt;li>If you register a pregnancy and then send in a D form, all remaining reminders are cleared. Each of the reminders would have a &lt;code>cleared_by&lt;/code> field which is the ID of the V form.&lt;/li>
&lt;li>This also applied to any other scheduled messages that are cleared - we will always know which report cleared the message.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>[&lt;a href="https://github.com/medic/medic-webapp/issues/3959">#3959&lt;/a>]&lt;/p>
&lt;h3 id="permissions-to-showhide-call-and-message-buttons">Permissions to Show/Hide Call and Message Buttons&lt;/h3>
&lt;p>&lt;em>Call me, maybe.&lt;/em>&lt;/p>
&lt;p>We&amp;rsquo;ve added two new permissions to our list so that you can determine whether users should see the call and message buttons when they are viewing a person&amp;rsquo;s profile. These buttons will appear by default, but you can remove a user type&amp;rsquo;s access to them, in case you want to prevent CHWs from having the call or message options, for example.&lt;/p>
&lt;p>&lt;img src="../images/2.15.0-3657.png" alt="image">&lt;/p>
&lt;p>[&lt;a href="https://github.com/medic/medic-webapp/issues/3657">#3657&lt;/a>]&lt;/p>
&lt;h2 id="bug-fixes">Bug Fixes&lt;/h2>
&lt;h3 id="contact-pagination-fixed-for-restricted-users">Contact Pagination Fixed for Restricted Users&lt;/h3>
&lt;p>&lt;em>Call off the search party, your missing families have been found!&lt;/em>&lt;/p>
&lt;p>You might have noticed that some contacts were not appearing on the people tab. Turns out we had a pagination bug. Sorry for those who couldn&amp;rsquo;t find their missing families! This is now fixed.&lt;/p>
&lt;p>[&lt;a href="https://github.com/medic/medic-webapp/issues/4085">#4085&lt;/a>]&lt;/p></description></item><item><title>Core: 2.16.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.16.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.16.0/</guid><description>
&lt;h2 id="whats-new">What&amp;rsquo;s New&lt;/h2>
&lt;h3 id="view-date-last-visited-for-places-on-the-people-tab">View date last visited for places on the people tab&lt;/h3>
&lt;p>&lt;em>Because knowing where you&amp;rsquo;ve been helps you know where you&amp;rsquo;re going next! - Medic proverb&lt;/em>&lt;/p>
&lt;p>In order to help CHWs achieve full coverage of every family or household they care for, we&amp;rsquo;ve added an optional feature to update the list of families or areas to display the date that family or area was last visited. You can use any patient- or family-level form or forms to update the date last visited. You may run into performance issues if you configure this to look at forms submitted very frequently. For example, we expect five forms submitted only once a month to work better than two forms submitted every day. Make sure you test!&lt;/p>
&lt;p>&lt;img src="../images/2.16.0-4526-1.png" alt="Screenshot">&lt;/p>
&lt;p>In order to see the date last visited instead of the primary contact, make sure you give your CHWs (or whichever users need to see date last visited) the &lt;code>can_view_last_visited_date&lt;/code> permission. Once that permission is enabled, you&amp;rsquo;ll be able to display the date the family was last visited in the list. Make sure you have this permission enabled in &lt;code>app_settings&lt;/code> to avoid overwriting the permission when you upload your config:&lt;/p>
&lt;pre>&lt;code>{
&amp;quot;name&amp;quot;: &amp;quot;can_view_last_visited_date&amp;quot;,
&amp;quot;roles&amp;quot;: [
&amp;quot;chw&amp;quot;,
&amp;quot;district_admin&amp;quot;
]
}
&lt;/code>&lt;/pre>&lt;p>When you first implement this, you&amp;rsquo;ll see a long list of &amp;ldquo;Last visit unknown&amp;rdquo;. You&amp;rsquo;ll need to indicate which forms should be included in the calculation for the date last visited. You can use forms at the person or family level, though it is preferable to limit the number of forms included to the minimal number to avoid performance issues.&lt;/p>
&lt;p>Indicating that a form should be included in the calculation for the date last visited is as simple as adding a field called &lt;code>visited_contact_uuid&lt;/code> to your form. This should be a &lt;code>calculate&lt;/code> field that contains the family/household (&lt;code>clinic&lt;/code> level place) UUID. Make sure this is a top-level field (not in any group and will be in &lt;code>doc.fields.visited_contact_uuid&lt;/code> when you submit). To test, upload your form with this field, fill it out and submit, and your people list will update with the correct relative date. Note that you may need to refresh the people tab by either clicking refresh or navigating to another tab and then back.&lt;/p>
&lt;p>Example XLSForm (this is a patient-level form):&lt;/p>
&lt;p>&lt;img src="../images/2.16.0-4526-2.png" alt="Screenshot">&lt;/p>
&lt;p>[&lt;a href="https://github.com/medic/medic-webapp/issues/4526">#4526&lt;/a>]&lt;/p>
&lt;h3 id="sort-places-by-date-last-visited">Sort places by date last visited&lt;/h3>
&lt;p>&lt;em>Puts the households who haven&amp;rsquo;t been seen in the longest time at the top, because you know how you hated it in school when the kids whose last names ended in &amp;ldquo;A&amp;rdquo; always got to be first in line?&lt;/em>&lt;/p>
&lt;p>When you enable the permission to see the date last visited in the people tab list, you will notice that a new icon appears in the top bar. This icon is for sorting the list of people. The default sort is alphabetical, as you have probably noticed. The new icon allows you to sort your families or households by the date last visited. You will need to enable the permission for viewing the date last visited and configure one or more forms to be included in the calculation of the last visit date for each family (&lt;a href="#view-date-last-visited-for-places-on-the-people-tab">see previous section&lt;/a>). Once you&amp;rsquo;ve done that, the sort will just work. By default, when you sort by &amp;ldquo;date last visited,&amp;rdquo; the households you saw &lt;em>least&lt;/em> recently will be at the top, gradually increasing to those you saw most recently. Because you know, you should prioritize the households who haven&amp;rsquo;t been seen in the longest amount of time.&lt;/p>
&lt;p>Fun fact: We drew this feature for the first time while chatting about visit practices in a workshop with LG CHPs in Uganda. See the drawings on the lower right that shows a family list being reordered by date, with those visited least recently at the top.&lt;/p>
&lt;p>&lt;img src="../images/2.16.0-4524-1.jpg" alt="Image">&lt;/p>
&lt;p>&lt;img src="../images/2.16.0-4524-2.png" alt="Comparison">&lt;/p>
&lt;p>&lt;a href="https://github.com/medic/medic-webapp/issues/4524">#4524&lt;/a>&lt;/p>
&lt;h3 id="toggle-universal-health-coverage-mode-on-and-off">Toggle Universal Health Coverage mode on and off&lt;/h3>
&lt;p>&lt;em>We&amp;rsquo;re not trying to play bi-partisan politics, we&amp;rsquo;re just trying to test some new features.&lt;/em>&lt;/p>
&lt;p>Showing the date last visited and being able to sort contacts by the date they were last visited by a CHW are the first two features designed to achieve Universal Health Coverage (UHC). While the world is quickly catching onto the importance of this, we know that not all programs are ready to implement this approach. Feature #4525 makes it possible to turn these UHC features on or off. It&amp;rsquo;s still very early in our UHC design process so we&amp;rsquo;ll be closely monitoring these features and conduct feedback sessions, so the UHC features previously described may still undergo some iteration. Check on the status of these features before implementing them in your project.&lt;/p>
&lt;p>&lt;a href="#view-date-last-visited-for-places-on-the-people-tab">As was described earlier&lt;/a>, enabling UHC mode is as simple as giving a user the permission &lt;code>can_view_last_visited_date&lt;/code>. This will give the user the last visit date in the people list and the ability to sort by the last visit date. Make sure you add the needed field to the forms you want to include as part of the last visit date calculation to avoid having a long list of &amp;ldquo;Last visit unknown&amp;rdquo;. Once CHWs start submitting these forms, the dates on the list will slowly update.&lt;/p>
&lt;p>&lt;img src="../images/2.16.0-4525.png" alt="Comparison">&lt;/p>
&lt;p>[&lt;a href="https://github.com/medic/medic-webapp/issues/4525">#4525&lt;/a>]&lt;/p>
&lt;h3 id="expand-use-of-the-verify-button-for-manager-review-of-chw-reports">Expand use of the verify button for manager review of CHW reports&lt;/h3>
&lt;p>&lt;em>The exciting world of data cleaning just got better.&lt;/em>&lt;/p>
&lt;p>We&amp;rsquo;ve created a new and improved verification workflow for managers. Before, we just had two states for each report, verified and unverified. A report was verified by clicking the verify button.&lt;/p>
&lt;p>&lt;img src="../images/2.16.0-4529-1.png" alt="Comparison">&lt;/p>
&lt;p>With the new feature, clicking on the verify button opens a small menu with two options: Correct and Has errors. This allows a manager to review a report and mark it correct if it looks good and mark it as having errors if they need to follow up with the CHW for further verification. The status will also be synced to the CHW&amp;rsquo;s phone so they can see which reports were marked correct by their manager and which were marked as having errors.&lt;/p>
&lt;p>&lt;a href="#ability-to-add-more-user-roles">With our new configurable roles&lt;/a>, it is also possible for managers to have the ability to review reports while preventing CHWs from having this option, even if both are restricted/offline-first users.&lt;/p>
&lt;p>This feature was built to support the mRDT error-checking workflow for the Muso Innovation Network. Supervisors must log in to view photos of the mRDTs (&lt;a href="https://docs.google.com/document/d/1uXSqntenhxlGOeFtP7ScLcFmoid3kagPYn-EDoodP3s/edit#heading=h.4bwl8oo2mtpi">built in 2.14.0&lt;/a>) and check that the diagnosis reported by the CHW matches the photos. If the supervisor sees an error, they can now use this feature to mark it as such. Error rates are part of the CHW&amp;rsquo;s performance metrics so supervisors can see which CHWs are in need of additional training on implementing mRDTs. To complement this workflow, we built a widget on the CHP&amp;rsquo;s Targets page to accompany this workflow that tracks their monthly error rate.&lt;/p>
&lt;p>&lt;img src="../images/2.16.0-4529-2.png" alt="Comparison">&lt;/p>
&lt;p>[&lt;a href="https://github.com/medic/medic-webapp/issues/4529">#4529&lt;/a>]&lt;/p>
&lt;h3 id="allow-supervisors-to-review-specific-patient-reports">Allow supervisors to review specific patient reports&lt;/h3>
&lt;p>&lt;em>We call this feature Super-Vision! Supervisors now have the magical ability to see reports about patients without being able to view the patients themselves. #superpowers-for-supervisors&lt;/em>&lt;/p>
&lt;p>Apart from Standard, where we have very small numbers of users, supervisors are not able to view all patient reports due to device storage limits and app performance issues. However, there may be times when there are specific reports about patients that supervisors need to see, review, or take action on. This feature is not meant to allow supervisors to view all patient reports about every patient and it does not give supervisors the ability to see patient profiles. It is meant to better support workflows like reviewing mRDT images or confirming death reports. Currently, if a supervisor wanted to review an mRDT image in a patient assessment form or get a death confirmation task, she would need to have access to the patient. With this new feature, the supervisor only needs access to the patient assessment form or the death report form in order to do the review or receive the task.&lt;/p>
&lt;p>Below you&amp;rsquo;ll see the Reports page from the supervisor&amp;rsquo;s view. In this example, the supervisor has access to families and family reports, but does not have access to patients. Using this feature, we&amp;rsquo;ve configured it so that the supervisor &lt;strong>does&lt;/strong> have access to patient assessment forms so that they can be reviewed, even though she doesn&amp;rsquo;t have access to the patients themselves. As you can see in the screenshots below, the CHW has access to all patient- and family-level reports while the supervisor has access to all family-level reports AND the patient assessment report, but no other patient-level reports.&lt;/p>
&lt;p>&lt;img src="../images/2.16.0-4591-1.png" alt="Comparison">&lt;/p>
&lt;p>If you want a report submitted by the CHW about a patient to be viewable by the supervisor, you&amp;rsquo;ll need to make sure that the supervisor has access to families (&lt;code>replication_depth&lt;/code> of 2 in most cases) but no access to patients. You will also need to add a field to the patient-level form that the supervisor needs access to. The field should be a &lt;code>hidden&lt;/code> field called &lt;code>needs_signoff&lt;/code> that must be set to true in cases where the report needs to be reviewed by a manager. For example, if you only wanted a manager to review patient assessments where an mRDT was conducted, come up with a conditional statement to set the variable to true only for assessments where the mRDT was done. This hidden field must be a top-level field (not in any group and will be in &lt;code>doc.fields.needs_signoff&lt;/code> when you submit). To test, upload your form with this field, fill it out and submit. Log in as a user who is the supervisor of the CHW who submitted the form and make sure you are able to see the form you just submitted.&lt;/p>
&lt;p>Example XLSForm:
&lt;img src="../images/2.16.0-4591-2.png" alt="XLSForm">&lt;/p>
&lt;p>[&lt;a href="https://github.com/medic/medic-webapp/issues/4591">#4591&lt;/a>]&lt;/p>
&lt;h3 id="add-new-statuses-to-the-status-filter-on-the-reports-page">Add new statuses to the status filter on the reports page&lt;/h3>
&lt;p>&lt;em>Because even Superheros could use some help organizing their Inbox.&lt;/em>&lt;/p>
&lt;p>With the &lt;a href="#expand-use-of-the-verify-button-for-manager-review-of-chw-reports">new feature that allows managers to review reports&lt;/a>, we&amp;rsquo;ve updated the status filter to help managers easily find reports they need to review or reports they marked as having errors that need follow up. With these changes, we have retained the ability to filter by valid and invalid SMS reports. Here&amp;rsquo;s what happens when you select each of these filter options:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Manager review - &amp;ldquo;Not reviewed&amp;rdquo;:&lt;/strong> displays all valid reports (SMS and app) that have not been marked as correct or having errors by a manager&lt;/li>
&lt;li>&lt;strong>Manager review - &amp;ldquo;Reviewed: errors&amp;rdquo;:&lt;/strong> displays all reports (app or SMS) that were marked as having errors by a manager&lt;/li>
&lt;li>&lt;strong>Manager review - &amp;ldquo;Reviewed: correct&amp;rdquo;:&lt;/strong> displays all reports (app or SMS) that were marked as correct by a manager&lt;/li>
&lt;li>&lt;strong>SMS validity - &amp;ldquo;Valid SMS&amp;rdquo;:&lt;/strong> displays all SMS reports that were valid when received (regardless of whether they are &amp;ldquo;Not reviewed&amp;rdquo;, &amp;ldquo;Reviewed: errors&amp;rdquo;, or &amp;ldquo;Reviewed: correct&amp;rdquo;)&lt;/li>
&lt;li>&lt;strong>SMS validity - &amp;ldquo;Invalid SMS&amp;rdquo;:&lt;/strong> displays all SMS reports that were invalid when received and have red dots (applied automatically)&lt;/li>
&lt;/ul>
&lt;p>For example, if a manager wanted to review any recent patient assessments that they might have access to, she would filter by the patient assessment form type and the &amp;ldquo;Manager review - Not reviewed&amp;rdquo; status filter. This would give a list of assessment forms that have not yet been reviewed.&lt;/p>
&lt;p>&lt;img src="../images/2.16.0-4577-1.png" alt="Comparison">&lt;/p>
&lt;h4 id="before">Before&lt;/h4>
&lt;p>&lt;img src="../images/2.16.0-4577-2.png" alt="Screenshot">&lt;/p>
&lt;h4 id="after">After&lt;/h4>
&lt;p>&lt;img src="../images/2.16.0-4577-3.png" alt="Screenshot">&lt;/p>
&lt;p>[&lt;a href="https://github.com/medic/medic-webapp/issues/4577">#4577&lt;/a>]&lt;/p>
&lt;h3 id="use-family-equity-score-in-tasks-and-actions-about-family-members">Use family equity score in tasks and actions about family members&lt;/h3>
&lt;p>&lt;em>Jokes aside, this features is an important step in being able to deliver a preferential option for the poor. Read more about this here: &lt;a href="https://www.pih.org/article/in-the-company-of-the-poor">https://www.pih.org/article/in-the-company-of-the-poor&lt;/a>&lt;/em>&lt;/p>
&lt;p>Last year, we began implementing an equity survey in Kenya that determines a household&amp;rsquo;s wealth quintile based on a number of questions about their home, possessions, and access to safe drinking water, among other things. Although the wealth quintile could be used to generate tasks for the household, we wanted to make the equity quintile useful in targeting interventions at the patient level. With this feature, we&amp;rsquo;re now able to use the equity score to generate specific tasks about patients, such as increasing the number of pregnancy follow-ups for women in poorer households. We&amp;rsquo;re also able to display specific notes or questions within forms for patients in lower wealth quintiles, such as asking additional questions about children in poorer households when they are being screened for malnutrition. This feature makes the equity score more usable in patient workflows and is the first step toward greater targeting of services.&lt;/p>
&lt;p>We&amp;rsquo;re still learning how to deliver this feature well. We&amp;rsquo;ve heard from CHWs that they resist the approach that some families in their community would be &amp;ldquo;labeled&amp;rdquo; as poor in the app, even if they acknowledge that they prioritize these families differently in their daily workflows. Though this feature allows that &amp;ldquo;labeling&amp;rdquo; to happen on the backend, it may be helpful and important for a CHW to know why a family or patient has been asked these additional questions or given more frequent home visits. The Impact and Design teams are currently getting feedback on appropriate options. Please consult your designer and share back what you&amp;rsquo;re thinking and trying so we can all learn together!&lt;/p>
&lt;p>The feature works by pulling specific fields from a form filled at the family level and copying them to the profile of each family member in the household. For now, we are limited to the national quintile and the urban quintile. We don&amp;rsquo;t pull the raw scores, just the quintiles, which are easier to use in tasks and forms. To make sure your quintiles get copied, simply make sure that you have fields called &lt;code>NationalQuintile&lt;/code> and &lt;code>UrbanQuintile&lt;/code> defined as top-level fields in the form you&amp;rsquo;re using at the household level. These must end up at &lt;code>doc.fields.NationalQuintile&lt;/code> and &lt;code>doc.fields.UrbanQuintile&lt;/code> for this feature to work correctly.&lt;/p>
&lt;h4 id="sample-xlsform">Sample XLSForm&lt;/h4>
&lt;p>&lt;img src="../images/2.16.0-4700.png" alt="XLSForm">&lt;/p>
&lt;p>[&lt;a href="https://github.com/medic/medic-webapp/issues/4600">#4600&lt;/a>]&lt;/p>
&lt;h3 id="ability-to-add-more-user-roles">Ability to add more user roles&lt;/h3>
&lt;p>&lt;em>Because CHW Janet, CHW Supervisor Ann, and Paul the Data Guy don&amp;rsquo;t wear the same hat in real life and now they don&amp;rsquo;t have to in the app, either.&lt;/em>&lt;/p>
&lt;p>In order to make it possible to show the UHC mode features for some CHWs and not others, we decided to go ahead and implement configurable user roles. Up until now, we were limited to one user role for users that need offline access to their data. You have probably heard of the &amp;ldquo;restricted&amp;rdquo; user - this is the user type that allowed a CHW or manager to access data offline. However, this was limiting because every user that had offline data access had to have the same set of permissions. So, for example, a CHW and a supervisor had to have the same set of permissions, requiring both to have the permission to do something (such as delete reports) or neither would have permission to do it. This led to restrictions in what supervisors could do in order to avoid giving too many permissions to CHWs.&lt;/p>
&lt;p>With 2.16.0, we now have configurable roles! This means that a CHW and a supervisor can both access data offline but can have unique roles so that they can have different permissions. For example, a CHW might not be able to delete data, review reports, or bulk delete, but a supervisor could be given the ability to do one or more of these actions without affecting the permissions of the CHW.&lt;/p>
&lt;p>New roles can be created in the configuration pages. Instead of a permissions page, we now have a roles &amp;amp; permissions page. On this page we have a new tab for creating and managing user roles. Creating a new user role is as simple as creating a name and translation key for the user role and making sure you select the &amp;ldquo;Offline&amp;rdquo; checkbox if this user type needs access to data offline.&lt;/p>
&lt;p>&lt;img src="../images/2.16.0-4525-1.png" alt="Screenshot">&lt;/p>
&lt;p>The permissions page has also been updated to better accommodate a greater number of roles. We&amp;rsquo;ve changed the layout to a new format. This layout is temporary for now and we expect to improve it later in the year. You can see in this example that we now have roles for Supervisor, CHW and Online User, but you can create as many roles as you need, both for users that need access to data offline and for those accessing the app online.&lt;/p>
&lt;p>&lt;img src="../images/2.16.0-4525-2.png" alt="Screenshot">&lt;/p>
&lt;p>[&lt;a href="https://github.com/medic/medic-webapp/issues/4525">#4525&lt;/a>]&lt;/p>
&lt;h3 id="changed-use-of-colored-dot-on-the-reports-page">Changed use of colored dot on the reports page&lt;/h3>
&lt;p>&lt;em>Seeing spots? Or do we mean dots? Either way, you&amp;rsquo;re about to see a whole lot less of them. If they don&amp;rsquo;t go away, consult a tech lead or your family eye doctor.&lt;/em>&lt;/p>
&lt;p>Our use of the controversial &amp;ldquo;green dot&amp;rdquo; and &amp;ldquo;red dot&amp;rdquo; on the reports page hearkens back to the days when 100% of Medic users where using SMS. It was a quick way to see which reports were valid and which were not. Once we started having users on the mobile app, this feature became less useful because every single report was valid. This is because we have more control over how the data is entered and do not rely on the end user entering a valid Medic ID. We decided to modernize our use of red and green dots so that they make more sense across our SMS and app projects. Here&amp;rsquo;s our new approach:&lt;/p>
&lt;ul>
&lt;li>We&amp;rsquo;ve removed the green dot completely from valid incoming reports. No dot = all good here = no attention needed. This is regardless of whether it came from the mobile app, a TextForm, or Medic Collect.&lt;/li>
&lt;li>Without green dots on every report, red and green dots now have more meaning. Using our new manager review feature (#4529), a manager can now use a green dot to indicate that a form is correct, and a red dot if it contains an error.&lt;/li>
&lt;li>We also know that it&amp;rsquo;s important to be able to see invalid reports coming in over SMS, either TextForms or Collect forms. For these invalid SMS reports, the red dot with an &amp;ldquo;x&amp;rdquo; is automatically applied. You can filter to see all invalid SMS reports by using the status filter dropdown. Here&amp;rsquo;s a summary of how the red and green dots now work:&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../images/2.16.0-4574-1.png" alt="Comparison">&lt;/p>
&lt;p>Here&amp;rsquo;s a look at the reports list so you can see the before and after:&lt;/p>
&lt;p>&lt;img src="../images/2.16.0-4574-2.png" alt="Comparison">&lt;/p>
&lt;p>The screenshot on the left shows the current use of dots for an SMS project. On a mobile app project, there&amp;rsquo;s a green dot on every report.&lt;/p>
&lt;p>In the screenshot on the right, we&amp;rsquo;ve removed the green dots from valid reports. The green dot can be applied when a supervisor has reviewed a report and marked it correct. The red dot for invalid SMS reports is still automatically applied. Additionally, a supervisor can review a report and apply the red dot if the report has errors.&lt;/p>
&lt;p>The supervisor review feature is optional and should only be encouraged if it&amp;rsquo;s part of their workflow. It&amp;rsquo;s also perfectly fine for supervisors to use it selectively - to only mark reports with errors or to only review certain reports (such as mRDT, but not child assessments). The intention isn&amp;rsquo;t to give supervisors more review work but to reduce the noise on the Reports page and make the information that gets shown there more meaningful.&lt;/p>
&lt;p>[&lt;a href="https://github.com/medic/medic-webapp/issues/4574">#4574&lt;/a>]&lt;/p>
&lt;h3 id="updated-header-for-reports">Updated header for reports&lt;/h3>
&lt;p>&lt;em>UI fairy dust alert! We made viewing reports on mobile prettier.&lt;/em>&lt;/p>
&lt;p>We&amp;rsquo;ve updated the header when you&amp;rsquo;re viewing reports in the Reports page. The new design works much better on smaller screens:&lt;/p>
&lt;ul>
&lt;li>We&amp;rsquo;ve removed the detailed date&lt;/li>
&lt;li>We&amp;rsquo;ve moved the relative date to the left side, below the sender name.&lt;/li>
&lt;li>If you hover over the relative date, the full date and exact time the report was received will appear. If you&amp;rsquo;re on a touchscreen, do a long tap on the relative date to see the detailed date.&lt;/li>
&lt;li>If a manager has reviewed this report and marked it correct or marked it as having errors, the green or red dot would appear at the top right.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../images/2.16.0-4576-1.png" alt="Comparison">&lt;/p>
&lt;h4 id="before-1">Before&lt;/h4>
&lt;p>&lt;img src="../images/2.16.0-4576-2.png" alt="Screenshot">&lt;/p>
&lt;h4 id="after-1">After&lt;/h4>
&lt;p>&lt;img src="../images/2.16.0-4576-3.png" alt="Screenshot">&lt;/p>
&lt;p>[&lt;a href="https://github.com/medic/medic-webapp/issues/4576">#4576&lt;/a>]&lt;/p>
&lt;h3 id="allow-death-confirmation-form-to-specify-the-date-of-death">Allow death confirmation form to specify the date of death&lt;/h3>
&lt;p>&lt;em>Because the only thing worse than getting your birthday wrong is…&lt;/em>&lt;/p>
&lt;p>In 2.15.0, &lt;a href="./2.15.0.md#death-reporting">we added support for death reporting workflows&lt;/a>. One glitch we realized was that the date of death was being set to the date that the death confirmation form was submitted. With 2.16.0, we&amp;rsquo;ve added an improvement to the workflow. It&amp;rsquo;s now possible to set a specific date of death in your death confirmation form. This makes the workflow more flexible by allowing a nurse to enter the confirmed date of death in the death confirmation form.&lt;/p>
&lt;p>In order to include a user-selected date of death as the official date of death listed in the Medic app, you&amp;rsquo;ll need to make sure there is a field in the death confirmation form that lists the exact date of death and then indicate in your &lt;code>app_settings&lt;/code> that this field should be used for the date of death.&lt;/p>
&lt;p>Example XLSForm with &lt;code>date_of_death&lt;/code> field:
&lt;img src="../images/2.16.0-4636.png" alt="Screenshot">&lt;/p>
&lt;p>Example &lt;code>app_settings&lt;/code> configuration:&lt;/p>
&lt;pre>&lt;code>&amp;quot;transitions&amp;quot;: {
&amp;quot;death_reporting&amp;quot;: true
},
&amp;quot;death_reporting&amp;quot;: {
&amp;quot;mark_deceased_forms&amp;quot;: [
&amp;quot;death_confirmation&amp;quot;
],
&amp;quot;undo_deceased_forms&amp;quot;: [
&amp;quot;undo_death&amp;quot;
],
&amp;quot;date_field&amp;quot;: &amp;quot;fields.date_of_death&amp;quot;
}
&lt;/code>&lt;/pre>&lt;p>[&lt;a href="https://github.com/medic/medic-webapp/issues/4636">#4636&lt;/a>]&lt;/p>
&lt;h2 id="bug-fixes">Bug Fixes&lt;/h2>
&lt;h3 id="updated-google-libphonenumber">Updated google-libphonenumber&lt;/h3>
&lt;p>&lt;em>Now you can change your number to avoid your ex without missing a single Medic reminder.&lt;/em>&lt;/p>
&lt;p>We&amp;rsquo;ve updated to the latest google-libphonenumber to make sure our app will accept new phone numbers across all of the countries where we work. The current version is 3.1.8. [&lt;a href="https://github.com/medic/medic-webapp/issues/4665">#4665&lt;/a>]&lt;/p>
&lt;h3 id="fixed-a-performance-issue-with-loading-contacts">Fixed a performance issue with loading contacts&lt;/h3>
&lt;p>&lt;em>CHWs see a lot of people every day. That&amp;rsquo;s a lot of searching! We&amp;rsquo;ve improved search performance by 30% which really adds up.&lt;/em>&lt;/p>
&lt;p>Loading contacts is now done with an &lt;code>allDocs&lt;/code> request instead of using custom views. This improves performance of searching on the people tab and on the reports tab. It&amp;rsquo;s a workaround for now as we look further into the root cause of the slowness. [&lt;a href="https://github.com/medic/medic-webapp/issues/4666">#4666&lt;/a>]&lt;/p></description></item><item><title>Core: 2.16.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.16.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.16.1/</guid><description>
&lt;h2 id="whats-new">What&amp;rsquo;s New&lt;/h2>
&lt;h3 id="show-an-icon-next-to-families-or-areas-that-are-overdue-for-a-visit">Show an icon next to families or areas that are overdue for a visit&lt;/h3>
&lt;p>&lt;em>As the ICONic Britney Spears once sang, &amp;ldquo;Show me a siiiiiign… [visit] me, baby, one more time!&amp;quot;&lt;/em>&lt;/p>
&lt;p>In order to help CHWs achieve full coverage of every family or household they care for, we added a feature &lt;a href="https://docs.google.com/document/d/1pPk6FAuLUPKUYnCRgruPk6Lh5IeWzu6IPD1KTFOi6YQ/edit#heading=h.1mauws8bn005">in 2.16&lt;/a> to update the list of families or areas to display the date that family or area was last visited. Now, we&amp;rsquo;ve added an icon next to families that were visited more than a month ago to help CHWs quickly spot whom they might visit. Currently, the time frame of &amp;ldquo;more than a month ago&amp;rdquo; is not configurable. [&lt;a href="https://github.com/medic/medic-webapp/issues/4747">#4747&lt;/a>]&lt;/p>
&lt;p>&lt;img src="../images/2.16.1-4747.png" alt="Screenshot">&lt;/p></description></item><item><title>Core: 2.17.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.17.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.17.0/</guid><description>
&lt;h2 id="whats-new">What&amp;rsquo;s New&lt;/h2>
&lt;h3 id="show-pictures-in-the-report-view-history-tab">Show pictures in the report view (History tab)&lt;/h3>
&lt;p>&lt;em>Your selfies are safe with us (and now visible in the Reports tab).&lt;/em>&lt;/p>
&lt;p>Photos uploaded by CHWs are now visible in the Reports view, or History tab. This is currently being used in the mRDT workflow by supervisors to confirm that CHWs read the mRDT test results correctly. [&lt;a href="https://github.com/medic/medic-webapp/issues/4742">#4742&lt;/a>]&lt;/p>
&lt;p>&lt;img src="../images/2.17.0-4742.png" alt="Screenshot">&lt;/p>
&lt;h3 id="improve-styling-of-mrdt-enketo-widget">Improve styling of mRDT Enketo widget&lt;/h3>
&lt;p>&lt;em>&amp;ldquo;OK, but make it pretty.&amp;rdquo; Fine, here you go: ✨ UI fairy dust ✨&lt;/em>&lt;/p>
&lt;p>We&amp;rsquo;ve improved styling by:&lt;/p>
&lt;ul>
&lt;li>Moving the &amp;ldquo;Take Photo&amp;rdquo; button **above ** where the photo is;&lt;/li>
&lt;li>Adding a space between the photo and the &amp;ldquo;Take Photo&amp;rdquo; button;&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../images/2.17.0-4745.png" alt="Screenshot">&lt;/p>
&lt;p>[&lt;a href="https://github.com/medic/medic-webapp/issues/4745">#4745&lt;/a>]&lt;/p>
&lt;h3 id="include-mrdt-in-an-android-release">Include mRDT in an android release&lt;/h3>
&lt;p>We made changes in the Android container to make mRDT-related features available. [&lt;a href="https://github.com/medic/medic-webapp/issues/4744">#4744&lt;/a>]&lt;/p>
&lt;h3 id="include-mrdt-in-a-webapp-release">Include mRDT in a webapp release&lt;/h3>
&lt;p>We included mRDT-related features in a webapp release. [&lt;a href="https://github.com/medic/medic-webapp/issues/4743">#4743&lt;/a>]&lt;/p></description></item><item><title>Core: 2.18.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.18.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.18.0/</guid><description>
&lt;h2 id="whats-new">What&amp;rsquo;s New&lt;/h2>
&lt;h3 id="make-people-page-default-sort-configurable-uhc-mode">Make People page default sort configurable (UHC mode)&lt;/h3>
&lt;p>Previously, the default sort for the People page list was alphabetical. We&amp;rsquo;ve now made the default sort configurable. For UHC mode, this would likely mean sorting by last visited date. In the future, it could include sorting by number of visits this month or another value.&lt;/p>
&lt;p>To enable default contact sorting to be based on last visited date, you need to configure it in app_settings. &lt;a href="https://docs.communityhealthtoolkit.org/apps/reference/app-settings/">Please visit the following documentation in cht-docs to learn how&lt;/a>. [&lt;a href="https://github.com/medic/medic-webapp/issues/4752">#4752&lt;/a>]&lt;/p>
&lt;h3 id="add-display-of-visit-counts-and-conditionally-style-them-uhc-mode">Add display of visit counts and conditionally style them (UHC mode)&lt;/h3>
&lt;p>We added visit count numbers to the right side of each family row. The visit count will display a count of the number of times that family has been visited so far within the current month. The exact definition of the calendar month is configurable. This is because some partners may follow the Western calendar literally, while other partners have different definitions of a month (ex: Muso counts from the 26th of one month until the 25th of the next month). Whatever forms have been configured to calculate &amp;ldquo;Date last visited&amp;rdquo; will be the same forms used to calculate &amp;ldquo;Visits this month.&amp;rdquo; Please note this will be a straightforward count of forms submitted and cannot be configured to only include a max number of forms in a particular time frame, such as &amp;ldquo;per day.&amp;rdquo;&lt;/p>
&lt;p>These visit counts are also available to be conditionally styled. If the partner has no specific goals, just like with Targets, the text is normal black. If the partner does have specific goals, we use red to indicate &amp;ldquo;bad&amp;rdquo;, yellow to indicate &amp;ldquo;ok&amp;rdquo; and green to indicate &amp;ldquo;good&amp;rdquo; or &amp;ldquo;goal met.&amp;rdquo; It is also possible to display an icon next to the count number. This icon is only available as an option if the partner has a goal. If the partner does not have a goal, there will never be an icon. The icon is positioned to the left of the count number on the same baseline.&lt;/p>
&lt;p>Note: We removed the red warning icon by the date last visited text that we implemented in 2.16.1. The new functionality and location of the icon as described here replaces what we did in 2.16.1. It used to be tied to date last visited. It is now tied to visits this month.&lt;/p>
&lt;p>&lt;img src="../images/2.18.0-4758.png" alt="Screenshots">&lt;/p>
&lt;p>To enable the specific goal (which color codes the number of visits), you need to configure it in app_settings. &lt;a href="https://docs.communityhealthtoolkit.org/apps/reference/app-settings/#optional-settings">Please visit the following documentation in cht-docs to learn how&lt;/a>. [&lt;a href="https://github.com/medic/medic-webapp/issues/4758">#4758&lt;/a>]&lt;/p>
&lt;h2 id="improvements">Improvements&lt;/h2>
&lt;h3 id="lhs-list-doesnt-update-out-of-page-items">LHS list doesn&amp;rsquo;t update &amp;ldquo;out of page&amp;rdquo; items&lt;/h3>
&lt;p>LiveList and Search webapp services previously did not support sorting items by fields/values that are likely to change (e.g. by last visited date). Now, when the list is multiple pages long and it&amp;rsquo;s not entirely loaded, if an existent item receives a change that would push it lower than the current number of loaded items, it will refresh and move to appropriate position in the list. [&lt;a href="https://github.com/medic/medic-webapp/issues/4782">#4782).&lt;/a>]&lt;/p>
&lt;h3 id="there-are-view-generation-errors">There are view generation errors&lt;/h3>
&lt;p>[&lt;a href="https://github.com/medic/medic-webapp/issues/4612">#4612&lt;/a>]&lt;/p></description></item><item><title>Core: 2.18.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.18.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.18.1/</guid><description>
&lt;h2 id="whats-new">What&amp;rsquo;s New&lt;/h2>
&lt;h3 id="count-two-visits-on-the-same-day-as-one-visit">Count two visits on the same day as one visit&lt;/h3>
&lt;p>If a family is visited twice on the same day it now only counts as one visit in UHC mode. [&lt;a href="https://github.com/medic/medic-webapp/issues/4897">#4897&lt;/a>]&lt;/p>
&lt;h3 id="inputs-group-not-saved-when-its-relevance-is-set-to-false">Inputs group not saved when its relevance is set to false&lt;/h3>
&lt;p>Form inputs are now always saved on the reports even when they are marked as not relevant to help with analytics and editing forms. [&lt;a href="https://github.com/medic/medic-webapp/issues/4875">#4875&lt;/a>]&lt;/p></description></item></channel></rss>